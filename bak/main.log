train: 5727 val: 4046 test: 11316
CUDA is available?: True
using cuda?: True
------------------------------
Epoch 0/499 (max_len=1, data=1000)
Train acc: 0.00 (abduce 100.00)
Dep:  Counter({(-1,): 1000})
Hit samples:  1000  Ave length:  1.0
Symbols:  15 [(0, 61), (1, 59), (2, 62), (3, 76), (4, 58), (5, 79), (6, 81), (7, 49), (8, 60), (9, 69), (10, 73), (11, 68), (12, 75), (13, 63), (14, 67)]
Semantics: 15/0/12 (total/solved/learn).
Symbol-02 (int), Samples:  12,  Counter({((), 7): 12})
Symbol-03 (int), Samples:  11,  Counter({((), 0): 11})
Symbol-04 (int), Samples:  11,  Counter({((), 1): 11})
Symbol-05 (int), Samples:  14,  Counter({((), 8): 14})
Symbol-06 (int), Samples:  12,  Counter({((), 0): 12})
Symbol-07 (int), Samples:  10,  Counter({((), 5): 10})
Symbol-09 (int), Samples:  10,  Counter({((), 2): 10})
Symbol-10 (int), Samples:  11,  Counter({((), 4): 11})
Symbol-11 (int), Samples:  11,  Counter({((), 9): 11})
Symbol-12 (int), Samples:  12,  Counter({((), 8): 12})
Symbol-13 (int), Samples:  10,  Counter({((), 4): 10})
Symbol-14 (int), Samples:  13,  Counter({((), 5): 13})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-00: None 0.00
Symbol-01: None 0.00
Symbol-06: None 0.00
Symbol-08: None 0.00
Symbol-12: None 0.00
Symbol-13: None 0.00
Symbol-14: None 0.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Epoch time: 3m 27s
------------------------------
Epoch 1/499 (max_len=1, data=1000)
Train acc: 5.79 (abduce 100.00)
Dep:  Counter({(-1,): 1000})
Hit samples:  1000  Ave length:  1.0
Symbols:  15 [(0, 15), (1, 14), (2, 119), (3, 110), (4, 112), (5, 112), (6, 8), (7, 111), (8, 19), (9, 111), (10, 111), (11, 115), (12, 15), (13, 12), (14, 16)]
Semantics: 15/8/1 (total/solved/learn).
Symbol-08 (int), Samples:  10,  Counter({((), 3): 10})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-00: None 0.00
Symbol-01: None 0.00
Symbol-06: None 0.00
Symbol-12: None 0.00
Symbol-13: None 0.00
Symbol-14: None 0.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Epoch time: 3m 22s
------------------------------
Epoch 2/499 (max_len=1, data=1000)
Train acc: 5.00 (abduce 100.00)
Dep:  Counter({(-1,): 1000})
Hit samples:  1000  Ave length:  1.0
Symbols:  15 [(0, 23), (1, 6), (2, 100), (3, 100), (4, 100), (5, 100), (6, 9), (7, 100), (8, 108), (9, 100), (10, 100), (11, 100), (12, 14), (13, 10), (14, 30)]
Semantics: 15/9/4 (total/solved/learn).
Symbol-00 (int), Samples:  23,  Counter({((), 6): 23})
Symbol-12 (int), Samples:  14,  Counter({((), 6): 14})
Symbol-13 (int), Samples:  10,  Counter({((), 6): 10})
Symbol-14 (int), Samples:  30,  Counter({((), 6): 30})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-01: None 0.00
Symbol-06: None 0.00
Symbol-12: None 0.00
Symbol-13: None 0.00
Symbol-14: None 0.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Epoch time: 3m 24s
------------------------------
Epoch 3/499 (max_len=1, data=1000)
Train acc: 5.94 (abduce 100.00)
Dep:  Counter({(-1,): 1000})
Hit samples:  1000  Ave length:  1.0
Symbols:  10 [(0, 100), (2, 100), (3, 100), (4, 100), (5, 100), (7, 100), (8, 100), (9, 100), (10, 100), (11, 100)]
Semantics: 15/10/0 (total/solved/learn).
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-01: None 0.00
Symbol-06: None 0.00
Symbol-12: None 0.00
Symbol-13: None 0.00
Symbol-14: None 0.00
Epoch time: 0m 0s
------------------------------
Epoch 4/499 (max_len=1, data=1000)
Train acc: 6.61 (abduce 100.00)
Dep:  Counter({(-1,): 1000})
Hit samples:  1000  Ave length:  1.0
Symbols:  10 [(0, 100), (2, 100), (3, 100), (4, 100), (5, 100), (7, 100), (8, 100), (9, 100), (10, 100), (11, 100)]
Learn perception with 1000 samples, take 172 sec.
Learn syntax with 1000 samples, take 2 sec.
result accuracy by digit:
0 ( 0%) 90.00
1 ( 0%) 100.00
2 ( 0%) 90.00
3 ( 0%) 70.00
4 ( 0%) 100.00
5 ( 0%) 90.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 70.00
9 ( 0%) 90.00
val (Perception Acc=9.00, Syntax Acc=27.44, Result Acc=2.22)
Epoch time: 2m 58s
------------------------------
Epoch 5/499 (max_len=3, data=2820)
Train acc: 30.89 (abduce 68.51)
Dep:  Counter({(-1,): 1000, (2, 2, -1): 471, (1, -1, 1): 461})
Hit samples:  1932  Ave length:  1.96
Symbols:  15 [(0, 247), (1, 268), (2, 281), (3, 186), (4, 289), (5, 272), (6, 299), (7, 282), (8, 245), (9, 283), (10, 487), (11, 292), (12, 237), (13, 64), (14, 64)]
Semantics: 15/10/5 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples: 100,  Counter({((6, 4), 12): 4, ((9, 4), 9): 4, ((2, 3), 5): 3, ((3, 7), 21): 3, ((5, 3), 15): 3, ((8, 4), 16): 3, ((1, 3), 3): 3, ((0, 8), 8): 3, ((6, 5), 30): 3, ((9, 9), 81): 2, ((6, 2), 12): 2, ((1, 4), 4): 2, ((4, 4), 16): 2, ((5, 6), 30): 2, ((7, 1), 7): 2, ((2, 7), 14): 2, ((1, 1), 9): 2, ((1, 8), 8): 2, ((3, 8), 21): 2, ((9, 1), 14): 2, ((5, 8), 40): 2, ((4, 2), 8): 2, ((2, 8), 8): 2, ((5, 4), 11): 2, ((7, 9), 28): 2, ((9, 5), 15): 2, ((2, 5), 7): 1, ((5, 1), 6): 1, ((5, 7), 12): 1, ((7, 3), 21): 1, ((6, 1), 15): 1, ((0, 4), 5): 1, ((2, 0), 2): 1, ((5, 9), 45): 1, ((8, 9), 72): 1, ((0, 2), 2): 1, ((7, 7), 14): 1, ((2, 9), 4): 1, ((3, 5), 8): 1, ((8, 6), 48): 1, ((4, 8), 12): 1, ((4, 9), 4): 1, ((8, 5), 24): 1, ((9, 2), 9): 1, ((2, 4), 9): 1, ((9, 8), 8): 1, ((4, 7), 8): 1, ((7, 2), 42): 1, ((0, 7), 7): 1, ((8, 7), 56): 1, ((8, 2), 56): 1, ((3, 2), 6): 1, ((0, 1), 0): 1, ((6, 7), 54): 1, ((6, 9), 15): 1, ((7, 4), 28): 1, ((3, 4), 3): 1, ((4, 6), 24): 1, ((9, 3), 48): 1, ((7, 5), 9): 1, ((4, 0), 4): 1, ((5, 2), 16): 1, ((1, 7), 8): 1})
Symbol-06 (int -> int -> int), Samples: 100,  Counter({((9, 3), 12): 4, ((1, 8), 5): 4, ((5, 8), 40): 3, ((3, 7), 9): 3, ((4, 7), 12): 3, ((0, 4), 6): 3, ((1, 7), 7): 2, ((9, 4), 14): 2, ((7, 4), 42): 2, ((6, 1), 6): 2, ((3, 4), 12): 2, ((5, 7), 35): 2, ((8, 4), 12): 2, ((8, 9), 72): 2, ((2, 4), 8): 2, ((1, 4), 5): 2, ((9, 8), 18): 2, ((6, 4), 11): 2, ((2, 6), 12): 2, ((8, 2), 12): 2, ((4, 4), 9): 1, ((3, 8), 10): 1, ((9, 1), 15): 1, ((3, 6), 18): 1, ((3, 5), 7): 1, ((9, 6), 11): 1, ((7, 1), 7): 1, ((2, 5), 6): 1, ((0, 0), 0): 1, ((6, 5), 30): 1, ((7, 2), 14): 1, ((4, 5), 20): 1, ((7, 8), 15): 1, ((6, 9), 11): 1, ((1, 5), 10): 1, ((2, 9), 5): 1, ((6, 7), 42): 1, ((2, 1), 3): 1, ((5, 3), 15): 1, ((5, 6), 30): 1, ((1, 3), 4): 1, ((8, 6), 32): 1, ((7, 9), 16): 1, ((5, 9), 9): 1, ((2, 7), 9): 1, ((6, 6), 36): 1, ((4, 6), 24): 1, ((3, 0), 5): 1, ((4, 3), 12): 1, ((6, 8), 48): 1, ((0, 6), 6): 1, ((2, 2), 30): 1, ((8, 8), 64): 1, ((3, 9), 27): 1, ((4, 1), 24): 1, ((5, 4), 11): 1, ((3, 2), 3): 1, ((0, 8), 24): 1, ((1, 2), 9): 1, ((8, 5), 7): 1, ((7, 5), 5): 1, ((0, 7), 9): 1, ((4, 9), 13): 1, ((0, 3), 9): 1, ((3, 1), 7): 1, ((6, 2), 12): 1, ((2, 8), 21): 1, ((5, 2), 10): 1, ((1, 0), 1): 1, ((2, 0), 7): 1, ((9, 9), 63): 1, ((0, 2), 2): 1})
Symbol-12 (int -> int -> int), Samples: 100,  Counter({((9, 1), 9): 3, ((4, 4), 16): 3, ((3, 4), 7): 3, ((0, 6), 6): 3, ((2, 5), 10): 3, ((5, 9), 54): 3, ((2, 2), 16): 2, ((4, 0), 4): 2, ((8, 9), 72): 2, ((5, 8), 40): 2, ((9, 4), 10): 2, ((1, 1), 1): 2, ((3, 2), 6): 2, ((4, 3), 4): 2, ((8, 4), 32): 2, ((2, 4), 4): 2, ((5, 1), 5): 2, ((5, 7), 9): 2, ((2, 7), 9): 2, ((0, 5), 0): 2, ((7, 8), 15): 2, ((7, 4), 16): 2, ((1, 8), 9): 2, ((5, 6), 11): 2, ((9, 5), 45): 2, ((1, 4), 4): 2, ((5, 4), 9): 2, ((7, 2), 14): 2, ((6, 3), 9): 2, ((3, 7), 21): 1, ((7, 6), 12): 1, ((9, 9), 81): 1, ((6, 4), 7): 1, ((2, 9), 11): 1, ((2, 6), 12): 1, ((2, 1), 16): 1, ((7, 1), 7): 1, ((4, 8), 32): 1, ((6, 8), 14): 1, ((2, 8), 10): 1, ((1, 2), 1): 1, ((1, 3), 3): 1, ((6, 5), 11): 1, ((3, 0), 4): 1, ((3, 9), 21): 1, ((6, 1), 6): 1, ((4, 2), 4): 1, ((9, 7), 63): 1, ((9, 2), 18): 1, ((8, 5), 72): 1, ((8, 1), 9): 1, ((5, 2), 15): 1, ((6, 7), 12): 1, ((5, 0), 8): 1, ((0, 4), 16): 1, ((3, 6), 9): 1, ((7, 9), 8): 1, ((9, 3), 9): 1, ((4, 7), 20): 1, ((3, 5), 15): 1, ((7, 0), 3): 1, ((1, 9), 9): 1, ((4, 1), 12): 1, ((3, 8), 24): 1, ((8, 3), 24): 1})
Symbol-13 (int -> int -> int), Samples:  41,  Counter({((9, 2), 18): 4, ((9, 9), 45): 3, ((4, 9), 36): 2, ((1, 6), 6): 2, ((0, 4), 5): 2, ((7, 4), 5): 2, ((4, 4), 9): 2, ((9, 3), 27): 2, ((2, 7), 14): 2, ((7, 5), 35): 2, ((1, 5), 5): 1, ((6, 3), 18): 1, ((6, 4), 24): 1, ((5, 8), 40): 1, ((7, 8), 56): 1, ((1, 3), 4): 1, ((2, 4), 8): 1, ((0, 2), 6): 1, ((2, 2), 8): 1, ((5, 7), 35): 1, ((1, 1), 72): 1, ((3, 8), 24): 1, ((9, 1), 9): 1, ((6, 1), 12): 1, ((5, 6), 48): 1, ((9, 4), 72): 1, ((3, 4), 9): 1, ((8, 8), 64): 1})
Symbol-14 (int -> int -> int), Samples:  46,  Counter({((0, 4), 9): 3, ((9, 5), 54): 3, ((5, 4), 20): 3, ((4, 7), 28): 2, ((8, 9), 8): 2, ((8, 3), 11): 2, ((9, 2), 81): 2, ((9, 7), 16): 2, ((8, 8), 16): 2, ((8, 4), 17): 2, ((1, 4), 9): 1, ((9, 4), 8): 1, ((6, 2), 54): 1, ((2, 8), 10): 1, ((9, 1), 36): 1, ((4, 4), 36): 1, ((4, 8), 12): 1, ((1, 3), 4): 1, ((5, 0), 5): 1, ((1, 7), 21): 1, ((6, 4), 0): 1, ((8, 1), 72): 1, ((1, 0), 1): 1, ((4, 5), 9): 1, ((5, 5), 10): 1, ((5, 1), 6): 1, ((6, 7), 13): 1, ((5, 2), 45): 1, ((0, 9), 3): 1, ((1, 2), 6): 1, ((7, 8), 49): 1, ((7, 4), 13): 1, ((2, 4), 10): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.32
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (incr (if0 $1 (incr (incr 0)) (incr (incr ($2 (decr0 (decr0 $1)) 0))))))))))) 0.22
Symbol-06: fn (lambda (lambda (if0 $0 0 (incr (if0 $1 (incr $0) (incr (incr (incr $1)))))))) 0.18
Symbol-12: fn (lambda (lambda (if0 (decr0 (decr0 $0)) $1 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))))))) 0.25
Symbol-01: fn (lambda (lambda (if0 (decr0 (decr0 $1)) (incr (incr (decr0 (decr0 $0)))) $1))) 0.24
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Epoch time: 6m 47s
------------------------------
Epoch 6/499 (max_len=3, data=2820)
Train acc: 35.19 (abduce 69.08)
Dep:  Counter({(-1,): 1000, (1, -1, 1): 477, (2, 2, -1): 471})
Hit samples:  1948  Ave length:  1.97
Symbols:  15 [(0, 274), (1, 263), (2, 267), (3, 190), (4, 297), (5, 277), (6, 223), (7, 277), (8, 267), (9, 272), (10, 490), (11, 285), (12, 182), (13, 86), (14, 194)]
Semantics: 15/10/5 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  99,  Counter({((5, 6), 30): 4, ((0, 4), 7): 3, ((2, 4), 4): 3, ((6, 4), 6): 3, ((8, 4), 11): 2, ((3, 1), 18): 2, ((1, 4), 8): 2, ((8, 9), 72): 2, ((8, 8), 64): 2, ((7, 3), 21): 2, ((5, 5), 5): 2, ((1, 2), 2): 2, ((3, 6), 18): 2, ((8, 2), 16): 2, ((1, 3), 10): 2, ((7, 4), 7): 2, ((0, 3), 3): 2, ((1, 6), 2): 2, ((5, 2), 40): 2, ((3, 4), 5): 2, ((9, 4), 15): 2, ((2, 1), 2): 2, ((9, 1), 9): 2, ((1, 1), 2): 2, ((5, 1), 20): 2, ((2, 5), 18): 1, ((2, 7), 18): 1, ((6, 9), 42): 1, ((5, 3), 25): 1, ((6, 8), 13): 1, ((4, 4), 12): 1, ((4, 3), 20): 1, ((0, 8), 0): 1, ((7, 8), 56): 1, ((7, 6), 7): 1, ((3, 7), 21): 1, ((0, 6), 6): 1, ((9, 6), 9): 1, ((5, 4), 13): 1, ((1, 5), 10): 1, ((4, 8), 32): 1, ((2, 8), 8): 1, ((4, 1), 4): 1, ((3, 2), 18): 1, ((4, 0), 4): 1, ((4, 7), 49): 1, ((1, 7), 4): 1, ((3, 5), 15): 1, ((7, 5), 10): 1, ((2, 9), 4): 1, ((7, 1), 49): 1, ((7, 0), 7): 1, ((6, 1), 18): 1, ((9, 2), 10): 1, ((6, 6), 36): 1, ((3, 0), 3): 1, ((5, 9), 15): 1, ((4, 5), 4): 1, ((0, 9), 9): 1, ((7, 9), 8): 1, ((7, 7), 49): 1, ((8, 5), 24): 1, ((8, 1), 48): 1, ((2, 3), 14): 1, ((4, 2), 4): 1, ((3, 8), 8): 1, ((6, 3), 11): 1, ((6, 0), 8): 1, ((8, 6), 64): 1})
Symbol-06 (int -> int -> int), Samples: 100,  Counter({((2, 5), 10): 5, ((0, 5), 0): 3, ((4, 4), 8): 3, ((8, 9), 72): 3, ((5, 8), 40): 3, ((0, 9), 4): 3, ((7, 4), 11): 3, ((9, 4), 36): 3, ((5, 7), 35): 3, ((5, 2), 10): 2, ((8, 3), 24): 2, ((6, 7), 42): 2, ((1, 3), 42): 2, ((9, 1), 14): 2, ((7, 9), 12): 2, ((7, 8), 64): 2, ((8, 2), 16): 2, ((6, 1), 30): 2, ((0, 4), 5): 2, ((9, 7), 63): 2, ((6, 4), 11): 2, ((9, 9), 14): 2, ((7, 3), 21): 2, ((4, 9), 36): 2, ((4, 1), 8): 2, ((5, 6), 30): 2, ((3, 5), 7): 2, ((2, 4), 18): 1, ((1, 4), 5): 1, ((3, 9), 27): 1, ((5, 4), 8): 1, ((1, 9), 15): 1, ((7, 2), 6): 1, ((8, 7), 56): 1, ((8, 6), 32): 1, ((7, 7), 63): 1, ((3, 4), 27): 1, ((6, 2), 36): 1, ((9, 5), 54): 1, ((8, 8), 64): 1, ((7, 1), 14): 1, ((6, 5), 40): 1, ((2, 3), 4): 1, ((7, 0), 0): 1, ((8, 4), 36): 1, ((1, 7), 4): 1, ((3, 8), 17): 1, ((3, 1), 7): 1, ((2, 8), 4): 1, ((4, 8), 32): 1, ((8, 1), 32): 1, ((7, 6), 11): 1, ((6, 9), 11): 1, ((4, 7), 28): 1, ((7, 5), 35): 1, ((9, 6), 36): 1, ((3, 0), 5): 1, ((9, 3), 21): 1, ((1, 5), 7): 1, ((4, 2), 8): 1, ((2, 2), 6): 1, ((1, 6), 24): 1})
Symbol-12 (int -> int -> int), Samples:  91,  Counter({((4, 3), 12): 4, ((4, 4), 13): 4, ((6, 6), 36): 3, ((9, 6), 54): 3, ((3, 4), 6): 3, ((8, 3), 24): 2, ((1, 1), 1): 2, ((3, 7), 9): 2, ((9, 9), 81): 2, ((7, 4), 21): 2, ((9, 0), 9): 2, ((7, 2), 14): 2, ((6, 2), 16): 2, ((0, 4), 1): 2, ((5, 4), 45): 2, ((9, 5), 0): 2, ((8, 6), 32): 2, ((7, 3), 21): 2, ((8, 4), 9): 2, ((2, 5), 25): 2, ((0, 2), 0): 2, ((1, 6), 1): 2, ((8, 9), 72): 2, ((6, 3), 9): 2, ((3, 6), 9): 1, ((7, 1), 7): 1, ((1, 0), 1): 1, ((5, 5), 48): 1, ((9, 8), 72): 1, ((2, 4), 3): 1, ((8, 5), 11): 1, ((9, 3), 27): 1, ((0, 3), 6): 1, ((2, 2), 3): 1, ((1, 9), 27): 1, ((9, 1), 9): 1, ((8, 2), 64): 1, ((3, 2), 3): 1, ((9, 2), 12): 1, ((5, 0), 5): 1, ((8, 8), 10): 1, ((4, 2), 28): 1, ((7, 8), 56): 1, ((4, 9), 32): 1, ((4, 1), 36): 1, ((5, 7), 63): 1, ((6, 1), 5): 1, ((5, 9), 45): 1, ((7, 9), 63): 1, ((9, 7), 15): 1, ((2, 6), 2): 1, ((5, 2), 10): 1, ((5, 3), 13): 1, ((5, 1), 13): 1, ((2, 1), 2): 1, ((3, 5), 15): 1, ((6, 9), 54): 1, ((1, 3), 7): 1, ((6, 4), 42): 1, ((3, 8), 24): 1})
Symbol-13 (int -> int -> int), Samples:  51,  Counter({((1, 6), 2): 6, ((8, 4), 16): 5, ((9, 9), 81): 4, ((1, 4), 6): 3, ((6, 4), 8): 3, ((7, 7), 28): 2, ((4, 4), 7): 2, ((9, 6), 54): 2, ((8, 5), 20): 2, ((6, 8), 48): 2, ((3, 2), 6): 2, ((3, 5), 6): 2, ((3, 4), 9): 1, ((0, 4), 3): 1, ((8, 3), 16): 1, ((2, 1), 8): 1, ((5, 4), 12): 1, ((6, 1), 12): 1, ((2, 4), 2): 1, ((8, 1), 35): 1, ((7, 4), 2): 1, ((9, 2), 18): 1, ((6, 2), 54): 1, ((5, 2), 14): 1, ((1, 8), 2): 1, ((7, 2), 56): 1, ((6, 5), 12): 1, ((9, 4), 18): 1})
Symbol-14 (int -> int -> int), Samples:  96,  Counter({((4, 6), 10): 4, ((2, 8), 16): 4, ((7, 8), 15): 4, ((1, 6), 7): 4, ((7, 1), 14): 3, ((9, 1), 81): 3, ((0, 6), 6): 3, ((1, 4), 24): 3, ((9, 4), 11): 3, ((5, 1), 6): 3, ((9, 7), 16): 3, ((8, 8), 16): 2, ((0, 1), 1): 2, ((2, 1), 3): 2, ((4, 4), 7): 2, ((2, 9), 11): 2, ((0, 8), 8): 2, ((4, 3), 7): 2, ((3, 7), 10): 2, ((2, 6), 12): 2, ((7, 6), 13): 1, ((1, 3), 4): 1, ((3, 3), 6): 1, ((5, 3), 8): 1, ((5, 9), 14): 1, ((3, 1), 12): 1, ((5, 6), 11): 1, ((9, 9), 18): 1, ((6, 5), 11): 1, ((9, 8), 17): 1, ((4, 2), 36): 1, ((5, 5), 10): 1, ((9, 2), 11): 1, ((9, 3), 12): 1, ((9, 0), 27): 1, ((0, 4), 4): 1, ((2, 5), 7): 1, ((6, 9), 15): 1, ((7, 3), 10): 1, ((2, 3), 5): 1, ((8, 7), 15): 1, ((6, 1), 7): 1, ((1, 1), 2): 1, ((4, 9), 13): 1, ((7, 4), 11): 1, ((5, 7), 12): 1, ((6, 8), 14): 1, ((1, 7), 8): 1, ((6, 7), 13): 1, ((7, 9), 16): 1, ((4, 5), 9): 1, ((8, 2), 10): 1, ((1, 8), 32): 1, ((5, 0), 5): 1, ((6, 4), 10): 1, ((3, 9), 12): 1, ((1, 5), 6): 1, ((3, 4), 10): 1, ((8, 6), 72): 1, ((1, 2), 3): 1, ((2, 7), 9): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.74
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr (incr ($2 (decr0 $1) 0)))))))))) 0.38
Symbol-12: fn (lambda (lambda (if0 (decr0 (decr0 $0)) $1 (incr (if0 (decr0 (decr0 $1)) 0 (incr (incr $1))))))) 0.24
Symbol-01: fn (lambda (lambda (if0 (decr0 (decr0 $1)) (incr (if0 (decr0 $0) (incr 0) (decr0 $0))) $1))) 0.30
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) $1 (incr $1)))))))) 0.23
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Epoch time: 6m 47s
------------------------------
Epoch 7/499 (max_len=3, data=2820)
Train acc: 33.24 (abduce 67.77)
Dep:  Counter({(-1,): 1000, (2, 2, -1): 457, (1, -1, 1): 454})
Hit samples:  1911  Ave length:  1.95
Symbols:  15 [(0, 262), (1, 239), (2, 258), (3, 176), (4, 296), (5, 280), (6, 201), (7, 258), (8, 231), (9, 272), (10, 515), (11, 274), (12, 171), (13, 103), (14, 197)]
Semantics: 15/10/5 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples: 100,  Counter({((1, 8), 8): 8, ((1, 4), 4): 5, ((6, 4), 6): 4, ((8, 3), 24): 4, ((2, 4), 3): 3, ((8, 1), 8): 3, ((3, 4), 9): 3, ((7, 4), 8): 2, ((5, 1), 13): 2, ((5, 4), 6): 2, ((6, 1), 3): 2, ((8, 0), 8): 2, ((4, 1), 4): 2, ((9, 4), 72): 2, ((0, 4), 4): 2, ((9, 9), 81): 2, ((2, 1), 2): 2, ((2, 6), 12): 2, ((4, 8), 32): 2, ((9, 5), 45): 2, ((8, 4), 9): 2, ((0, 2), 2): 2, ((1, 2), 2): 1, ((9, 7), 9): 1, ((3, 8), 24): 1, ((4, 4), 16): 1, ((7, 8), 40): 1, ((8, 5), 72): 1, ((1, 5), 25): 1, ((9, 1), 9): 1, ((6, 0), 18): 1, ((8, 6), 32): 1, ((3, 3), 9): 1, ((9, 6), 9): 1, ((1, 9), 9): 1, ((5, 8), 14): 1, ((0, 5), 5): 1, ((5, 9), 45): 1, ((7, 9), 11): 1, ((3, 6), 18): 1, ((4, 9), 11): 1, ((6, 3), 36): 1, ((6, 6), 14): 1, ((6, 2), 16): 1, ((9, 2), 63): 1, ((7, 1), 7): 1, ((9, 8), 9): 1, ((6, 8), 13): 1, ((2, 7), 14): 1, ((5, 7), 5): 1, ((3, 7), 21): 1, ((1, 1), 2): 1, ((5, 2), 16): 1, ((3, 9), 11): 1, ((2, 5), 5): 1, ((5, 6), 30): 1, ((5, 3), 15): 1, ((5, 0), 5): 1, ((4, 6), 14): 1, ((0, 7), 7): 1, ((7, 6), 28): 1, ((2, 3), 3): 1})
Symbol-06 (int -> int -> int), Samples:  90,  Counter({((6, 4), 24): 5, ((8, 9), 72): 5, ((2, 2), 6): 3, ((4, 8), 8): 3, ((3, 6), 18): 3, ((3, 4), 12): 2, ((6, 8), 48): 2, ((7, 5), 12): 2, ((3, 2), 15): 2, ((7, 4), 12): 2, ((0, 4), 5): 2, ((8, 4), 10): 2, ((3, 1), 9): 2, ((9, 5), 10): 2, ((2, 4), 8): 2, ((5, 1), 45): 2, ((4, 4), 12): 2, ((9, 1), 14): 2, ((3, 8), 12): 2, ((8, 6), 48): 2, ((8, 1), 40): 2, ((5, 4), 45): 2, ((1, 0), 0): 1, ((1, 9), 4): 1, ((2, 9), 18): 1, ((0, 6), 5): 1, ((5, 2), 10): 1, ((4, 7), 28): 1, ((4, 2), 24): 1, ((6, 7), 10): 1, ((1, 2), 6): 1, ((3, 7), 8): 1, ((2, 1), 6): 1, ((7, 6), 6): 1, ((0, 1), 3): 1, ((1, 4), 8): 1, ((5, 5), 10): 1, ((1, 7), 14): 1, ((9, 6), 54): 1, ((4, 3), 12): 1, ((6, 5), 54): 1, ((0, 9), 10): 1, ((9, 2), 42): 1, ((6, 1), 11): 1, ((1, 5), 45): 1, ((7, 2), 6): 1, ((1, 1), 9): 1, ((5, 7), 35): 1, ((7, 3), 21): 1, ((9, 9), 10): 1, ((2, 3), 6): 1, ((7, 9), 63): 1, ((9, 7), 14): 1, ((2, 7), 14): 1, ((3, 0), 0): 1, ((2, 6), 12): 1, ((5, 6), 7): 1, ((3, 5), 7): 1, ((4, 1), 20): 1})
Symbol-12 (int -> int -> int), Samples:  94,  Counter({((7, 4), 16): 5, ((7, 5), 35): 4, ((8, 9), 72): 3, ((5, 8), 40): 3, ((7, 6), 42): 3, ((7, 8), 35): 3, ((8, 5), 32): 3, ((7, 1), 21): 3, ((6, 4), 9): 3, ((7, 7), 49): 2, ((2, 4), 11): 2, ((3, 4), 6): 2, ((4, 3), 32): 2, ((5, 1), 5): 2, ((3, 5), 15): 2, ((2, 0), 2): 2, ((4, 1), 4): 2, ((3, 8), 10): 2, ((8, 4), 32): 2, ((8, 6), 48): 2, ((1, 2), 1): 2, ((7, 0), 3): 2, ((2, 2), 18): 2, ((4, 4), 7): 2, ((9, 4), 12): 2, ((6, 9), 48): 2, ((4, 9), 36): 2, ((7, 9), 36): 1, ((2, 5), 3): 1, ((8, 7), 56): 1, ((3, 7), 21): 1, ((9, 2), 9): 1, ((6, 1), 30): 1, ((8, 1), 8): 1, ((4, 5), 20): 1, ((5, 7), 49): 1, ((3, 1), 21): 1, ((9, 3), 27): 1, ((4, 0), 4): 1, ((5, 9), 15): 1, ((2, 9), 18): 1, ((1, 5), 1): 1, ((9, 7), 12): 1, ((4, 2), 18): 1, ((6, 6), 36): 1, ((2, 3), 7): 1, ((0, 2), 0): 1, ((9, 1), 81): 1, ((4, 7), 28): 1, ((4, 6), 12): 1, ((1, 4), 8): 1, ((1, 7), 1): 1, ((9, 8), 63): 1, ((3, 3), 4): 1, ((8, 2), 72): 1})
Symbol-13 (int -> int -> int), Samples:  73,  Counter({((4, 4), 8): 5, ((8, 4), 16): 5, ((6, 1), 12): 4, ((6, 7), 12): 3, ((6, 5), 30): 3, ((6, 4), 12): 3, ((7, 4), 8): 3, ((5, 3), 10): 3, ((8, 5), 16): 2, ((9, 4), 11): 2, ((8, 8), 64): 2, ((8, 2), 16): 2, ((5, 4), 11): 2, ((9, 8), 18): 2, ((6, 9), 54): 2, ((8, 7), 64): 2, ((0, 3), 0): 2, ((1, 1), 2): 2, ((7, 5), 35): 2, ((4, 2), 8): 2, ((2, 5), 10): 2, ((7, 9), 63): 2, ((2, 2), 4): 1, ((7, 2), 14): 1, ((2, 4), 18): 1, ((9, 5), 18): 1, ((1, 4), 2): 1, ((7, 8), 14): 1, ((9, 7), 63): 1, ((6, 2), 12): 1, ((2, 8), 4): 1, ((3, 2), 6): 1, ((4, 1), 9): 1, ((1, 6), 2): 1, ((3, 9), 6): 1, ((8, 9), 72): 1, ((4, 7), 12): 1, ((9, 2), 18): 1})
Symbol-14 (int -> int -> int), Samples:  93,  Counter({((7, 4), 11): 5, ((1, 9), 10): 4, ((8, 4), 12): 4, ((6, 7), 42): 3, ((1, 2), 3): 3, ((6, 3), 18): 3, ((2, 4), 6): 3, ((2, 2), 4): 3, ((9, 5), 14): 2, ((7, 8), 15): 2, ((1, 0), 1): 2, ((9, 8), 17): 2, ((6, 9), 15): 2, ((5, 2), 7): 2, ((5, 0), 5): 2, ((1, 4), 5): 2, ((4, 9), 13): 2, ((2, 7), 9): 2, ((3, 1), 4): 2, ((9, 4), 7): 2, ((5, 4), 9): 2, ((0, 4), 4): 2, ((0, 1), 1): 2, ((6, 4), 10): 2, ((3, 4), 7): 2, ((2, 8), 10): 2, ((9, 9), 18): 1, ((7, 2), 42): 1, ((1, 8), 72): 1, ((5, 1), 6): 1, ((2, 9), 11): 1, ((0, 6), 6): 1, ((4, 4), 8): 1, ((2, 3), 5): 1, ((6, 5), 11): 1, ((5, 7), 12): 1, ((1, 1), 2): 1, ((7, 6), 13): 1, ((8, 2), 10): 1, ((8, 5), 13): 1, ((4, 7), 11): 1, ((5, 9), 15): 1, ((9, 7), 16): 1, ((4, 2), 6): 1, ((1, 7), 8): 1, ((8, 8), 16): 1, ((4, 1), 9): 1, ((1, 6), 7): 1, ((9, 0), 9): 1, ((3, 6), 9): 1, ((8, 3), 10): 1, ((4, 5), 9): 1, ((5, 8), 13): 1, ((6, 2), 8): 1, ((3, 8), 11): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.87
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr (incr ($2 (decr0 $1) 0)))))))))) 0.65
Symbol-12: fn (lambda (lambda (if0 (decr0 (decr0 $0)) $1 (incr (if0 (decr0 (decr0 $1)) 0 (incr (incr $1))))))) 0.26
Symbol-01: fn (lambda (lambda (if0 (decr0 (decr0 $1)) (incr (if0 (decr0 $0) (incr 0) (decr0 $0))) $1))) 0.44
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.25
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Epoch time: 6m 47s
------------------------------
Epoch 8/499 (max_len=3, data=2820)
Train acc: 31.12 (abduce 68.58)
Dep:  Counter({(-1,): 1000, (2, 2, -1): 469, (1, -1, 1): 465})
Hit samples:  1934  Ave length:  1.97
Symbols:  15 [(0, 268), (1, 221), (2, 271), (3, 180), (4, 289), (5, 259), (6, 217), (7, 244), (8, 240), (9, 316), (10, 517), (11, 284), (12, 179), (13, 112), (14, 205)]
Semantics: 15/10/5 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples: 100,  Counter({((0, 4), 6): 5, ((2, 4), 2): 4, ((5, 3), 15): 4, ((9, 5), 45): 4, ((5, 2), 14): 3, ((1, 7), 7): 3, ((1, 9), 9): 3, ((4, 2), 4): 3, ((8, 4), 40): 3, ((1, 4), 4): 2, ((9, 1), 9): 2, ((2, 2), 18): 2, ((4, 4), 4): 2, ((2, 0), 2): 2, ((3, 4), 9): 2, ((8, 8), 64): 2, ((3, 8), 24): 2, ((5, 1), 5): 2, ((5, 9), 45): 2, ((4, 7), 4): 2, ((7, 8), 8): 2, ((9, 7), 63): 2, ((7, 5), 35): 1, ((9, 8), 9): 1, ((8, 6), 48): 1, ((2, 8), 16): 1, ((6, 3), 18): 1, ((7, 3), 21): 1, ((7, 1), 16): 1, ((0, 7), 7): 1, ((9, 0), 9): 1, ((4, 9), 36): 1, ((3, 3), 5): 1, ((5, 4), 12): 1, ((7, 6), 9): 1, ((9, 4), 15): 1, ((5, 6), 30): 1, ((2, 7), 5): 1, ((3, 7), 24): 1, ((0, 8), 40): 1, ((3, 0), 5): 1, ((6, 4), 6): 1, ((5, 7), 15): 1, ((1, 2), 6): 1, ((2, 1), 18): 1, ((4, 8), 36): 1, ((0, 3), 3): 1, ((3, 6), 12): 1, ((7, 4), 56): 1, ((8, 3), 8): 1, ((7, 7), 7): 1, ((7, 9), 18): 1, ((0, 1), 13): 1, ((6, 9), 4): 1, ((6, 2), 4): 1, ((1, 3), 3): 1, ((0, 2), 2): 1, ((5, 5), 40): 1, ((6, 1), 6): 1, ((6, 7), 10): 1, ((4, 3), 12): 1, ((4, 0), 11): 1, ((9, 6), 11): 1, ((9, 9), 27): 1})
Symbol-06 (int -> int -> int), Samples: 100,  Counter({((5, 6), 30): 4, ((4, 4), 16): 3, ((7, 4), 28): 3, ((9, 8), 72): 3, ((9, 4), 14): 3, ((7, 9), 63): 3, ((3, 7), 21): 3, ((5, 4), 10): 3, ((8, 7), 56): 2, ((2, 7), 14): 2, ((2, 3), 6): 2, ((3, 4), 10): 2, ((9, 9), 81): 2, ((1, 5), 5): 2, ((6, 1), 9): 2, ((8, 4), 13): 2, ((0, 4), 5): 2, ((3, 5), 7): 2, ((6, 5), 30): 2, ((2, 6), 12): 2, ((2, 4), 12): 2, ((6, 4), 8): 2, ((5, 5), 10): 2, ((4, 5), 20): 2, ((2, 2), 18): 2, ((8, 3), 24): 2, ((3, 1), 9): 1, ((9, 6), 54): 1, ((3, 9), 27): 1, ((0, 2), 5): 1, ((1, 6), 24): 1, ((9, 1), 14): 1, ((7, 7), 28): 1, ((6, 7), 42): 1, ((2, 1), 12): 1, ((1, 9), 5): 1, ((4, 8), 28): 1, ((7, 3), 35): 1, ((1, 8), 6): 1, ((8, 9), 72): 1, ((4, 1), 11): 1, ((1, 4), 8): 1, ((4, 7), 8): 1, ((4, 6), 24): 1, ((6, 2), 36): 1, ((1, 7), 28): 1, ((9, 3), 27): 1, ((8, 2), 32): 1, ((6, 8), 36): 1, ((7, 2), 4): 1, ((4, 3), 12): 1, ((5, 7), 15): 1, ((5, 3), 45): 1, ((7, 6), 28): 1, ((6, 9), 54): 1, ((2, 9), 13): 1, ((9, 2), 45): 1, ((7, 8), 63): 1, ((5, 9), 45): 1, ((3, 0), 10): 1, ((0, 3), 9): 1, ((1, 2), 5): 1, ((8, 1), 32): 1, ((5, 2), 10): 1, ((4, 9), 9): 1})
Symbol-12 (int -> int -> int), Samples:  91,  Counter({((0, 4), 3): 6, ((5, 4), 20): 5, ((4, 2), 36): 4, ((6, 1), 6): 3, ((7, 2), 35): 3, ((7, 4), 10): 3, ((7, 1), 7): 2, ((2, 7), 16): 2, ((9, 2), 27): 2, ((4, 4), 5): 2, ((4, 9), 36): 2, ((4, 1), 4): 2, ((4, 6), 24): 2, ((7, 8), 64): 2, ((6, 3), 9): 2, ((6, 4), 42): 2, ((9, 4), 11): 2, ((4, 8), 13): 2, ((2, 2), 2): 2, ((1, 4), 7): 2, ((5, 5), 25): 2, ((7, 6), 42): 2, ((8, 1), 20): 2, ((8, 4), 64): 2, ((7, 9), 28): 2, ((1, 1), 1): 2, ((9, 7), 63): 2, ((3, 7), 21): 1, ((2, 1), 2): 1, ((3, 5), 45): 1, ((3, 2), 15): 1, ((2, 4), 10): 1, ((1, 3), 12): 1, ((6, 0), 48): 1, ((3, 4), 6): 1, ((3, 6), 18): 1, ((1, 8), 32): 1, ((8, 5), 11): 1, ((0, 8), 24): 1, ((3, 9), 6): 1, ((1, 7), 9): 1, ((3, 3), 9): 1, ((1, 2), 8): 1, ((8, 0), 8): 1, ((6, 2), 54): 1, ((9, 0), 9): 1, ((9, 6), 11): 1, ((8, 8), 64): 1, ((3, 1), 3): 1, ((7, 3), 10): 1, ((1, 5), 15): 1, ((6, 6), 36): 1})
Symbol-13 (int -> int -> int), Samples:  69,  Counter({((7, 2), 6): 6, ((2, 8), 4): 4, ((2, 2), 4): 3, ((6, 2), 12): 3, ((3, 4), 6): 3, ((4, 4), 6): 3, ((8, 7), 48): 3, ((6, 3), 18): 3, ((9, 4), 10): 3, ((0, 3), 0): 2, ((5, 2), 10): 2, ((2, 3), 10): 2, ((3, 2), 6): 2, ((1, 6), 8): 2, ((8, 3), 16): 2, ((2, 4), 8): 1, ((8, 2), 16): 1, ((9, 6), 54): 1, ((3, 8), 6): 1, ((3, 7), 6): 1, ((4, 8), 32): 1, ((4, 5), 24): 1, ((7, 4), 14): 1, ((7, 1), 13): 1, ((6, 9), 54): 1, ((9, 2), 54): 1, ((8, 4), 16): 1, ((1, 4), 8): 1, ((5, 6), 30): 1, ((5, 1), 10): 1, ((6, 4), 36): 1, ((0, 4), 8): 1, ((1, 5), 20): 1, ((2, 7), 16): 1, ((3, 9), 5): 1, ((6, 5), 12): 1, ((4, 1), 8): 1, ((0, 2), 0): 1, ((1, 1), 2): 1, ((2, 1), 4): 1, ((9, 8), 18): 1})
Symbol-14 (int -> int -> int), Samples:  97,  Counter({((8, 7), 15): 6, ((4, 4), 8): 4, ((5, 4), 9): 3, ((5, 0), 0): 3, ((9, 4), 13): 3, ((1, 9), 10): 3, ((2, 9), 18): 3, ((8, 2), 10): 2, ((0, 9), 9): 2, ((4, 8), 12): 2, ((1, 4), 7): 2, ((3, 4), 10): 2, ((4, 5), 9): 2, ((6, 6), 12): 2, ((6, 4), 54): 2, ((9, 3), 12): 2, ((5, 9), 14): 2, ((1, 7), 8): 2, ((2, 4), 7): 2, ((9, 9), 8): 2, ((9, 1), 10): 2, ((5, 6), 11): 2, ((6, 0), 6): 2, ((5, 1), 6): 2, ((8, 4), 12): 2, ((2, 6), 13): 2, ((6, 3), 18): 2, ((0, 1), 1): 2, ((3, 7), 10): 2, ((2, 1), 3): 2, ((9, 7), 16): 1, ((0, 8), 8): 1, ((7, 6), 13): 1, ((2, 2), 4): 1, ((9, 2), 11): 1, ((7, 8), 15): 1, ((6, 2), 8): 1, ((8, 9), 17): 1, ((1, 6), 7): 1, ((3, 1), 4): 1, ((8, 6), 14): 1, ((8, 8), 40): 1, ((7, 4), 11): 1, ((1, 8), 9): 1, ((4, 9), 13): 1, ((3, 5), 8): 1, ((7, 2), 9): 1, ((8, 5), 56): 1, ((8, 1), 14): 1, ((5, 8), 13): 1, ((6, 8), 14): 1, ((4, 0), 4): 1, ((2, 7), 9): 1, ((6, 1), 7): 1, ((7, 3), 10): 1, ((0, 2), 2): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 0.77
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr (incr ($2 (decr0 $1) 0)))))))))) 0.49
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.37
Symbol-12: fn (lambda (lambda (incr (if0 (decr0 (decr0 $0)) (decr0 $1) (incr (incr $1)))))) 0.32
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.24
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Epoch time: 6m 47s
------------------------------
Epoch 9/499 (max_len=3, data=2820)
Train acc: 33.20 (abduce 67.34)
Dep:  Counter({(-1,): 1000, (2, 2, -1): 464, (1, -1, 1): 435})
Hit samples:  1899  Ave length:  1.95
Symbols:  15 [(0, 251), (1, 238), (2, 269), (3, 187), (4, 283), (5, 272), (6, 215), (7, 258), (8, 233), (9, 271), (10, 486), (11, 288), (12, 180), (13, 100), (14, 166)]
Learn perception with 1356 samples, take 179 sec.
Learn syntax with 1356 samples, take 2 sec.
result accuracy by digit:
0 ( 0%) 80.00
1 ( 0%) 90.00
2 ( 0%) 90.00
3 ( 0%) 70.00
4 ( 0%) 80.00
5 ( 0%) 80.00
6 ( 0%) 90.00
7 ( 0%) 100.00
8 ( 0%) 70.00
9 ( 0%) 90.00
val (Perception Acc=5.22, Syntax Acc=46.21, Result Acc=3.56)
Epoch time: 3m 8s
------------------------------
Epoch 10/499 (max_len=3, data=2820)
Train acc: 52.15 (abduce 90.92)
Dep:  Counter({(-1,): 1000, (1, -1, 1): 999, (2, 2, -1): 561, (-1, 0, 0): 4})
Hit samples:  2564  Ave length:  2.22
Symbols:  15 [(0, 395), (1, 318), (2, 404), (3, 259), (4, 416), (5, 447), (6, 149), (7, 393), (8, 359), (9, 402), (10, 651), (11, 402), (12, 249), (13, 230), (14, 618)]
Semantics: 15/11/4 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  99,  Counter({((1, 7), 7): 5, ((1, 8), 8): 4, ((5, 4), 5): 3, ((1, 3), 3): 3, ((8, 4), 8): 3, ((6, 3), 18): 3, ((1, 4), 4): 3, ((6, 4), 6): 2, ((0, 4), 6): 2, ((2, 8), 2): 2, ((3, 4), 12): 2, ((4, 4), 4): 2, ((6, 2), 6): 2, ((7, 5), 35): 2, ((1, 9), 9): 2, ((2, 4), 2): 2, ((4, 1), 4): 2, ((1, 6), 6): 2, ((6, 1), 6): 2, ((9, 4), 36): 2, ((9, 9), 9): 2, ((6, 8), 48): 2, ((8, 9), 72): 2, ((4, 7), 4): 2, ((3, 1), 3): 1, ((4, 3), 4): 1, ((5, 0), 5): 1, ((3, 8), 3): 1, ((2, 1), 2): 1, ((2, 5), 10): 1, ((5, 2), 5): 1, ((7, 4), 7): 1, ((9, 6), 9): 1, ((5, 1), 5): 1, ((7, 1), 7): 1, ((9, 1), 9): 1, ((8, 1), 8): 1, ((2, 9), 18): 1, ((6, 0), 6): 1, ((9, 0), 9): 1, ((9, 5), 45): 1, ((1, 1), 2): 1, ((5, 5), 5): 1, ((9, 7), 9): 1, ((4, 8), 32): 1, ((6, 5), 10): 1, ((3, 6), 18): 1, ((5, 9), 54): 1, ((0, 6), 8): 1, ((8, 8), 64): 1, ((9, 8), 9): 1, ((5, 7), 35): 1, ((8, 3), 17): 1, ((6, 7), 6): 1, ((7, 8), 16): 1, ((9, 3), 72): 1, ((8, 0), 8): 1, ((3, 9), 3): 1, ((7, 6), 42): 1, ((8, 7), 56): 1, ((4, 6), 24): 1, ((5, 3), 15): 1, ((4, 5), 20): 1, ((1, 2), 2): 1, ((7, 9), 11): 1})
Symbol-06 (int -> int -> int), Samples:  96,  Counter({((8, 4), 13): 6, ((0, 4), 5): 6, ((6, 4), 11): 5, ((1, 5), 5): 4, ((9, 4), 14): 4, ((8, 3), 24): 4, ((8, 9), 72): 4, ((1, 4), 5): 4, ((3, 7), 7): 4, ((5, 2), 10): 3, ((9, 7), 14): 3, ((4, 2), 8): 3, ((7, 6), 12): 2, ((7, 4), 28): 2, ((3, 4), 27): 2, ((2, 3), 6): 2, ((2, 4), 8): 2, ((5, 8), 40): 2, ((5, 0), 10): 2, ((9, 6), 54): 1, ((1, 6), 5): 1, ((3, 5), 15): 1, ((4, 6), 24): 1, ((4, 5), 20): 1, ((6, 5), 11): 1, ((0, 0), 5): 1, ((7, 1), 12): 1, ((7, 5), 35): 1, ((3, 9), 27): 1, ((6, 6), 36): 1, ((8, 7), 24): 1, ((5, 9), 45): 1, ((5, 6), 30): 1, ((7, 8), 42): 1, ((6, 8), 48): 1, ((5, 5), 10): 1, ((5, 7), 35): 1, ((9, 3), 27): 1, ((5, 4), 12): 1, ((3, 8), 24): 1, ((4, 4), 16): 1, ((6, 1), 30): 1, ((9, 9), 81): 1, ((3, 2), 12): 1, ((2, 8), 6): 1, ((4, 3), 8): 1, ((2, 9), 18): 1, ((4, 9), 16): 1, ((3, 3), 9): 1, ((9, 2), 45): 1, ((8, 8), 32): 1})
Symbol-12 (int -> int -> int), Samples: 100,  Counter({((5, 4), 8): 4, ((8, 1), 8): 4, ((1, 4), 4): 3, ((3, 0), 3): 3, ((1, 1), 1): 3, ((8, 8), 64): 3, ((3, 4), 6): 3, ((7, 1), 7): 2, ((6, 3), 18): 2, ((6, 0), 6): 2, ((4, 0), 4): 2, ((3, 3), 6): 2, ((7, 3), 21): 2, ((4, 9), 36): 2, ((1, 0), 1): 2, ((9, 7), 63): 2, ((7, 0), 7): 2, ((5, 5), 25): 2, ((5, 2), 45): 2, ((5, 3), 15): 2, ((2, 2), 2): 1, ((5, 8), 40): 1, ((9, 9), 12): 1, ((7, 9), 63): 1, ((9, 4), 12): 1, ((8, 5), 40): 1, ((8, 4), 11): 1, ((0, 4), 3): 1, ((3, 2), 3): 1, ((8, 7), 56): 1, ((4, 3), 7): 1, ((3, 1), 3): 1, ((8, 0), 8): 1, ((4, 7), 49): 1, ((8, 9), 72): 1, ((9, 0), 9): 1, ((6, 4), 9): 1, ((2, 7), 18): 1, ((3, 8), 24): 1, ((9, 3), 12): 1, ((6, 9), 54): 1, ((6, 2), 6): 1, ((3, 7), 21): 1, ((0, 1), 1): 1, ((0, 5), 3): 1, ((9, 8), 72): 1, ((2, 4), 8): 1, ((1, 7), 21): 1, ((2, 9), 18): 1, ((8, 2), 40): 1, ((4, 2), 14): 1, ((5, 9), 8): 1, ((3, 9), 27): 1, ((4, 4), 7): 1, ((2, 0), 2): 1, ((5, 7), 8): 1, ((7, 8), 56): 1, ((9, 6), 54): 1, ((9, 1), 9): 1, ((9, 5), 45): 1, ((4, 6), 16): 1, ((7, 4), 10): 1, ((2, 3), 5): 1, ((7, 7), 10): 1, ((6, 7), 9): 1, ((4, 8), 32): 1, ((3, 6), 18): 1, ((7, 2), 28): 1, ((1, 8), 40): 1, ((6, 5), 30): 1, ((4, 1), 4): 1})
Symbol-13 (int -> int -> int), Samples:  98,  Counter({((2, 2), 4): 5, ((7, 2), 14): 5, ((6, 4), 12): 4, ((6, 2), 12): 4, ((3, 2), 6): 4, ((9, 2), 18): 3, ((8, 4), 16): 2, ((9, 8), 18): 2, ((8, 8), 16): 2, ((2, 4), 4): 2, ((6, 1), 12): 2, ((7, 5), 14): 2, ((6, 6), 12): 2, ((7, 9), 14): 2, ((0, 4), 0): 2, ((4, 2), 8): 2, ((5, 2), 10): 2, ((9, 4), 18): 2, ((3, 4), 9): 2, ((6, 5), 30): 2, ((5, 7), 35): 2, ((9, 5), 18): 2, ((6, 8), 48): 1, ((1, 4), 2): 1, ((7, 1), 14): 1, ((8, 6), 48): 1, ((5, 4), 10): 1, ((7, 4), 14): 1, ((2, 9), 4): 1, ((2, 8), 18): 1, ((1, 7), 2): 1, ((4, 9), 36): 1, ((7, 8), 56): 1, ((0, 9), 0): 1, ((1, 1), 2): 1, ((8, 0), 16): 1, ((2, 3), 30): 1, ((8, 3), 24): 1, ((5, 5), 10): 1, ((9, 0), 18): 1, ((9, 7), 63): 1, ((4, 4), 9): 1, ((9, 1), 18): 1, ((2, 1), 4): 1, ((8, 5), 16): 1, ((0, 8), 0): 1, ((4, 7), 28): 1, ((1, 0), 2): 1, ((6, 9), 54): 1, ((7, 7), 63): 1, ((3, 1), 15): 1, ((1, 8), 2): 1, ((2, 6), 7): 1, ((6, 0), 25): 1, ((8, 1), 48): 1, ((4, 0), 24): 1, ((9, 9), 18): 1, ((8, 2), 16): 1, ((8, 7), 56): 1, ((0, 0), 0): 1, ((2, 5), 4): 1, ((3, 5), 24): 1, ((4, 6), 32): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr (incr ($2 (decr0 $1) 0)))))))))) 0.74
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.70
Symbol-12: fn (lambda (lambda (incr (if0 (decr0 (decr0 $0)) (decr0 $1) (incr (incr $1)))))) 0.59
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.57
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 47s
------------------------------
Epoch 11/499 (max_len=3, data=2820)
Train acc: 48.11 (abduce 90.53)
Dep:  Counter({(-1,): 1000, (1, -1, 1): 975, (2, 2, -1): 574, (-1, 0, 0): 4})
Hit samples:  2553  Ave length:  2.22
Symbols:  15 [(0, 378), (1, 334), (2, 368), (3, 274), (4, 410), (5, 439), (6, 188), (7, 390), (8, 350), (9, 416), (10, 660), (11, 421), (12, 280), (13, 222), (14, 529)]
Semantics: 15/11/4 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples: 100,  Counter({((1, 7), 7): 5, ((5, 4), 5): 5, ((1, 8), 8): 4, ((8, 4), 8): 3, ((0, 4), 6): 3, ((9, 4), 9): 3, ((1, 9), 9): 3, ((1, 3), 3): 3, ((4, 4), 4): 2, ((4, 1), 4): 2, ((1, 1), 2): 2, ((6, 4), 6): 2, ((6, 2), 6): 2, ((6, 1), 6): 2, ((1, 4), 1): 2, ((5, 1), 5): 2, ((9, 1), 9): 2, ((9, 9), 9): 2, ((2, 8), 2): 2, ((8, 7), 56): 2, ((6, 3), 18): 1, ((2, 4), 2): 1, ((6, 8), 48): 1, ((2, 2), 2): 1, ((2, 1), 2): 1, ((7, 5), 35): 1, ((3, 4), 12): 1, ((6, 5), 30): 1, ((6, 0), 6): 1, ((8, 3), 24): 1, ((1, 6), 6): 1, ((9, 6), 9): 1, ((3, 8), 24): 1, ((7, 4), 7): 1, ((8, 9), 9): 1, ((5, 8), 40): 1, ((8, 0), 8): 1, ((5, 5), 5): 1, ((9, 0), 9): 1, ((9, 7), 9): 1, ((9, 8), 45): 1, ((7, 0), 7): 1, ((0, 6), 8): 1, ((2, 9), 18): 1, ((8, 1), 8): 1, ((7, 9), 42): 1, ((4, 3), 4): 1, ((5, 2), 5): 1, ((2, 5), 10): 1, ((4, 7), 4): 1, ((8, 5), 32): 1, ((9, 5), 45): 1, ((3, 9), 27): 1, ((6, 7), 6): 1, ((8, 6), 48): 1, ((5, 7), 35): 1, ((4, 6), 24): 1, ((7, 6), 11): 1, ((7, 2), 42): 1, ((7, 8), 16): 1, ((4, 5), 20): 1, ((0, 7), 12): 1, ((7, 3), 21): 1, ((4, 8), 4): 1, ((9, 3), 72): 1, ((2, 7), 16): 1, ((3, 0), 0): 1})
Symbol-06 (int -> int -> int), Samples:  98,  Counter({((0, 4), 5): 6, ((8, 4), 13): 5, ((6, 4), 11): 4, ((9, 4), 14): 4, ((8, 3), 24): 3, ((5, 2), 10): 3, ((4, 2), 8): 3, ((3, 7), 7): 3, ((9, 7), 63): 3, ((1, 5), 5): 3, ((6, 6), 36): 3, ((5, 8), 40): 2, ((3, 8), 24): 2, ((4, 4), 8): 2, ((2, 4), 6): 2, ((5, 5), 10): 2, ((5, 4), 20): 2, ((7, 1), 12): 1, ((5, 0), 10): 1, ((1, 9), 5): 1, ((4, 6), 24): 1, ((5, 1), 10): 1, ((2, 3), 6): 1, ((8, 6), 48): 1, ((1, 6), 5): 1, ((6, 5), 11): 1, ((8, 9), 72): 1, ((9, 6), 54): 1, ((7, 6), 12): 1, ((7, 9), 12): 1, ((5, 6), 30): 1, ((1, 4), 5): 1, ((6, 9), 54): 1, ((8, 1), 72): 1, ((3, 9), 27): 1, ((6, 8), 54): 1, ((0, 8), 5): 1, ((3, 4), 9): 1, ((8, 7), 35): 1, ((3, 1), 7): 1, ((6, 2), 4): 1, ((5, 9), 45): 1, ((8, 0), 12): 1, ((2, 9), 18): 1, ((8, 8), 64): 1, ((2, 7), 11): 1, ((6, 1), 42): 1, ((0, 7), 28): 1, ((7, 4), 12): 1, ((1, 8), 27): 1, ((4, 8), 32): 1, ((9, 5), 45): 1, ((4, 9), 36): 1, ((1, 2), 5): 1, ((6, 3), 18): 1, ((6, 7), 14): 1, ((8, 2), 32): 1, ((7, 8), 56): 1, ((4, 5), 25): 1, ((5, 3), 10): 1, ((2, 5), 6): 1, ((4, 3), 12): 1, ((4, 0), 1): 1})
Symbol-12 (int -> int -> int), Samples: 100,  Counter({((5, 4), 8): 4, ((8, 1), 8): 4, ((8, 8), 64): 3, ((1, 4), 4): 3, ((6, 9), 54): 3, ((8, 9), 72): 2, ((7, 9), 63): 2, ((3, 1), 3): 2, ((4, 0), 4): 2, ((1, 1), 1): 2, ((6, 3), 18): 2, ((3, 4), 6): 2, ((5, 5), 25): 2, ((2, 9), 18): 2, ((3, 7), 21): 2, ((9, 4), 12): 2, ((9, 3), 12): 2, ((4, 9), 36): 2, ((5, 3), 15): 2, ((3, 2), 3): 2, ((1, 0), 1): 2, ((5, 2), 45): 2, ((7, 6), 42): 2, ((7, 1), 7): 2, ((0, 4), 3): 1, ((6, 0), 6): 1, ((9, 9), 12): 1, ((9, 1), 9): 1, ((7, 4), 10): 1, ((4, 8), 32): 1, ((9, 8), 72): 1, ((4, 1), 4): 1, ((2, 3), 5): 1, ((6, 4), 9): 1, ((5, 7), 8): 1, ((7, 3), 10): 1, ((2, 2), 2): 1, ((6, 2), 6): 1, ((3, 0), 3): 1, ((5, 8), 40): 1, ((5, 9), 8): 1, ((4, 3), 7): 1, ((6, 5), 30): 1, ((7, 7), 49): 1, ((4, 6), 7): 1, ((0, 1), 1): 1, ((8, 4), 32): 1, ((9, 6), 54): 1, ((1, 3), 4): 1, ((0, 5), 3): 1, ((3, 5), 15): 1, ((8, 7), 56): 1, ((6, 1), 6): 1, ((4, 7), 28): 1, ((3, 3), 15): 1, ((4, 2), 16): 1, ((3, 8), 24): 1, ((2, 5), 10): 1, ((7, 0), 7): 1, ((2, 8), 16): 1, ((0, 9), 15): 1, ((9, 2), 27): 1, ((8, 2), 32): 1, ((6, 7), 42): 1, ((8, 3), 17): 1, ((6, 6), 36): 1, ((9, 0), 9): 1, ((2, 0), 2): 1, ((9, 7), 63): 1})
Symbol-13 (int -> int -> int), Samples:  98,  Counter({((6, 4), 12): 7, ((7, 2), 14): 6, ((2, 2), 4): 5, ((9, 2), 18): 4, ((3, 2), 6): 3, ((0, 4), 0): 3, ((6, 2), 12): 3, ((9, 8), 18): 2, ((9, 5), 18): 2, ((9, 4), 11): 2, ((4, 2), 8): 2, ((8, 8), 56): 2, ((1, 8), 2): 2, ((2, 4), 4): 2, ((7, 9), 14): 2, ((3, 7), 21): 2, ((1, 2), 2): 2, ((5, 4), 20): 2, ((6, 8), 48): 2, ((7, 5), 14): 1, ((8, 2), 16): 1, ((8, 4), 16): 1, ((5, 5), 10): 1, ((9, 1), 18): 1, ((7, 1), 14): 1, ((2, 1), 4): 1, ((7, 4), 14): 1, ((4, 9), 36): 1, ((1, 7), 2): 1, ((8, 5), 16): 1, ((2, 9), 4): 1, ((1, 1), 2): 1, ((9, 0), 18): 1, ((8, 9), 16): 1, ((6, 5), 30): 1, ((6, 6), 12): 1, ((5, 2), 10): 1, ((8, 1), 40): 1, ((3, 3), 6): 1, ((4, 6), 24): 1, ((4, 8), 32): 1, ((6, 1), 12): 1, ((3, 5), 15): 1, ((1, 4), 2): 1, ((8, 3), 24): 1, ((8, 0), 16): 1, ((3, 4), 6): 1, ((9, 6), 54): 1, ((2, 5), 30): 1, ((4, 4), 20): 1, ((5, 1), 7): 1, ((8, 6), 48): 1, ((2, 0), 3): 1, ((7, 7), 49): 1, ((9, 9), 81): 1, ((9, 3), 27): 1, ((3, 8), 9): 1, ((7, 8), 56): 1, ((5, 8), 15): 1, ((7, 0), 9): 1, ((4, 3), 8): 1, ((2, 8), 16): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 0.63
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr (incr ($2 (decr0 $1) 0)))))))))) 0.71
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.68
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.57
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 48s
------------------------------
Epoch 12/499 (max_len=3, data=2820)
Train acc: 51.27 (abduce 91.49)
Dep:  Counter({(1, -1, 1): 1006, (-1,): 1000, (2, 2, -1): 565, (-1, 0, 0): 9})
Hit samples:  2580  Ave length:  2.22
Symbols:  15 [(0, 376), (1, 283), (2, 396), (3, 254), (4, 440), (5, 457), (6, 152), (7, 385), (8, 351), (9, 423), (10, 660), (11, 418), (12, 406), (13, 192), (14, 547)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples: 100,  Counter({((5, 4), 5): 5, ((4, 4), 4): 4, ((1, 8), 8): 4, ((8, 4), 8): 4, ((0, 4), 6): 3, ((2, 4), 2): 3, ((9, 4), 9): 3, ((1, 3), 3): 3, ((1, 4), 4): 3, ((1, 7), 7): 3, ((1, 1), 2): 2, ((1, 9), 9): 2, ((6, 2), 6): 2, ((6, 4), 6): 2, ((2, 8), 2): 2, ((9, 6), 9): 2, ((9, 9), 9): 2, ((1, 6), 6): 2, ((8, 0), 8): 2, ((6, 0), 6): 2, ((5, 0), 5): 2, ((8, 1), 8): 2, ((3, 8), 3): 2, ((7, 1), 7): 2, ((1, 5), 5): 2, ((4, 1), 4): 1, ((3, 4), 3): 1, ((2, 2), 2): 1, ((4, 3), 4): 1, ((5, 2), 5): 1, ((3, 1), 3): 1, ((6, 3), 6): 1, ((5, 1), 5): 1, ((7, 9), 42): 1, ((7, 0), 0): 1, ((7, 8), 72): 1, ((0, 6), 8): 1, ((9, 0), 9): 1, ((4, 7), 4): 1, ((9, 1), 9): 1, ((9, 8), 9): 1, ((2, 5), 2): 1, ((9, 7), 9): 1, ((5, 9), 54): 1, ((5, 6), 5): 1, ((6, 7), 6): 1, ((2, 7), 49): 1, ((2, 9), 27): 1, ((6, 8), 6): 1, ((0, 8), 24): 1, ((6, 1), 18): 1, ((9, 2), 72): 1, ((6, 5), 6): 1, ((4, 8), 4): 1, ((6, 6), 48): 1, ((8, 5), 48): 1, ((7, 4), 13): 1, ((3, 2), 3): 1, ((3, 0), 3): 1, ((4, 2), 4): 1})
Symbol-06 (int -> int -> int), Samples:  91,  Counter({((8, 4), 13): 8, ((9, 4), 14): 6, ((6, 4), 11): 5, ((0, 4), 5): 5, ((3, 7), 7): 5, ((1, 4), 5): 5, ((9, 7), 14): 4, ((2, 3), 6): 3, ((5, 2), 10): 3, ((7, 4), 12): 3, ((2, 4), 6): 3, ((1, 5), 5): 2, ((7, 6), 12): 2, ((2, 8), 6): 2, ((4, 8), 8): 2, ((4, 2), 8): 2, ((0, 1), 5): 2, ((0, 0), 5): 2, ((5, 0), 10): 2, ((7, 9), 12): 1, ((1, 8), 4): 1, ((5, 5), 10): 1, ((5, 1), 10): 1, ((8, 9), 9): 1, ((6, 5), 9): 1, ((4, 4), 9): 1, ((8, 7), 63): 1, ((0, 7), 5): 1, ((1, 3), 1): 1, ((8, 0), 40): 1, ((9, 2), 14): 1, ((3, 8), 20): 1, ((3, 1), 15): 1, ((7, 1), 35): 1, ((9, 9), 27): 1, ((8, 1), 3): 1, ((8, 8), 32): 1, ((7, 5), 63): 1, ((4, 5), 7): 1, ((3, 4), 9): 1, ((9, 3), 6): 1, ((5, 8), 10): 1, ((3, 2), 7): 1, ((1, 2), 42): 1})
Symbol-13 (int -> int -> int), Samples:  94,  Counter({((6, 4), 12): 7, ((2, 2), 4): 5, ((7, 2), 14): 5, ((9, 4), 18): 3, ((6, 2), 12): 3, ((9, 8), 18): 3, ((6, 1), 12): 3, ((2, 4), 4): 3, ((0, 4), 0): 2, ((9, 5), 18): 2, ((1, 2), 2): 2, ((3, 2), 6): 2, ((6, 5), 12): 2, ((5, 4), 10): 2, ((0, 9), 0): 2, ((7, 5), 14): 2, ((8, 2), 16): 2, ((9, 2), 18): 2, ((8, 8), 16): 1, ((8, 5), 16): 1, ((1, 4), 3): 1, ((0, 8), 0): 1, ((4, 2), 8): 1, ((2, 1), 4): 1, ((9, 0), 18): 1, ((6, 6), 12): 1, ((5, 5), 10): 1, ((7, 8), 64): 1, ((4, 3), 8): 1, ((8, 0), 16): 1, ((1, 7), 2): 1, ((2, 9), 4): 1, ((7, 9), 14): 1, ((2, 3), 30): 1, ((6, 8), 12): 1, ((1, 9), 27): 1, ((9, 7), 36): 1, ((3, 4), 6): 1, ((9, 1), 18): 1, ((7, 1), 14): 1, ((7, 4), 63): 1, ((1, 1), 2): 1, ((3, 8), 9): 1, ((4, 8), 8): 1, ((8, 1), 40): 1, ((5, 2), 3): 1, ((3, 9), 18): 1, ((8, 9), 10): 1, ((9, 9), 18): 1, ((5, 9), 15): 1, ((8, 4), 16): 1, ((3, 3), 6): 1, ((1, 8), 2): 1, ((3, 5), 35): 1, ((5, 1), 14): 1, ((6, 7), 14): 1, ((7, 7), 21): 1, ((3, 1), 18): 1, ((2, 8), 4): 1, ((4, 4), 11): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr (incr ($2 (decr0 $1) 0)))))))))) 0.82
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.86
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.78
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 48s
------------------------------
Epoch 13/499 (max_len=3, data=2820)
Train acc: 50.65 (abduce 92.02)
Dep:  Counter({(1, -1, 1): 1033, (-1,): 1000, (2, 2, -1): 558, (-1, 0, 0): 4})
Hit samples:  2595  Ave length:  2.23
Symbols:  15 [(0, 395), (1, 337), (2, 386), (3, 260), (4, 427), (5, 457), (6, 181), (7, 388), (8, 368), (9, 421), (10, 669), (11, 419), (12, 300), (13, 223), (14, 554)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  98,  Counter({((1, 7), 7): 5, ((4, 4), 4): 4, ((5, 4), 5): 4, ((6, 4), 6): 3, ((9, 4), 9): 3, ((4, 1), 4): 3, ((1, 3), 3): 3, ((1, 8), 8): 3, ((0, 4), 6): 3, ((1, 9), 9): 3, ((8, 1), 8): 2, ((8, 4), 8): 2, ((7, 1), 7): 2, ((9, 9), 9): 2, ((1, 6), 6): 2, ((6, 2), 6): 2, ((2, 8), 2): 2, ((6, 0), 6): 2, ((3, 4), 3): 2, ((7, 4), 7): 2, ((9, 0), 9): 2, ((1, 1), 2): 2, ((6, 8), 6): 2, ((5, 5), 5): 1, ((7, 0), 7): 1, ((9, 8), 9): 1, ((2, 5), 2): 1, ((5, 1), 5): 1, ((5, 2), 5): 1, ((1, 4), 1): 1, ((1, 5), 5): 1, ((4, 3), 4): 1, ((7, 5), 7): 1, ((9, 6), 9): 1, ((8, 2), 8): 1, ((5, 9), 54): 1, ((2, 4), 2): 1, ((6, 3), 6): 1, ((8, 9), 24): 1, ((4, 7), 4): 1, ((3, 2), 3): 1, ((6, 1), 6): 1, ((5, 0), 5): 1, ((7, 9), 21): 1, ((6, 5), 18): 1, ((6, 7), 6): 1, ((8, 0), 8): 1, ((1, 2), 2): 1, ((0, 8), 24): 1, ((9, 1), 63): 1, ((5, 3), 45): 1, ((3, 1), 15): 1, ((8, 5), 48): 1, ((2, 9), 2): 1, ((3, 8), 3): 1, ((0, 7), 9): 1, ((9, 2), 9): 1, ((2, 1), 2): 1, ((4, 5), 12): 1, ((4, 8), 4): 1, ((8, 7), 28): 1})
Symbol-06 (int -> int -> int), Samples: 100,  Counter({((8, 4), 13): 9, ((6, 4), 11): 5, ((3, 7), 7): 5, ((0, 4), 5): 5, ((4, 2), 8): 4, ((2, 3), 6): 4, ((9, 7), 14): 3, ((9, 4), 14): 3, ((1, 4), 5): 3, ((3, 4), 7): 3, ((5, 5), 10): 2, ((2, 4), 6): 2, ((0, 1), 5): 2, ((4, 4), 20): 2, ((5, 4), 10): 2, ((7, 6), 12): 2, ((7, 1), 12): 2, ((1, 9), 5): 2, ((5, 2), 10): 2, ((5, 0), 0): 2, ((5, 8), 10): 2, ((1, 5), 5): 2, ((5, 9), 9): 2, ((6, 5), 36): 2, ((9, 8), 64): 2, ((7, 4), 12): 2, ((8, 9), 24): 2, ((7, 9), 28): 1, ((2, 8), 6): 1, ((6, 8), 20): 1, ((5, 1), 10): 1, ((7, 7), 63): 1, ((0, 5), 3): 1, ((4, 1), 2): 1, ((3, 1), 8): 1, ((4, 8), 11): 1, ((2, 1), 56): 1, ((8, 2), 40): 1, ((4, 3), 32): 1, ((7, 5), 28): 1, ((5, 7), 13): 1, ((8, 5), 10): 1, ((6, 1), 3): 1, ((7, 2), 5): 1, ((9, 1), 17): 1, ((4, 5), 32): 1, ((1, 0), 13): 1, ((3, 6), 7): 1, ((3, 5), 24): 1})
Symbol-13 (int -> int -> int), Samples:  94,  Counter({((6, 4), 12): 7, ((7, 2), 14): 6, ((2, 2), 4): 5, ((6, 2), 12): 3, ((9, 8), 18): 3, ((9, 4), 18): 3, ((5, 2), 10): 3, ((3, 2), 6): 3, ((8, 8), 16): 3, ((6, 6), 12): 3, ((1, 1), 2): 2, ((8, 4), 16): 2, ((0, 4), 0): 2, ((3, 4), 6): 2, ((5, 4), 7): 2, ((4, 4), 8): 2, ((7, 5), 14): 2, ((9, 2), 18): 2, ((2, 4), 4): 2, ((6, 1), 12): 2, ((6, 8), 12): 2, ((8, 9), 16): 1, ((4, 2), 8): 1, ((1, 2), 2): 1, ((9, 0), 18): 1, ((8, 0), 16): 1, ((2, 1), 4): 1, ((7, 1), 14): 1, ((9, 5), 18): 1, ((1, 7), 2): 1, ((2, 3), 30): 1, ((2, 9), 4): 1, ((0, 8), 0): 1, ((5, 5), 10): 1, ((9, 1), 18): 1, ((9, 9), 18): 1, ((0, 9), 0): 1, ((8, 2), 54): 1, ((7, 4), 14): 1, ((6, 7), 54): 1, ((4, 1), 24): 1, ((6, 5), 12): 1, ((1, 8), 2): 1, ((1, 3), 2): 1, ((2, 7), 49): 1, ((7, 3), 27): 1, ((4, 5), 28): 1, ((7, 7), 63): 1, ((3, 3), 6): 1, ((9, 3), 81): 1, ((4, 9), 28): 1, ((1, 4), 6): 1, ((4, 6), 7): 1, ((3, 1), 6): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-13: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 0 (incr (incr ($2 (decr0 $1) 0)))))))))) 0.86
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.87
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.70
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 7m 1s
------------------------------
Epoch 14/499 (max_len=3, data=2820)
Train acc: 50.26 (abduce 91.17)
Dep:  Counter({(-1,): 1000, (1, -1, 1): 971, (2, 2, -1): 592, (-1, 0, 0): 8})
Hit samples:  2571  Ave length:  2.22
Symbols:  15 [(0, 394), (1, 335), (2, 379), (3, 268), (4, 400), (5, 453), (6, 201), (7, 378), (8, 353), (9, 441), (10, 653), (11, 423), (12, 280), (13, 206), (14, 549)]
Learn perception with 2149 samples, take 213 sec.
Learn syntax with 2149 samples, take 2 sec.
result accuracy by digit:
0 ( 0%) 80.00
1 ( 0%) 100.00
2 ( 0%) 90.00
3 ( 0%) 80.00
4 ( 0%) 80.00
5 ( 0%) 90.00
6 ( 0%) 90.00
7 ( 0%) 100.00
8 ( 0%) 70.00
9 ( 0%) 80.00
val (Perception Acc=7.99, Syntax Acc=42.96, Result Acc=4.94)
Epoch time: 3m 42s
------------------------------
Epoch 15/499 (max_len=3, data=2820)
Train acc: 64.88 (abduce 94.47)
Dep:  Counter({(1, -1, 1): 1287, (-1,): 1000, (2, 2, -1): 361, (-1, 0, 0): 16})
Hit samples:  2664  Ave length:  2.25
Symbols:  15 [(0, 424), (1, 212), (2, 436), (3, 268), (4, 433), (5, 493), (6, 134), (7, 407), (8, 393), (9, 438), (10, 591), (11, 445), (12, 495), (13, 130), (14, 693)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  98,  Counter({((1, 8), 8): 5, ((5, 4), 5): 5, ((1, 4), 4): 4, ((8, 4), 8): 4, ((4, 4), 4): 4, ((4, 1), 4): 4, ((2, 4), 2): 4, ((9, 4), 9): 3, ((3, 4), 3): 3, ((0, 4), 6): 3, ((6, 2), 6): 3, ((1, 1), 2): 3, ((1, 9), 9): 3, ((1, 3), 3): 2, ((6, 1), 6): 2, ((6, 4), 6): 2, ((8, 5), 8): 2, ((9, 1), 9): 2, ((1, 7), 7): 2, ((0, 8), 10): 2, ((7, 4), 7): 2, ((7, 0), 7): 1, ((5, 8), 11): 1, ((3, 2), 3): 1, ((2, 2), 2): 1, ((9, 6), 9): 1, ((8, 2), 8): 1, ((8, 8), 8): 1, ((6, 8), 6): 1, ((9, 5), 9): 1, ((3, 3), 3): 1, ((5, 9), 54): 1, ((2, 8), 2): 1, ((4, 3), 4): 1, ((6, 0), 6): 1, ((7, 1), 7): 1, ((0, 6), 8): 1, ((7, 8), 72): 1, ((6, 7), 6): 1, ((0, 0), 2): 1, ((4, 5), 4): 1, ((1, 6), 6): 1, ((9, 0), 9): 1, ((5, 0), 5): 1, ((5, 2), 5): 1, ((7, 7), 28): 1, ((7, 9), 42): 1, ((2, 9), 2): 1, ((1, 2), 2): 1, ((6, 6), 14): 1, ((3, 8), 15): 1, ((9, 9), 11): 1, ((6, 5), 36): 1, ((5, 5), 5): 1, ((3, 9), 18): 1})
Symbol-06 (int -> int -> int), Samples:  83,  Counter({((6, 4), 11): 6, ((0, 4), 5): 6, ((8, 4), 13): 5, ((2, 3), 6): 4, ((9, 7), 14): 3, ((5, 2), 10): 3, ((7, 9), 12): 3, ((1, 4), 5): 3, ((4, 4), 8): 3, ((9, 4), 14): 3, ((1, 5), 5): 2, ((5, 4), 10): 2, ((2, 4), 6): 2, ((2, 1), 6): 2, ((0, 0), 5): 2, ((1, 6), 5): 2, ((5, 1), 10): 2, ((7, 6), 12): 2, ((0, 7), 5): 2, ((3, 7), 7): 1, ((2, 8), 6): 1, ((4, 6), 8): 1, ((5, 5), 10): 1, ((9, 2), 14): 1, ((4, 2), 8): 1, ((9, 1), 14): 1, ((3, 6), 54): 1, ((6, 9), 11): 1, ((8, 8), 13): 1, ((6, 1), 11): 1, ((3, 2), 7): 1, ((7, 4), 40): 1, ((3, 4), 15): 1, ((4, 1), 8): 1, ((2, 0), 0): 1, ((9, 3), 14): 1, ((1, 0), 5): 1, ((5, 8), 10): 1, ((7, 7), 12): 1, ((6, 8), 42): 1, ((9, 8), 12): 1, ((2, 2), 10): 1, ((8, 2), 9): 1, ((7, 3), 12): 1, ((1, 8), 40): 1})
Symbol-13 (int -> int -> int), Samples:  80,  Counter({((6, 4), 12): 5, ((7, 2), 14): 4, ((3, 4), 6): 4, ((2, 2), 4): 4, ((0, 4), 0): 4, ((9, 4), 18): 3, ((9, 1), 18): 3, ((6, 8), 12): 3, ((5, 2), 10): 2, ((8, 8), 16): 2, ((3, 2), 6): 2, ((2, 7), 4): 2, ((6, 1), 12): 2, ((7, 5), 14): 2, ((6, 6), 12): 2, ((7, 4), 14): 2, ((9, 2), 18): 2, ((2, 4), 4): 2, ((1, 2), 2): 1, ((1, 4), 2): 1, ((3, 3), 6): 1, ((5, 5), 10): 1, ((9, 6), 36): 1, ((8, 5), 16): 1, ((9, 5), 18): 1, ((8, 4), 16): 1, ((4, 4), 8): 1, ((6, 9), 12): 1, ((5, 1), 10): 1, ((5, 4), 25): 1, ((6, 2), 12): 1, ((2, 9), 4): 1, ((0, 8), 0): 1, ((8, 0), 16): 1, ((9, 9), 18): 1, ((5, 8), 10): 1, ((1, 7), 2): 1, ((6, 7), 12): 1, ((0, 2), 0): 1, ((9, 8), 18): 1, ((8, 9), 16): 1, ((3, 8), 6): 1, ((1, 8), 2): 1, ((0, 0), 0): 1, ((5, 0), 12): 1, ((8, 2), 54): 1, ((3, 1), 6): 1, ((4, 8), 24): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.93
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.89
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.87
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 58s
------------------------------
Epoch 16/499 (max_len=3, data=2820)
Train acc: 67.77 (abduce 94.68)
Dep:  Counter({(1, -1, 1): 1299, (-1,): 1000, (2, 2, -1): 355, (-1, 0, 0): 16})
Hit samples:  2670  Ave length:  2.25
Symbols:  15 [(0, 432), (1, 196), (2, 449), (3, 276), (4, 437), (5, 478), (6, 131), (7, 419), (8, 407), (9, 426), (10, 578), (11, 438), (12, 501), (13, 147), (14, 695)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples: 100,  Counter({((4, 4), 4): 7, ((1, 8), 8): 6, ((5, 4), 5): 4, ((2, 4), 2): 4, ((1, 3), 3): 4, ((9, 4), 9): 4, ((1, 4), 4): 4, ((3, 4), 3): 3, ((4, 1), 4): 3, ((1, 7), 7): 3, ((6, 4), 6): 3, ((5, 0), 5): 3, ((0, 4), 6): 3, ((1, 1), 2): 2, ((9, 1), 9): 2, ((6, 2), 6): 2, ((8, 8), 8): 2, ((1, 9), 9): 2, ((3, 2), 3): 2, ((2, 2), 2): 2, ((3, 3), 3): 1, ((8, 5), 8): 1, ((1, 6), 6): 1, ((9, 2), 9): 1, ((6, 0), 6): 1, ((7, 0), 7): 1, ((6, 3), 6): 1, ((2, 8), 2): 1, ((5, 9), 54): 1, ((6, 6), 6): 1, ((9, 6), 9): 1, ((5, 5), 5): 1, ((6, 8), 6): 1, ((8, 4), 8): 1, ((4, 3), 4): 1, ((0, 6), 8): 1, ((5, 2), 5): 1, ((8, 2), 8): 1, ((7, 7), 63): 1, ((7, 9), 10): 1, ((0, 5), 7): 1, ((0, 0), 2): 1, ((9, 8), 9): 1, ((9, 7), 9): 1, ((7, 4), 7): 1, ((4, 9), 14): 1, ((7, 8), 42): 1, ((6, 5), 18): 1, ((3, 8), 3): 1, ((5, 3), 5): 1, ((7, 1), 7): 1, ((8, 1), 7): 1, ((0, 8), 10): 1, ((2, 3), 9): 1, ((3, 7), 12): 1})
Symbol-06 (int -> int -> int), Samples:  96,  Counter({((8, 4), 13): 6, ((6, 4), 11): 6, ((0, 4), 5): 6, ((5, 2), 10): 5, ((3, 7), 7): 4, ((4, 4), 8): 3, ((9, 4), 14): 3, ((0, 1), 5): 3, ((9, 7), 14): 3, ((1, 4), 5): 3, ((5, 8), 10): 2, ((7, 4), 12): 2, ((5, 5), 10): 2, ((3, 2), 7): 2, ((2, 2), 6): 2, ((9, 2), 14): 2, ((7, 7), 12): 2, ((5, 1), 10): 2, ((0, 7), 5): 2, ((6, 5), 11): 2, ((7, 6), 12): 2, ((7, 1), 12): 1, ((3, 1), 7): 1, ((4, 6), 8): 1, ((5, 0), 0): 1, ((1, 1), 5): 1, ((6, 9), 11): 1, ((2, 5), 6): 1, ((5, 4), 10): 1, ((6, 1), 3): 1, ((1, 6), 5): 1, ((2, 4), 6): 1, ((8, 0), 0): 1, ((2, 3), 6): 1, ((1, 9), 5): 1, ((4, 1), 8): 1, ((4, 2), 8): 1, ((1, 5), 5): 1, ((7, 9), 12): 1, ((1, 8), 5): 1, ((0, 3), 5): 1, ((0, 8), 13): 1, ((2, 1), 6): 1, ((2, 7), 6): 1, ((1, 7), 5): 1, ((3, 4), 9): 1, ((4, 7), 49): 1, ((4, 8), 11): 1, ((8, 7), 40): 1, ((2, 6), 6): 1, ((5, 3), 10): 1, ((8, 9), 36): 1, ((6, 8), 24): 1})
Symbol-13 (int -> int -> int), Samples:  96,  Counter({((2, 2), 4): 5, ((6, 4), 12): 4, ((9, 1), 18): 4, ((3, 4), 6): 4, ((9, 4), 18): 3, ((5, 5), 10): 3, ((2, 4), 4): 3, ((4, 2), 8): 3, ((7, 2), 14): 3, ((6, 2), 12): 3, ((6, 6), 12): 3, ((9, 5), 18): 3, ((5, 4), 10): 3, ((8, 9), 16): 3, ((0, 4), 0): 3, ((3, 2), 6): 3, ((1, 1), 2): 2, ((8, 5), 16): 2, ((9, 2), 18): 2, ((1, 4), 2): 2, ((8, 8), 16): 2, ((1, 2), 2): 2, ((6, 8), 12): 2, ((7, 4), 14): 2, ((0, 2), 0): 2, ((7, 5), 14): 2, ((3, 3), 6): 2, ((2, 7), 4): 2, ((0, 8), 0): 1, ((8, 4), 16): 1, ((9, 6), 18): 1, ((3, 1), 6): 1, ((6, 5), 12): 1, ((7, 7), 14): 1, ((1, 3), 30): 1, ((5, 2), 10): 1, ((0, 9), 0): 1, ((3, 8), 6): 1, ((7, 9), 14): 1, ((0, 7), 0): 1, ((8, 2), 48): 1, ((7, 1), 15): 1, ((5, 8), 10): 1, ((9, 8), 54): 1, ((3, 5), 9): 1, ((3, 0), 0): 1, ((4, 5), 32): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.92
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.90
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.88
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 58s
------------------------------
Epoch 17/499 (max_len=3, data=2820)
Train acc: 65.53 (abduce 94.36)
Dep:  Counter({(1, -1, 1): 1278, (-1,): 1000, (2, 2, -1): 363, (-1, 0, 0): 20})
Hit samples:  2661  Ave length:  2.25
Symbols:  15 [(0, 429), (1, 207), (2, 425), (3, 286), (4, 432), (5, 467), (6, 123), (7, 406), (8, 400), (9, 427), (10, 608), (11, 442), (12, 500), (13, 146), (14, 685)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples: 100,  Counter({((1, 8), 8): 5, ((1, 3), 3): 5, ((9, 4), 9): 4, ((0, 4), 6): 4, ((4, 4), 4): 4, ((8, 4), 8): 4, ((5, 4), 5): 4, ((9, 1), 9): 4, ((1, 4), 4): 4, ((3, 4), 3): 3, ((6, 4), 6): 3, ((2, 4), 2): 2, ((1, 7), 7): 2, ((3, 2), 3): 2, ((6, 2), 6): 2, ((2, 8), 2): 2, ((1, 9), 9): 2, ((1, 6), 6): 2, ((4, 1), 4): 2, ((7, 4), 7): 2, ((2, 2), 2): 1, ((8, 1), 8): 1, ((7, 1), 7): 1, ((5, 2), 5): 1, ((6, 1), 6): 1, ((4, 8), 4): 1, ((6, 8), 6): 1, ((8, 5), 8): 1, ((8, 8), 8): 1, ((6, 7), 6): 1, ((2, 7), 49): 1, ((7, 8), 72): 1, ((1, 2), 2): 1, ((0, 6), 8): 1, ((4, 5), 4): 1, ((5, 9), 54): 1, ((0, 0), 2): 1, ((3, 3), 3): 1, ((9, 9), 9): 1, ((9, 0), 9): 1, ((4, 3), 4): 1, ((7, 0), 7): 1, ((6, 3), 6): 1, ((6, 9), 18): 1, ((5, 0), 5): 1, ((5, 3), 5): 1, ((8, 0), 8): 1, ((3, 9), 15): 1, ((4, 2), 10): 1, ((1, 1), 2): 1, ((9, 7), 9): 1, ((8, 2), 8): 1, ((0, 8), 10): 1, ((9, 8), 10): 1, ((5, 5), 5): 1, ((4, 7), 4): 1, ((9, 5), 9): 1, ((0, 9), 11): 1})
Symbol-06 (int -> int -> int), Samples:  82,  Counter({((8, 4), 13): 6, ((6, 4), 11): 5, ((0, 4), 5): 4, ((2, 4), 6): 4, ((2, 3), 6): 3, ((3, 2), 7): 3, ((9, 7), 14): 3, ((9, 4), 14): 3, ((5, 5), 10): 3, ((1, 4), 5): 3, ((3, 7), 7): 2, ((0, 1), 5): 2, ((4, 1), 8): 2, ((7, 9), 12): 2, ((2, 1), 6): 2, ((7, 1), 12): 1, ((7, 6), 12): 1, ((2, 2), 6): 1, ((4, 2), 8): 1, ((0, 7), 5): 1, ((4, 6), 32): 1, ((0, 0), 5): 1, ((7, 4), 42): 1, ((6, 9), 11): 1, ((5, 2), 10): 1, ((9, 2), 14): 1, ((6, 5), 11): 1, ((7, 3), 12): 1, ((1, 1), 5): 1, ((9, 3), 14): 1, ((1, 3), 5): 1, ((5, 0), 0): 1, ((1, 6), 5): 1, ((6, 1), 3): 1, ((2, 8), 6): 1, ((1, 5), 5): 1, ((5, 4), 10): 1, ((7, 2), 54): 1, ((0, 3), 5): 1, ((6, 0), 0): 1, ((3, 4), 8): 1, ((5, 8), 10): 1, ((8, 5), 56): 1, ((3, 3), 27): 1, ((2, 9), 6): 1, ((1, 9), 5): 1, ((4, 4), 9): 1, ((1, 8), 5): 1, ((7, 5), 12): 1, ((3, 9), 7): 1})
Symbol-13 (int -> int -> int), Samples:  97,  Counter({((2, 2), 4): 6, ((6, 4), 12): 5, ((7, 2), 14): 4, ((6, 2), 12): 4, ((3, 4), 6): 4, ((4, 2), 8): 3, ((9, 4), 18): 3, ((9, 1), 18): 3, ((9, 2), 18): 3, ((8, 5), 16): 3, ((9, 8), 18): 3, ((3, 2), 6): 3, ((2, 4), 4): 3, ((7, 5), 14): 3, ((1, 1), 2): 2, ((1, 4), 2): 2, ((8, 4), 16): 2, ((5, 4), 10): 2, ((7, 4), 14): 2, ((6, 1), 12): 2, ((9, 5), 18): 2, ((3, 5), 6): 2, ((6, 9), 12): 1, ((8, 0), 16): 1, ((5, 2), 10): 1, ((0, 8), 0): 1, ((8, 8), 16): 1, ((1, 3), 30): 1, ((8, 9), 16): 1, ((3, 8), 6): 1, ((3, 3), 6): 1, ((3, 1), 6): 1, ((6, 5), 12): 1, ((5, 8), 10): 1, ((1, 7), 2): 1, ((0, 9), 0): 1, ((5, 5), 30): 1, ((1, 8), 2): 1, ((6, 7), 12): 1, ((1, 5), 2): 1, ((2, 1), 4): 1, ((2, 7), 4): 1, ((4, 1), 7): 1, ((3, 6), 6): 1, ((0, 4), 0): 1, ((4, 4), 8): 1, ((8, 2), 56): 1, ((3, 0), 0): 1, ((7, 1), 42): 1, ((8, 1), 40): 1, ((6, 0), 36): 1, ((7, 9), 21): 1, ((5, 1), 11): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.91
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.92
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.86
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 60s
------------------------------
Epoch 18/499 (max_len=3, data=2820)
Train acc: 67.74 (abduce 94.08)
Dep:  Counter({(1, -1, 1): 1302, (-1,): 1000, (2, 2, -1): 344, (-1, 0, 0): 7})
Hit samples:  2653  Ave length:  2.25
Symbols:  15 [(0, 423), (1, 213), (2, 452), (3, 271), (4, 410), (5, 475), (6, 128), (7, 403), (8, 406), (9, 434), (10, 590), (11, 442), (12, 491), (13, 131), (14, 690)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples: 100,  Counter({((5, 4), 5): 6, ((4, 4), 4): 5, ((1, 3), 3): 5, ((1, 8), 8): 4, ((8, 4), 8): 4, ((1, 7), 7): 4, ((9, 4), 9): 4, ((6, 4), 6): 4, ((4, 1), 4): 3, ((3, 4), 3): 3, ((0, 4), 6): 3, ((7, 4), 7): 2, ((6, 2), 6): 2, ((1, 4), 4): 2, ((1, 9), 9): 2, ((2, 4), 2): 2, ((2, 8), 2): 2, ((8, 8), 8): 2, ((7, 8), 11): 2, ((3, 2), 3): 2, ((5, 2), 5): 2, ((8, 5), 8): 1, ((6, 1), 6): 1, ((4, 8), 4): 1, ((4, 3), 4): 1, ((9, 6), 9): 1, ((9, 9), 9): 1, ((6, 8), 6): 1, ((6, 3), 6): 1, ((6, 5), 6): 1, ((1, 6), 24): 1, ((9, 7), 9): 1, ((0, 6), 8): 1, ((6, 6), 6): 1, ((9, 0), 9): 1, ((5, 9), 54): 1, ((0, 9), 11): 1, ((7, 0), 7): 1, ((6, 7), 6): 1, ((7, 9), 10): 1, ((4, 7), 4): 1, ((9, 1), 9): 1, ((1, 2), 2): 1, ((9, 5), 9): 1, ((5, 3), 5): 1, ((5, 0), 5): 1, ((1, 1), 2): 1, ((0, 8), 10): 1, ((9, 2), 9): 1, ((6, 9), 42): 1, ((5, 5), 5): 1, ((8, 2), 8): 1, ((2, 5), 2): 1, ((7, 2), 21): 1, ((9, 3), 9): 1, ((8, 7), 49): 1})
Symbol-06 (int -> int -> int), Samples:  92,  Counter({((8, 4), 13): 6, ((9, 4), 14): 5, ((5, 2), 10): 4, ((0, 4), 5): 4, ((5, 5), 10): 4, ((1, 4), 5): 4, ((6, 4), 11): 3, ((9, 7), 14): 3, ((4, 4), 8): 3, ((1, 5), 5): 3, ((7, 9), 12): 3, ((5, 4), 10): 2, ((3, 7), 7): 2, ((0, 1), 5): 2, ((2, 3), 6): 2, ((3, 1), 7): 2, ((2, 4), 6): 2, ((2, 1), 6): 2, ((3, 2), 7): 2, ((7, 1), 12): 2, ((4, 6), 32): 2, ((0, 7), 5): 2, ((6, 9), 11): 2, ((4, 2), 8): 2, ((9, 2), 14): 1, ((9, 3), 14): 1, ((5, 1), 10): 1, ((2, 8), 6): 1, ((6, 5), 11): 1, ((7, 6), 12): 1, ((0, 0), 5): 1, ((3, 4), 9): 1, ((8, 8), 13): 1, ((7, 2), 42): 1, ((2, 2), 6): 1, ((1, 7), 5): 1, ((0, 3), 5): 1, ((4, 1), 8): 1, ((1, 6), 5): 1, ((5, 0), 0): 1, ((1, 1), 5): 1, ((1, 9), 5): 1, ((6, 7), 54): 1, ((8, 0), 0): 1, ((3, 8), 15): 1, ((7, 4), 12): 1, ((8, 3), 13): 1, ((1, 2), 5): 1})
Symbol-13 (int -> int -> int), Samples:  83,  Counter({((6, 4), 12): 6, ((7, 5), 14): 5, ((6, 2), 12): 4, ((3, 4), 6): 4, ((2, 2), 4): 4, ((9, 4), 18): 3, ((9, 1), 18): 3, ((9, 2), 18): 3, ((7, 2), 14): 3, ((8, 8), 16): 2, ((2, 4), 4): 2, ((9, 8), 18): 2, ((0, 4), 0): 2, ((4, 4), 8): 2, ((5, 8), 10): 2, ((1, 4), 2): 2, ((3, 8), 6): 2, ((1, 2), 2): 1, ((5, 2), 10): 1, ((3, 5), 6): 1, ((1, 1), 2): 1, ((9, 6), 18): 1, ((1, 7), 2): 1, ((5, 5), 10): 1, ((8, 4), 16): 1, ((4, 2), 8): 1, ((2, 7), 4): 1, ((3, 1), 6): 1, ((8, 1), 16): 1, ((3, 3), 6): 1, ((0, 9), 0): 1, ((8, 0), 16): 1, ((3, 2), 6): 1, ((6, 5), 12): 1, ((2, 9), 4): 1, ((8, 5), 16): 1, ((4, 9), 9): 1, ((0, 2), 0): 1, ((1, 3), 30): 1, ((5, 4), 10): 1, ((7, 4), 14): 1, ((9, 5), 18): 1, ((6, 6), 12): 1, ((8, 9), 16): 1, ((8, 2), 48): 1, ((6, 1), 12): 1, ((0, 0), 0): 1, ((7, 7), 13): 1, ((1, 5), 2): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.95
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.89
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.89
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 58s
------------------------------
Epoch 19/499 (max_len=3, data=2820)
Train acc: 63.02 (abduce 94.18)
Dep:  Counter({(1, -1, 1): 1279, (-1,): 1000, (2, 2, -1): 363, (-1, 0, 0): 14})
Hit samples:  2656  Ave length:  2.25
Symbols:  15 [(0, 422), (1, 196), (2, 455), (3, 272), (4, 409), (5, 465), (6, 131), (7, 412), (8, 391), (9, 438), (10, 601), (11, 447), (12, 493), (13, 150), (14, 686)]
Learn perception with 2449 samples, take 238 sec.
Learn syntax with 2449 samples, take 2 sec.
result accuracy by digit:
0 ( 0%) 80.00
1 ( 0%) 100.00
2 ( 0%) 90.00
3 ( 0%) 80.00
4 ( 0%) 90.00
5 ( 0%) 80.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 80.00
9 ( 0%) 90.00
val (Perception Acc=8.77, Syntax Acc=42.65, Result Acc=5.61)
Epoch time: 4m 7s
------------------------------
Epoch 20/499 (max_len=3, data=2820)
Train acc: 76.37 (abduce 96.70)
Dep:  Counter({(1, -1, 1): 1448, (-1,): 1000, (2, 2, -1): 245, (-1, 0, 0): 34})
Hit samples:  2727  Ave length:  2.27
Symbols:  15 [(0, 455), (1, 153), (2, 482), (3, 276), (4, 431), (5, 474), (6, 78), (7, 435), (8, 421), (9, 436), (10, 565), (11, 479), (12, 630), (13, 96), (14, 770)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples: 100,  Counter({((4, 4), 4): 7, ((5, 4), 5): 6, ((9, 4), 9): 6, ((6, 4), 6): 5, ((8, 4), 8): 4, ((0, 4), 6): 4, ((1, 7), 7): 4, ((1, 9), 9): 3, ((1, 8), 8): 3, ((1, 4), 4): 3, ((3, 4), 3): 3, ((4, 1), 4): 2, ((6, 3), 6): 2, ((6, 2), 6): 2, ((2, 4), 2): 2, ((1, 1), 2): 2, ((5, 2), 5): 2, ((8, 5), 8): 2, ((7, 4), 7): 1, ((6, 0), 6): 1, ((4, 5), 4): 1, ((7, 0), 7): 1, ((0, 6), 8): 1, ((6, 8), 6): 1, ((9, 6), 9): 1, ((9, 8), 9): 1, ((9, 7), 9): 1, ((1, 3), 3): 1, ((3, 3), 3): 1, ((1, 6), 6): 1, ((9, 1), 9): 1, ((6, 6), 6): 1, ((7, 9), 42): 1, ((7, 1), 7): 1, ((9, 9), 9): 1, ((1, 2), 2): 1, ((5, 5), 5): 1, ((4, 9), 4): 1, ((0, 7), 9): 1, ((0, 9), 11): 1, ((9, 5), 9): 1, ((8, 9), 8): 1, ((0, 0), 2): 1, ((7, 8), 72): 1, ((3, 1), 3): 1, ((9, 0), 9): 1, ((6, 7), 6): 1, ((4, 7), 4): 1, ((5, 7), 5): 1, ((3, 2), 3): 1, ((6, 9), 42): 1, ((4, 8), 48): 1, ((8, 8), 32): 1, ((3, 9), 3): 1, ((3, 8), 3): 1, ((0, 5), 7): 1})
Symbol-06 (int -> int -> int), Samples:  60,  Counter({((0, 4), 5): 4, ((9, 7), 14): 4, ((8, 4), 13): 4, ((6, 4), 11): 4, ((3, 7), 7): 4, ((2, 3), 6): 3, ((2, 4), 6): 3, ((2, 1), 6): 2, ((4, 2), 8): 2, ((9, 4), 14): 2, ((0, 7), 5): 2, ((4, 6), 8): 1, ((2, 2), 6): 1, ((6, 1), 11): 1, ((5, 1), 10): 1, ((3, 2), 7): 1, ((1, 5), 5): 1, ((7, 6), 12): 1, ((7, 9), 12): 1, ((5, 5), 10): 1, ((1, 7), 5): 1, ((0, 1), 5): 1, ((6, 5), 11): 1, ((2, 8), 6): 1, ((0, 3), 5): 1, ((8, 6), 13): 1, ((1, 3), 5): 1, ((1, 9), 5): 1, ((7, 3), 12): 1, ((0, 9), 5): 1, ((3, 1), 7): 1, ((8, 5), 9): 1, ((4, 1), 8): 1, ((5, 9), 10): 1, ((7, 4), 12): 1, ((0, 2), 25): 1, ((4, 8), 40): 1})
Symbol-13 (int -> int -> int), Samples:  74,  Counter({((6, 4), 12): 5, ((2, 2), 4): 4, ((4, 7), 8): 4, ((6, 2), 12): 3, ((8, 4), 16): 3, ((2, 4), 4): 3, ((7, 2), 14): 3, ((9, 6), 18): 3, ((9, 8), 18): 2, ((3, 5), 6): 2, ((1, 4), 2): 2, ((9, 4), 18): 2, ((3, 2), 6): 2, ((3, 4), 6): 2, ((2, 3), 30): 2, ((5, 5), 10): 1, ((1, 7), 2): 1, ((1, 2), 2): 1, ((2, 5), 4): 1, ((0, 9), 0): 1, ((8, 9), 16): 1, ((0, 0), 0): 1, ((8, 8), 16): 1, ((9, 1), 18): 1, ((6, 6), 12): 1, ((6, 8), 12): 1, ((0, 8), 0): 1, ((4, 8), 8): 1, ((3, 8), 6): 1, ((1, 1), 2): 1, ((3, 1), 6): 1, ((7, 1), 14): 1, ((7, 5), 14): 1, ((5, 4), 10): 1, ((8, 1), 11): 1, ((7, 9), 14): 1, ((9, 5), 18): 1, ((3, 7), 6): 1, ((6, 0), 12): 1, ((2, 6), 4): 1, ((4, 3), 8): 1, ((9, 2), 18): 1, ((7, 4), 14): 1, ((9, 7), 11): 1, ((5, 2), 10): 1, ((5, 9), 10): 1, ((7, 3), 42): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.93
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.95
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.94
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 57s
------------------------------
Epoch 21/499 (max_len=3, data=2820)
Train acc: 75.52 (abduce 96.81)
Dep:  Counter({(1, -1, 1): 1473, (-1,): 1000, (2, 2, -1): 232, (-1, 0, 0): 25})
Hit samples:  2730  Ave length:  2.27
Symbols:  15 [(0, 456), (1, 141), (2, 478), (3, 282), (4, 452), (5, 474), (6, 94), (7, 431), (8, 428), (9, 455), (10, 544), (11, 460), (12, 625), (13, 101), (14, 769)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  98,  Counter({((4, 4), 4): 6, ((1, 9), 9): 6, ((0, 4), 6): 5, ((3, 4), 3): 4, ((1, 7), 7): 4, ((5, 4), 5): 4, ((4, 1), 4): 4, ((1, 4), 4): 3, ((9, 4), 9): 2, ((6, 4), 6): 2, ((8, 4), 8): 2, ((0, 7), 9): 2, ((9, 1), 9): 2, ((6, 2), 6): 2, ((2, 4), 2): 2, ((6, 6), 6): 2, ((8, 5), 8): 2, ((7, 0), 7): 2, ((5, 2), 5): 2, ((9, 9), 9): 2, ((1, 2), 2): 2, ((9, 8), 9): 1, ((7, 4), 7): 1, ((6, 0), 6): 1, ((2, 8), 2): 1, ((8, 8), 8): 1, ((1, 8), 8): 1, ((7, 9), 42): 1, ((1, 1), 2): 1, ((9, 7), 9): 1, ((9, 6), 9): 1, ((0, 6), 8): 1, ((9, 2), 9): 1, ((6, 8), 6): 1, ((7, 1), 7): 1, ((4, 2), 4): 1, ((0, 9), 11): 1, ((4, 5), 4): 1, ((0, 0), 2): 1, ((6, 3), 6): 1, ((1, 3), 3): 1, ((6, 1), 6): 1, ((9, 0), 9): 1, ((5, 5), 5): 1, ((8, 3), 17): 1, ((4, 8), 4): 1, ((8, 7), 8): 1, ((1, 5), 5): 1, ((4, 3), 4): 1, ((3, 2), 3): 1, ((8, 0), 8): 1, ((1, 6), 6): 1, ((7, 8), 11): 1, ((2, 2), 2): 1, ((5, 8), 15): 1, ((5, 0), 5): 1, ((2, 1), 18): 1})
Symbol-06 (int -> int -> int), Samples:  70,  Counter({((5, 5), 10): 4, ((6, 4), 11): 4, ((2, 3), 6): 4, ((3, 7), 7): 4, ((9, 4), 14): 3, ((8, 4), 13): 3, ((9, 7), 14): 3, ((1, 1), 5): 2, ((0, 3), 5): 2, ((0, 4), 5): 2, ((4, 4), 8): 2, ((2, 2), 6): 2, ((7, 1), 12): 2, ((7, 6), 12): 2, ((3, 2), 7): 2, ((0, 1), 5): 2, ((5, 2), 10): 1, ((4, 6), 8): 1, ((1, 5), 5): 1, ((1, 3), 5): 1, ((5, 1), 10): 1, ((4, 2), 8): 1, ((2, 1), 6): 1, ((2, 8), 6): 1, ((9, 2), 14): 1, ((7, 4), 12): 1, ((1, 4), 5): 1, ((8, 6), 13): 1, ((2, 4), 6): 1, ((6, 1), 11): 1, ((7, 3), 12): 1, ((4, 8), 8): 1, ((4, 1), 8): 1, ((2, 0), 0): 1, ((6, 5), 11): 1, ((0, 7), 5): 1, ((7, 9), 12): 1, ((0, 9), 5): 1, ((5, 9), 10): 1, ((6, 2), 16): 1, ((8, 2), 28): 1, ((2, 7), 3): 1, ((6, 8), 11): 1})
Symbol-13 (int -> int -> int), Samples:  71,  Counter({((6, 4), 12): 7, ((7, 2), 14): 5, ((3, 4), 6): 4, ((2, 7), 4): 3, ((3, 1), 6): 3, ((2, 2), 4): 3, ((6, 2), 12): 3, ((3, 2), 6): 3, ((2, 4), 4): 2, ((8, 8), 16): 2, ((8, 4), 16): 2, ((5, 8), 10): 2, ((3, 7), 6): 2, ((4, 7), 8): 2, ((9, 4), 18): 2, ((4, 2), 8): 1, ((1, 2), 2): 1, ((6, 6), 12): 1, ((0, 8), 0): 1, ((3, 8), 6): 1, ((4, 8), 8): 1, ((5, 4), 10): 1, ((7, 1), 14): 1, ((9, 8), 18): 1, ((5, 0), 10): 1, ((5, 2), 10): 1, ((9, 2), 18): 1, ((2, 5), 4): 1, ((6, 7), 12): 1, ((9, 6), 18): 1, ((1, 4), 2): 1, ((0, 9), 0): 1, ((0, 2), 56): 1, ((7, 9), 14): 1, ((3, 5), 6): 1, ((1, 8), 2): 1, ((8, 1), 40): 1, ((4, 9), 8): 1, ((9, 1), 18): 1, ((6, 8), 12): 1, ((8, 5), 7): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.95
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.95
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.94
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 58s
------------------------------
Epoch 22/499 (max_len=3, data=2820)
Train acc: 74.51 (abduce 96.63)
Dep:  Counter({(1, -1, 1): 1460, (-1,): 1000, (2, 2, -1): 240, (-1, 0, 0): 25})
Hit samples:  2725  Ave length:  2.27
Symbols:  15 [(0, 464), (1, 135), (2, 475), (3, 280), (4, 444), (5, 476), (6, 91), (7, 424), (8, 419), (9, 463), (10, 549), (11, 456), (12, 635), (13, 99), (14, 765)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  97,  Counter({((5, 4), 5): 7, ((6, 4), 6): 5, ((0, 4), 6): 4, ((1, 4), 4): 4, ((4, 4), 4): 4, ((6, 2), 6): 3, ((9, 4), 9): 3, ((1, 9), 9): 3, ((1, 2), 2): 3, ((5, 2), 5): 2, ((1, 7), 7): 2, ((4, 1), 4): 2, ((6, 3), 6): 2, ((1, 3), 3): 2, ((7, 4), 7): 2, ((1, 1), 2): 2, ((3, 4), 3): 2, ((8, 4), 8): 2, ((6, 1), 6): 2, ((9, 1), 9): 2, ((8, 5), 8): 2, ((9, 8), 9): 2, ((7, 1), 7): 1, ((7, 0), 7): 1, ((6, 0), 6): 1, ((1, 8), 8): 1, ((4, 5), 4): 1, ((0, 6), 8): 1, ((9, 7), 9): 1, ((9, 5), 9): 1, ((7, 9), 42): 1, ((0, 9), 11): 1, ((8, 8), 8): 1, ((2, 7), 2): 1, ((9, 6), 9): 1, ((2, 4), 2): 1, ((6, 7), 6): 1, ((1, 6), 6): 1, ((6, 8), 6): 1, ((3, 2), 3): 1, ((3, 0), 3): 1, ((2, 8), 2): 1, ((4, 7), 4): 1, ((0, 0), 2): 1, ((8, 2), 40): 1, ((5, 5), 5): 1, ((4, 3), 4): 1, ((3, 3), 3): 1, ((9, 9), 9): 1, ((2, 2), 2): 1, ((0, 8), 10): 1, ((4, 0), 1): 1, ((7, 8), 72): 1, ((6, 6), 6): 1, ((8, 1), 8): 1, ((3, 8), 3): 1, ((3, 9), 3): 1})
Symbol-06 (int -> int -> int), Samples:  75,  Counter({((6, 4), 11): 5, ((9, 4), 14): 5, ((0, 4), 5): 5, ((2, 4), 6): 4, ((8, 4), 13): 4, ((9, 7), 14): 3, ((7, 9), 12): 3, ((2, 3), 6): 3, ((7, 1), 12): 3, ((1, 6), 5): 3, ((2, 1), 6): 2, ((4, 1), 8): 2, ((7, 6), 12): 2, ((2, 2), 6): 2, ((0, 3), 5): 2, ((4, 2), 8): 2, ((0, 7), 5): 2, ((0, 0), 5): 2, ((5, 5), 10): 2, ((1, 5), 5): 2, ((3, 2), 7): 2, ((4, 6), 32): 2, ((1, 3), 5): 1, ((2, 8), 6): 1, ((0, 1), 5): 1, ((9, 2), 14): 1, ((5, 1), 10): 1, ((1, 9), 5): 1, ((5, 3), 10): 1, ((3, 4), 7): 1, ((8, 6), 13): 1, ((6, 6), 42): 1, ((6, 8), 42): 1, ((1, 0), 10): 1, ((8, 0), 3): 1})
Symbol-13 (int -> int -> int), Samples:  75,  Counter({((2, 2), 4): 5, ((6, 4), 12): 4, ((6, 6), 12): 3, ((7, 2), 14): 3, ((2, 4), 4): 3, ((3, 2), 6): 3, ((4, 7), 8): 3, ((3, 4), 6): 2, ((3, 5), 6): 2, ((5, 4), 10): 2, ((8, 8), 16): 2, ((5, 2), 10): 2, ((3, 1), 6): 2, ((9, 4), 18): 2, ((9, 2), 18): 2, ((4, 2), 8): 2, ((9, 8), 18): 2, ((9, 5), 18): 2, ((1, 2), 2): 2, ((6, 2), 12): 1, ((8, 9), 16): 1, ((2, 3), 30): 1, ((6, 0), 12): 1, ((0, 0), 0): 1, ((1, 4), 2): 1, ((6, 8), 12): 1, ((5, 5), 10): 1, ((4, 8), 8): 1, ((0, 8), 0): 1, ((0, 9), 0): 1, ((1, 8), 2): 1, ((9, 1), 18): 1, ((5, 0), 10): 1, ((9, 6), 18): 1, ((0, 4), 0): 1, ((4, 3), 8): 1, ((8, 4), 16): 1, ((7, 5), 14): 1, ((2, 5), 4): 1, ((3, 7), 6): 1, ((2, 7), 4): 1, ((7, 4), 14): 1, ((4, 4), 8): 1, ((8, 0), 16): 1, ((7, 1), 14): 1, ((4, 5), 25): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.94
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.95
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.90
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 57s
------------------------------
Epoch 23/499 (max_len=3, data=2820)
Train acc: 73.96 (abduce 96.45)
Dep:  Counter({(1, -1, 1): 1460, (-1,): 1000, (2, 2, -1): 232, (-1, 0, 0): 28})
Hit samples:  2720  Ave length:  2.26
Symbols:  15 [(0, 452), (1, 151), (2, 481), (3, 289), (4, 442), (5, 476), (6, 91), (7, 434), (8, 421), (9, 441), (10, 543), (11, 461), (12, 606), (13, 97), (14, 775)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  96,  Counter({((4, 4), 4): 8, ((0, 4), 6): 6, ((5, 4), 5): 5, ((1, 8), 8): 4, ((9, 4), 9): 4, ((1, 9), 9): 4, ((6, 2), 6): 4, ((4, 1), 4): 3, ((9, 1), 9): 3, ((8, 4), 8): 3, ((1, 4), 4): 3, ((1, 7), 7): 3, ((1, 3), 3): 3, ((3, 5), 3): 2, ((6, 3), 6): 2, ((6, 4), 6): 2, ((6, 1), 6): 2, ((2, 4), 2): 2, ((7, 4), 7): 2, ((5, 5), 5): 1, ((6, 0), 6): 1, ((8, 8), 8): 1, ((1, 6), 6): 1, ((6, 8), 6): 1, ((7, 9), 42): 1, ((4, 7), 4): 1, ((5, 2), 5): 1, ((1, 1), 2): 1, ((4, 5), 4): 1, ((8, 5), 8): 1, ((9, 5), 9): 1, ((3, 3), 3): 1, ((6, 6), 6): 1, ((9, 8), 9): 1, ((4, 9), 4): 1, ((0, 9), 11): 1, ((6, 7), 6): 1, ((0, 6), 8): 1, ((7, 1), 7): 1, ((8, 1), 8): 1, ((3, 4), 3): 1, ((2, 2), 2): 1, ((3, 2), 3): 1, ((0, 0), 2): 1, ((2, 7), 2): 1, ((1, 2), 2): 1, ((2, 3), 2): 1, ((5, 6), 20): 1, ((9, 6), 9): 1, ((4, 8), 4): 1})
Symbol-06 (int -> int -> int), Samples:  60,  Counter({((6, 4), 11): 5, ((0, 4), 5): 4, ((5, 5), 10): 4, ((3, 7), 7): 4, ((8, 4), 13): 3, ((9, 7), 14): 3, ((1, 5), 5): 2, ((0, 1), 5): 2, ((2, 1), 6): 2, ((4, 2), 8): 1, ((7, 6), 12): 1, ((0, 0), 5): 1, ((2, 4), 6): 1, ((4, 6), 8): 1, ((2, 2), 6): 1, ((1, 4), 5): 1, ((6, 2), 11): 1, ((7, 1), 12): 1, ((6, 1), 11): 1, ((4, 1), 8): 1, ((1, 3), 5): 1, ((5, 3), 10): 1, ((1, 6), 5): 1, ((6, 5), 11): 1, ((1, 9), 5): 1, ((7, 3), 12): 1, ((0, 3), 5): 1, ((7, 9), 12): 1, ((9, 1), 14): 1, ((1, 1), 5): 1, ((5, 1), 9): 1, ((6, 8), 0): 1, ((0, 7), 5): 1, ((9, 2), 14): 1, ((7, 8), 40): 1, ((5, 2), 10): 1, ((4, 4), 8): 1, ((8, 6), 13): 1, ((5, 6), 12): 1, ((7, 4), 42): 1})
Symbol-13 (int -> int -> int), Samples:  73,  Counter({((6, 4), 12): 5, ((2, 4), 4): 4, ((9, 8), 18): 4, ((6, 6), 12): 3, ((4, 7), 8): 3, ((7, 2), 14): 3, ((6, 2), 12): 3, ((2, 2), 4): 3, ((5, 4), 10): 2, ((7, 1), 14): 2, ((3, 1), 6): 2, ((8, 8), 16): 2, ((5, 2), 10): 2, ((5, 5), 10): 2, ((8, 4), 16): 1, ((3, 2), 6): 1, ((2, 7), 4): 1, ((0, 9), 0): 1, ((3, 8), 6): 1, ((4, 2), 8): 1, ((0, 0), 0): 1, ((3, 4), 6): 1, ((4, 4), 8): 1, ((1, 4), 2): 1, ((9, 4), 18): 1, ((2, 3), 30): 1, ((6, 0), 12): 1, ((3, 7), 6): 1, ((9, 5), 18): 1, ((8, 9), 16): 1, ((0, 4), 0): 1, ((1, 7), 2): 1, ((1, 2), 2): 1, ((2, 5), 4): 1, ((4, 3), 8): 1, ((9, 2), 18): 1, ((1, 1), 2): 1, ((5, 8), 10): 1, ((7, 9), 14): 1, ((7, 6), 14): 1, ((7, 4), 63): 1, ((5, 0), 10): 1, ((0, 8), 0): 1, ((6, 7), 12): 1, ((4, 5), 32): 1, ((1, 9), 15): 1, ((2, 6), 36): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.94
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.97
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.90
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 57s
------------------------------
Epoch 24/499 (max_len=3, data=2820)
Train acc: 75.46 (abduce 96.63)
Dep:  Counter({(1, -1, 1): 1451, (-1,): 1000, (2, 2, -1): 253, (-1, 0, 0): 21})
Hit samples:  2725  Ave length:  2.27
Symbols:  15 [(0, 452), (1, 147), (2, 478), (3, 271), (4, 441), (5, 472), (6, 100), (7, 437), (8, 430), (9, 449), (10, 560), (11, 460), (12, 616), (13, 96), (14, 766)]
Learn perception with 2630 samples, take 240 sec.
Learn syntax with 2630 samples, take 2 sec.
result accuracy by digit:
0 ( 0%) 80.00
1 ( 0%) 100.00
2 ( 0%) 90.00
3 ( 0%) 80.00
4 ( 0%) 90.00
5 ( 0%) 80.00
6 ( 0%) 90.00
7 ( 0%) 100.00
8 ( 0%) 80.00
9 ( 0%) 90.00
val (Perception Acc=8.99, Syntax Acc=43.00, Result Acc=5.56)
Epoch time: 4m 8s
------------------------------
Epoch 25/499 (max_len=3, data=2820)
Train acc: 83.50 (abduce 97.52)
Dep:  Counter({(1, -1, 1): 1538, (-1,): 1000, (2, 2, -1): 196, (-1, 0, 0): 16})
Hit samples:  2750  Ave length:  2.27
Symbols:  15 [(0, 472), (1, 124), (2, 488), (3, 281), (4, 440), (5, 481), (6, 71), (7, 451), (8, 432), (9, 441), (10, 543), (11, 471), (12, 674), (13, 76), (14, 805)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  96,  Counter({((9, 4), 9): 6, ((0, 4), 6): 5, ((4, 4), 4): 5, ((7, 4), 7): 4, ((5, 4), 5): 4, ((1, 3), 3): 4, ((6, 2), 6): 4, ((6, 4), 6): 3, ((1, 4), 4): 3, ((1, 7), 7): 3, ((6, 6), 6): 3, ((6, 3), 6): 2, ((8, 4), 8): 2, ((2, 4), 2): 2, ((1, 6), 6): 2, ((8, 5), 8): 2, ((1, 9), 9): 2, ((9, 1), 9): 2, ((5, 5), 5): 2, ((3, 5), 3): 2, ((5, 2), 5): 1, ((4, 6), 4): 1, ((6, 7), 6): 1, ((4, 5), 4): 1, ((8, 8), 8): 1, ((6, 0), 6): 1, ((3, 3), 3): 1, ((3, 4), 3): 1, ((0, 6), 8): 1, ((7, 9), 42): 1, ((9, 9), 9): 1, ((9, 5), 9): 1, ((0, 7), 9): 1, ((7, 1), 7): 1, ((2, 5), 2): 1, ((4, 0), 4): 1, ((1, 1), 2): 1, ((3, 2), 3): 1, ((7, 8), 40): 1, ((0, 9), 11): 1, ((5, 9), 5): 1, ((9, 7), 9): 1, ((3, 1), 3): 1, ((1, 2), 2): 1, ((9, 2), 9): 1, ((2, 6), 2): 1, ((5, 6), 5): 1, ((7, 2), 7): 1, ((0, 0), 2): 1, ((8, 0), 0): 1, ((6, 8), 6): 1, ((5, 0), 5): 1, ((3, 9), 3): 1, ((1, 8), 72): 1})
Symbol-06 (int -> int -> int), Samples:  61,  Counter({((6, 4), 11): 6, ((0, 4), 5): 3, ((9, 4), 14): 3, ((3, 7), 7): 3, ((9, 7), 14): 3, ((8, 4), 13): 3, ((2, 1), 6): 3, ((2, 4), 6): 3, ((7, 6), 12): 3, ((5, 5), 10): 2, ((4, 8), 8): 2, ((7, 1), 12): 2, ((1, 4), 5): 2, ((0, 3), 5): 1, ((4, 2), 8): 1, ((0, 1), 5): 1, ((6, 5), 11): 1, ((0, 0), 5): 1, ((2, 2), 6): 1, ((1, 6), 5): 1, ((8, 6), 13): 1, ((6, 8), 11): 1, ((0, 7), 5): 1, ((1, 3), 5): 1, ((7, 9), 12): 1, ((8, 9), 12): 1, ((6, 2), 11): 1, ((4, 4), 8): 1, ((7, 4), 12): 1, ((3, 2), 7): 1, ((1, 9), 5): 1, ((8, 5), 13): 1, ((9, 2), 14): 1, ((6, 3), 42): 1, ((3, 6), 8): 1, ((7, 3), 12): 1})
Symbol-13 (int -> int -> int), Samples:  62,  Counter({((2, 2), 4): 5, ((3, 4), 6): 4, ((9, 8), 18): 4, ((2, 4), 4): 3, ((3, 2), 6): 3, ((0, 8), 0): 3, ((7, 2), 14): 3, ((9, 4), 18): 2, ((8, 8), 16): 2, ((4, 7), 8): 2, ((6, 6), 12): 2, ((3, 5), 6): 1, ((2, 7), 4): 1, ((1, 2), 2): 1, ((0, 9), 0): 1, ((6, 3), 30): 1, ((4, 3), 8): 1, ((8, 4), 16): 1, ((5, 2), 10): 1, ((3, 8), 6): 1, ((8, 0), 16): 1, ((5, 4), 10): 1, ((6, 1), 12): 1, ((3, 7), 6): 1, ((5, 8), 10): 1, ((7, 9), 14): 1, ((1, 4), 2): 1, ((0, 4), 0): 1, ((6, 7), 12): 1, ((5, 1), 10): 1, ((6, 4), 12): 1, ((1, 8), 1): 1, ((1, 7), 2): 1, ((7, 1), 14): 1, ((8, 9), 16): 1, ((0, 0), 0): 1, ((6, 0), 12): 1, ((7, 7), 14): 1, ((9, 5), 18): 1, ((0, 6), 0): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.94
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.96
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.94
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 57s
------------------------------
Epoch 26/499 (max_len=3, data=2820)
Train acc: 80.53 (abduce 97.38)
Dep:  Counter({(1, -1, 1): 1514, (-1,): 1000, (2, 2, -1): 203, (-1, 0, 0): 29})
Hit samples:  2746  Ave length:  2.27
Symbols:  15 [(0, 457), (1, 128), (2, 485), (3, 278), (4, 443), (5, 481), (6, 83), (7, 444), (8, 442), (9, 442), (10, 548), (11, 472), (12, 654), (13, 88), (14, 793)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  97,  Counter({((4, 4), 4): 6, ((9, 4), 9): 5, ((5, 4), 5): 4, ((1, 4), 4): 4, ((1, 7), 7): 4, ((0, 4), 6): 4, ((6, 4), 6): 3, ((1, 9), 9): 3, ((1, 8), 8): 3, ((6, 2), 6): 3, ((5, 2), 5): 3, ((3, 4), 3): 3, ((7, 4), 7): 3, ((6, 6), 6): 3, ((8, 4), 8): 3, ((1, 1), 2): 2, ((9, 6), 9): 2, ((1, 3), 3): 2, ((2, 4), 2): 2, ((4, 1), 4): 2, ((8, 8), 8): 2, ((8, 5), 8): 2, ((6, 8), 6): 1, ((6, 7), 6): 1, ((7, 0), 7): 1, ((3, 3), 3): 1, ((6, 0), 6): 1, ((0, 7), 9): 1, ((9, 7), 9): 1, ((4, 2), 4): 1, ((0, 0), 2): 1, ((9, 0), 9): 1, ((7, 1), 7): 1, ((1, 6), 6): 1, ((0, 9), 11): 1, ((9, 1), 15): 1, ((5, 5), 5): 1, ((5, 1), 5): 1, ((9, 9), 9): 1, ((4, 5), 4): 1, ((9, 2), 9): 1, ((2, 7), 2): 1, ((1, 2), 2): 1, ((3, 1), 3): 1, ((0, 6), 8): 1, ((8, 0), 8): 1, ((4, 3), 4): 1, ((9, 5), 9): 1, ((2, 1), 2): 1, ((4, 6), 12): 1, ((6, 1), 6): 1})
Symbol-06 (int -> int -> int), Samples:  70,  Counter({((6, 4), 11): 5, ((3, 7), 7): 4, ((9, 7), 14): 4, ((2, 1), 6): 4, ((5, 5), 10): 4, ((8, 4), 13): 4, ((0, 4), 5): 3, ((7, 9), 12): 3, ((9, 4), 14): 3, ((2, 3), 6): 3, ((4, 2), 8): 3, ((0, 3), 5): 2, ((6, 5), 11): 2, ((7, 1), 12): 2, ((7, 6), 12): 2, ((1, 4), 5): 1, ((1, 3), 5): 1, ((2, 2), 6): 1, ((8, 6), 13): 1, ((6, 0), 0): 1, ((1, 6), 5): 1, ((7, 4), 12): 1, ((3, 2), 7): 1, ((6, 2), 11): 1, ((0, 1), 5): 1, ((4, 8), 8): 1, ((0, 8), 5): 1, ((9, 2), 14): 1, ((4, 4), 8): 1, ((1, 9), 5): 1, ((0, 9), 5): 1, ((5, 2), 10): 1, ((4, 3), 16): 1, ((8, 5), 13): 1, ((3, 0), 0): 1, ((7, 3), 42): 1, ((1, 8), 5): 1})
Symbol-13 (int -> int -> int), Samples:  63,  Counter({((6, 4), 12): 5, ((3, 4), 6): 4, ((8, 8), 16): 3, ((7, 2), 14): 3, ((3, 2), 6): 3, ((2, 4), 4): 3, ((2, 2), 4): 3, ((4, 7), 8): 2, ((9, 6), 18): 2, ((9, 8), 18): 2, ((5, 2), 10): 1, ((0, 8), 0): 1, ((9, 4), 18): 1, ((0, 9), 0): 1, ((9, 9), 18): 1, ((7, 9), 14): 1, ((1, 2), 2): 1, ((2, 7), 4): 1, ((5, 4), 10): 1, ((3, 8), 6): 1, ((4, 6), 8): 1, ((7, 7), 14): 1, ((0, 0), 0): 1, ((1, 1), 2): 1, ((7, 5), 63): 1, ((3, 5), 6): 1, ((2, 5), 4): 1, ((3, 7), 6): 1, ((6, 2), 12): 1, ((4, 3), 8): 1, ((6, 1), 12): 1, ((3, 1), 6): 1, ((6, 7), 12): 1, ((6, 3), 12): 1, ((4, 1), 8): 1, ((8, 9), 16): 1, ((9, 2), 18): 1, ((5, 1), 10): 1, ((1, 4), 2): 1, ((7, 1), 14): 1, ((7, 4), 14): 1, ((5, 3), 10): 1, ((9, 3), 48): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.96
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.98
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.92
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 58s
------------------------------
Epoch 27/499 (max_len=3, data=2820)
Train acc: 83.69 (abduce 97.91)
Dep:  Counter({(1, -1, 1): 1520, (-1,): 1000, (2, 2, -1): 224, (-1, 0, 0): 17})
Hit samples:  2761  Ave length:  2.28
Symbols:  15 [(0, 464), (1, 138), (2, 487), (3, 275), (4, 452), (5, 483), (6, 82), (7, 446), (8, 434), (9, 451), (10, 557), (11, 473), (12, 656), (13, 89), (14, 796)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  98,  Counter({((9, 4), 9): 6, ((4, 4), 4): 6, ((0, 4), 6): 5, ((1, 4), 4): 5, ((1, 7), 7): 4, ((5, 4), 5): 4, ((6, 4), 6): 3, ((6, 2), 6): 3, ((5, 2), 5): 3, ((1, 9), 9): 3, ((7, 4), 7): 2, ((8, 5), 8): 2, ((6, 3), 6): 2, ((9, 6), 9): 2, ((2, 4), 2): 2, ((1, 3), 3): 2, ((1, 1), 2): 2, ((3, 4), 3): 2, ((6, 8), 6): 2, ((6, 6), 6): 2, ((1, 8), 8): 2, ((1, 2), 2): 2, ((3, 5), 3): 1, ((5, 5), 5): 1, ((5, 1), 5): 1, ((7, 0), 7): 1, ((8, 8), 8): 1, ((6, 0), 6): 1, ((4, 6), 4): 1, ((3, 3), 3): 1, ((7, 1), 7): 1, ((9, 5), 9): 1, ((9, 9), 9): 1, ((4, 1), 4): 1, ((9, 7), 9): 1, ((9, 0), 9): 1, ((9, 2), 9): 1, ((0, 7), 9): 1, ((3, 1), 3): 1, ((4, 2), 4): 1, ((9, 1), 9): 1, ((6, 7), 6): 1, ((4, 5), 4): 1, ((8, 4), 8): 1, ((2, 7), 2): 1, ((6, 1), 6): 1, ((0, 6), 8): 1, ((2, 5), 2): 1, ((1, 6), 6): 1, ((0, 0), 2): 1, ((3, 2), 3): 1, ((0, 9), 11): 1, ((7, 8), 42): 1, ((1, 5), 5): 1})
Symbol-06 (int -> int -> int), Samples:  59,  Counter({((6, 4), 11): 5, ((8, 4), 13): 4, ((9, 7), 14): 4, ((3, 7), 7): 3, ((9, 4), 14): 3, ((7, 6), 12): 3, ((7, 1), 12): 3, ((2, 1), 6): 2, ((2, 4), 6): 2, ((7, 9), 12): 2, ((5, 5), 10): 1, ((1, 4), 5): 1, ((2, 3), 6): 1, ((6, 5), 11): 1, ((3, 2), 7): 1, ((0, 3), 5): 1, ((0, 6), 5): 1, ((2, 2), 6): 1, ((0, 1), 5): 1, ((4, 2), 8): 1, ((0, 8), 5): 1, ((1, 6), 5): 1, ((4, 4), 8): 1, ((0, 0), 5): 1, ((4, 6), 8): 1, ((2, 5), 6): 1, ((5, 9), 10): 1, ((1, 5), 5): 1, ((1, 9), 5): 1, ((0, 4), 5): 1, ((8, 6), 13): 1, ((0, 7), 5): 1, ((4, 7), 8): 1, ((7, 4), 12): 1, ((8, 5), 13): 1, ((9, 2), 14): 1, ((2, 6), 24): 1, ((3, 4), 8): 1})
Symbol-13 (int -> int -> int), Samples:  64,  Counter({((7, 2), 14): 4, ((6, 4), 12): 4, ((2, 2), 4): 3, ((3, 2), 6): 3, ((3, 4), 6): 3, ((9, 2), 18): 3, ((2, 4), 4): 2, ((6, 5), 12): 2, ((3, 5), 6): 2, ((2, 5), 4): 1, ((3, 8), 6): 1, ((9, 4), 18): 1, ((9, 8), 18): 1, ((6, 1), 12): 1, ((8, 8), 16): 1, ((3, 7), 6): 1, ((7, 9), 14): 1, ((6, 7), 12): 1, ((1, 2), 2): 1, ((6, 2), 12): 1, ((9, 6), 18): 1, ((2, 7), 4): 1, ((5, 4), 10): 1, ((4, 6), 8): 1, ((5, 8), 10): 1, ((9, 1), 18): 1, ((0, 0), 0): 1, ((5, 1), 10): 1, ((1, 8), 2): 1, ((8, 4), 16): 1, ((0, 8), 0): 1, ((1, 3), 30): 1, ((7, 7), 14): 1, ((0, 9), 0): 1, ((4, 3), 8): 1, ((8, 0), 16): 1, ((4, 7), 8): 1, ((7, 1), 14): 1, ((5, 2), 10): 1, ((4, 1), 8): 1, ((0, 4), 0): 1, ((6, 3), 12): 1, ((5, 5), 10): 1, ((6, 6), 12): 1, ((8, 5), 9): 1, ((7, 5), 14): 1, ((1, 0), 2): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.96
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.98
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.95
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 28/499 (max_len=3, data=2820)
Train acc: 80.86 (abduce 97.62)
Dep:  Counter({(1, -1, 1): 1522, (-1,): 1000, (2, 2, -1): 210, (-1, 0, 0): 21})
Hit samples:  2753  Ave length:  2.27
Symbols:  15 [(0, 466), (1, 130), (2, 485), (3, 284), (4, 441), (5, 485), (6, 80), (7, 437), (8, 437), (9, 452), (10, 545), (11, 474), (12, 669), (13, 76), (14, 798)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  98,  Counter({((5, 4), 5): 7, ((9, 4), 9): 5, ((0, 4), 6): 4, ((1, 4), 4): 4, ((7, 4), 7): 4, ((1, 3), 3): 3, ((6, 4), 6): 3, ((1, 9), 9): 3, ((2, 4), 2): 3, ((1, 7), 7): 3, ((4, 4), 4): 3, ((6, 3), 6): 2, ((5, 2), 5): 2, ((8, 8), 8): 2, ((6, 2), 6): 2, ((9, 2), 9): 2, ((7, 1), 7): 2, ((0, 7), 9): 2, ((1, 1), 2): 2, ((8, 4), 8): 2, ((4, 2), 24): 2, ((8, 5), 8): 2, ((6, 7), 6): 1, ((4, 5), 4): 1, ((9, 7), 9): 1, ((6, 0), 6): 1, ((7, 9), 42): 1, ((6, 8), 6): 1, ((9, 0), 9): 1, ((0, 6), 8): 1, ((7, 0), 7): 1, ((5, 5), 5): 1, ((8, 3), 8): 1, ((0, 0), 2): 1, ((1, 8), 8): 1, ((3, 4), 3): 1, ((9, 1), 15): 1, ((9, 5), 9): 1, ((3, 3), 3): 1, ((2, 7), 2): 1, ((9, 9), 9): 1, ((6, 6), 6): 1, ((4, 6), 4): 1, ((4, 9), 4): 1, ((1, 5), 5): 1, ((9, 6), 9): 1, ((6, 1), 6): 1, ((1, 6), 6): 1, ((0, 9), 11): 1, ((1, 2), 2): 1, ((3, 1), 3): 1, ((5, 1), 5): 1, ((3, 5), 3): 1, ((7, 7), 7): 1, ((3, 8), 3): 1, ((9, 8), 9): 1})
Symbol-06 (int -> int -> int), Samples:  64,  Counter({((6, 4), 11): 7, ((3, 7), 7): 4, ((8, 4), 13): 3, ((2, 4), 6): 3, ((4, 2), 8): 3, ((0, 4), 5): 3, ((7, 1), 12): 2, ((3, 2), 7): 2, ((9, 4), 14): 2, ((2, 3), 6): 2, ((4, 4), 8): 2, ((5, 1), 10): 2, ((7, 9), 12): 2, ((5, 5), 10): 1, ((0, 1), 5): 1, ((1, 4), 5): 1, ((9, 7), 14): 1, ((8, 6), 13): 1, ((6, 5), 11): 1, ((2, 2), 6): 1, ((0, 7), 5): 1, ((0, 0), 5): 1, ((0, 6), 5): 1, ((7, 6), 12): 1, ((0, 3), 5): 1, ((6, 8), 11): 1, ((6, 2), 11): 1, ((1, 6), 5): 1, ((1, 9), 5): 1, ((2, 1), 6): 1, ((9, 2), 14): 1, ((1, 3), 5): 1, ((8, 5), 13): 1, ((1, 1), 5): 1, ((3, 4), 8): 1, ((1, 5), 5): 1, ((4, 6), 18): 1, ((4, 8), 8): 1, ((0, 8), 5): 1, ((2, 0), 3): 1})
Symbol-13 (int -> int -> int), Samples:  59,  Counter({((7, 2), 14): 5, ((3, 4), 6): 4, ((3, 2), 6): 3, ((2, 4), 4): 2, ((2, 2), 4): 2, ((0, 8), 0): 2, ((5, 4), 10): 2, ((6, 4), 12): 2, ((6, 2), 12): 2, ((6, 6), 12): 2, ((4, 7), 8): 1, ((0, 4), 0): 1, ((3, 8), 6): 1, ((8, 8), 16): 1, ((5, 2), 10): 1, ((9, 6), 18): 1, ((1, 2), 2): 1, ((3, 7), 6): 1, ((1, 1), 2): 1, ((7, 7), 63): 1, ((9, 9), 18): 1, ((0, 9), 0): 1, ((6, 7), 12): 1, ((9, 8), 18): 1, ((6, 3), 12): 1, ((8, 9), 16): 1, ((3, 1), 6): 1, ((4, 3), 8): 1, ((1, 4), 2): 1, ((1, 8), 2): 1, ((6, 1), 12): 1, ((9, 4), 18): 1, ((0, 0), 0): 1, ((7, 1), 14): 1, ((6, 5), 12): 1, ((9, 2), 18): 1, ((3, 5), 6): 1, ((4, 6), 8): 1, ((2, 7), 4): 1, ((4, 4), 8): 1, ((6, 0), 12): 1, ((2, 5), 4): 1, ((7, 4), 14): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.97
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.95
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.97
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 29/499 (max_len=3, data=2820)
Train acc: 83.76 (abduce 97.91)
Dep:  Counter({(1, -1, 1): 1540, (-1,): 1000, (2, 2, -1): 208, (-1, 0, 0): 13})
Hit samples:  2761  Ave length:  2.28
Symbols:  15 [(0, 471), (1, 126), (2, 483), (3, 284), (4, 440), (5, 485), (6, 74), (7, 443), (8, 441), (9, 449), (10, 554), (11, 472), (12, 674), (13, 82), (14, 805)]
Learn perception with 2700 samples, take 246 sec.
Learn syntax with 2700 samples, take 2 sec.
result accuracy by digit:
0 ( 0%) 80.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 80.00
4 ( 0%) 90.00
5 ( 0%) 80.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 80.00
9 ( 0%) 90.00
val (Perception Acc=9.18, Syntax Acc=43.21, Result Acc=5.83)
Epoch time: 4m 15s
------------------------------
Epoch 30/499 (max_len=3, data=2820)
Train acc: 88.18 (abduce 98.79)
Dep:  Counter({(1, -1, 1): 1583, (-1,): 1000, (2, 2, -1): 187, (-1, 0, 0): 16})
Hit samples:  2786  Ave length:  2.28
Symbols:  15 [(0, 487), (1, 114), (2, 494), (3, 284), (4, 454), (5, 489), (6, 65), (7, 449), (8, 446), (9, 445), (10, 552), (11, 472), (12, 717), (13, 71), (14, 819)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  96,  Counter({((4, 4), 4): 8, ((9, 4), 9): 6, ((5, 4), 5): 6, ((7, 4), 7): 5, ((6, 4), 6): 4, ((1, 7), 7): 4, ((6, 2), 6): 4, ((0, 4), 6): 4, ((2, 4), 2): 3, ((6, 3), 6): 3, ((5, 2), 5): 3, ((1, 4), 4): 3, ((3, 4), 3): 2, ((8, 4), 8): 2, ((9, 9), 9): 2, ((1, 3), 3): 2, ((3, 5), 3): 2, ((6, 6), 6): 2, ((8, 8), 8): 2, ((5, 1), 5): 2, ((6, 8), 6): 1, ((9, 6), 9): 1, ((7, 0), 7): 1, ((4, 5), 4): 1, ((9, 7), 9): 1, ((0, 7), 9): 1, ((1, 9), 9): 1, ((4, 1), 4): 1, ((3, 3), 3): 1, ((0, 9), 11): 1, ((0, 6), 8): 1, ((6, 0), 6): 1, ((8, 5), 8): 1, ((0, 0), 2): 1, ((4, 8), 40): 1, ((2, 7), 2): 1, ((1, 6), 6): 1, ((5, 5), 5): 1, ((9, 1), 9): 1, ((4, 0), 4): 1, ((3, 1), 3): 1, ((6, 7), 6): 1, ((6, 1), 6): 1, ((1, 1), 2): 1, ((1, 8), 8): 1, ((1, 5), 5): 1, ((3, 8), 3): 1})
Symbol-06 (int -> int -> int), Samples:  58,  Counter({((6, 4), 11): 5, ((8, 4), 13): 4, ((9, 7), 14): 3, ((3, 7), 7): 3, ((3, 2), 7): 3, ((0, 8), 5): 3, ((2, 1), 6): 2, ((2, 3), 6): 2, ((7, 6), 12): 2, ((7, 1), 12): 2, ((7, 9), 12): 2, ((6, 5), 11): 2, ((7, 4), 12): 2, ((2, 4), 6): 2, ((9, 4), 14): 2, ((2, 2), 6): 1, ((4, 7), 8): 1, ((4, 2), 8): 1, ((1, 6), 5): 1, ((4, 6), 8): 1, ((5, 5), 10): 1, ((5, 3), 10): 1, ((0, 1), 5): 1, ((1, 3), 5): 1, ((8, 6), 13): 1, ((0, 4), 5): 1, ((0, 3), 5): 1, ((6, 8), 11): 1, ((8, 3), 13): 1, ((4, 4), 8): 1, ((2, 5), 6): 1, ((1, 4), 5): 1, ((4, 8), 8): 1, ((1, 9), 5): 1})
Symbol-13 (int -> int -> int), Samples:  57,  Counter({((2, 4), 4): 4, ((3, 4), 6): 3, ((7, 2), 14): 3, ((3, 2), 6): 2, ((2, 2), 4): 2, ((9, 1), 18): 2, ((9, 6), 18): 2, ((3, 5), 6): 2, ((0, 8), 0): 2, ((6, 4), 12): 2, ((1, 2), 2): 1, ((6, 2), 12): 1, ((9, 9), 18): 1, ((9, 8), 18): 1, ((8, 4), 16): 1, ((5, 4), 10): 1, ((6, 5), 12): 1, ((5, 2), 10): 1, ((6, 1), 12): 1, ((6, 7), 12): 1, ((2, 5), 4): 1, ((4, 6), 8): 1, ((8, 9), 16): 1, ((3, 1), 6): 1, ((3, 8), 6): 1, ((4, 3), 8): 1, ((9, 4), 18): 1, ((5, 1), 10): 1, ((3, 7), 6): 1, ((2, 7), 4): 1, ((7, 9), 14): 1, ((4, 7), 8): 1, ((1, 8), 2): 1, ((7, 7), 14): 1, ((1, 4), 2): 1, ((6, 0), 12): 1, ((4, 8), 8): 1, ((8, 0), 16): 1, ((6, 3), 12): 1, ((8, 8), 16): 1, ((0, 2), 25): 1, ((1, 9), 15): 1, ((6, 6), 12): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.98
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.98
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.99
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 31/499 (max_len=3, data=2820)
Train acc: 86.26 (abduce 98.51)
Dep:  Counter({(1, -1, 1): 1600, (-1,): 1000, (2, 2, -1): 165, (-1, 0, 0): 13})
Hit samples:  2778  Ave length:  2.28
Symbols:  15 [(0, 488), (1, 97), (2, 485), (3, 283), (4, 452), (5, 487), (6, 66), (7, 452), (8, 454), (9, 439), (10, 540), (11, 476), (12, 713), (13, 65), (14, 837)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  82,  Counter({((4, 4), 4): 7, ((9, 4), 9): 6, ((6, 4), 6): 4, ((5, 4), 5): 3, ((0, 4), 6): 3, ((5, 2), 5): 2, ((2, 4), 2): 2, ((1, 9), 9): 2, ((6, 2), 6): 2, ((1, 4), 4): 2, ((7, 4), 7): 2, ((6, 3), 6): 2, ((1, 7), 7): 2, ((8, 4), 8): 2, ((9, 1), 9): 2, ((9, 9), 9): 2, ((1, 8), 8): 2, ((8, 8), 8): 2, ((7, 1), 7): 2, ((3, 5), 3): 2, ((3, 4), 3): 2, ((5, 1), 5): 1, ((6, 0), 6): 1, ((6, 6), 6): 1, ((1, 3), 3): 1, ((1, 6), 6): 1, ((4, 0), 4): 1, ((6, 8), 6): 1, ((9, 7), 9): 1, ((2, 7), 2): 1, ((9, 5), 9): 1, ((3, 3), 3): 1, ((0, 6), 8): 1, ((0, 9), 11): 1, ((6, 7), 6): 1, ((4, 6), 4): 1, ((9, 6), 9): 1, ((8, 5), 8): 1, ((9, 0), 9): 1, ((7, 7), 7): 1, ((3, 1), 3): 1, ((4, 8), 40): 1, ((4, 5), 4): 1, ((9, 2), 9): 1, ((0, 0), 2): 1, ((5, 5), 5): 1, ((2, 8), 2): 1, ((5, 9), 5): 1})
Symbol-06 (int -> int -> int), Samples:  55,  Counter({((3, 7), 7): 3, ((9, 7), 14): 3, ((8, 4), 13): 3, ((7, 6), 12): 3, ((3, 2), 7): 3, ((5, 5), 10): 2, ((1, 4), 5): 2, ((4, 4), 8): 2, ((6, 4), 11): 2, ((2, 1), 6): 2, ((9, 4), 14): 2, ((0, 3), 5): 2, ((7, 9), 12): 2, ((0, 8), 5): 2, ((2, 3), 6): 1, ((6, 8), 11): 1, ((1, 6), 5): 1, ((4, 6), 8): 1, ((7, 1), 12): 1, ((4, 7), 8): 1, ((4, 2), 8): 1, ((0, 6), 5): 1, ((8, 6), 13): 1, ((0, 1), 5): 1, ((1, 3), 5): 1, ((6, 5), 11): 1, ((5, 3), 10): 1, ((2, 4), 6): 1, ((1, 9), 5): 1, ((2, 2), 6): 1, ((8, 5), 13): 1, ((4, 8), 8): 1, ((1, 5), 5): 1, ((0, 4), 5): 1, ((5, 2), 10): 1, ((6, 0), 0): 1})
Symbol-13 (int -> int -> int), Samples:  53,  Counter({((7, 2), 14): 4, ((6, 4), 12): 4, ((2, 4), 4): 3, ((2, 2), 4): 2, ((3, 4), 6): 2, ((4, 7), 8): 2, ((3, 5), 6): 2, ((1, 2), 2): 1, ((3, 8), 6): 1, ((0, 8), 0): 1, ((9, 4), 18): 1, ((8, 9), 16): 1, ((9, 9), 18): 1, ((4, 3), 8): 1, ((6, 1), 12): 1, ((1, 4), 2): 1, ((3, 2), 6): 1, ((8, 8), 16): 1, ((5, 2), 10): 1, ((1, 7), 2): 1, ((3, 1), 6): 1, ((7, 9), 14): 1, ((3, 7), 6): 1, ((2, 5), 4): 1, ((9, 6), 18): 1, ((9, 8), 18): 1, ((6, 3), 30): 1, ((6, 5), 12): 1, ((5, 1), 10): 1, ((8, 4), 16): 1, ((2, 7), 4): 1, ((7, 1), 14): 1, ((8, 0), 16): 1, ((6, 2), 12): 1, ((4, 4), 8): 1, ((0, 4), 0): 1, ((6, 6), 12): 1, ((6, 9), 12): 1, ((7, 4), 14): 1, ((7, 7), 16): 1, ((5, 0), 10): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.96
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.98
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.98
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 55s
------------------------------
Epoch 32/499 (max_len=3, data=2820)
Train acc: 86.88 (abduce 98.44)
Dep:  Counter({(1, -1, 1): 1583, (-1,): 1000, (2, 2, -1): 180, (-1, 0, 0): 13})
Hit samples:  2776  Ave length:  2.28
Symbols:  15 [(0, 477), (1, 121), (2, 477), (3, 279), (4, 446), (5, 486), (6, 62), (7, 444), (8, 453), (9, 457), (10, 554), (11, 479), (12, 708), (13, 71), (14, 814)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  93,  Counter({((4, 4), 4): 7, ((5, 4), 5): 6, ((7, 4), 7): 5, ((9, 4), 9): 5, ((0, 4), 6): 5, ((1, 4), 4): 4, ((6, 2), 6): 4, ((1, 8), 8): 3, ((1, 7), 7): 3, ((5, 2), 5): 2, ((6, 3), 6): 2, ((1, 9), 9): 2, ((1, 3), 3): 2, ((6, 4), 6): 2, ((9, 9), 9): 2, ((8, 8), 8): 2, ((9, 1), 9): 2, ((3, 5), 3): 2, ((2, 4), 2): 2, ((6, 1), 6): 1, ((9, 2), 9): 1, ((1, 6), 6): 1, ((3, 4), 3): 1, ((2, 7), 2): 1, ((6, 0), 6): 1, ((7, 0), 7): 1, ((9, 5), 9): 1, ((3, 1), 3): 1, ((6, 7), 6): 1, ((6, 6), 6): 1, ((4, 6), 4): 1, ((4, 5), 4): 1, ((9, 0), 9): 1, ((0, 7), 9): 1, ((0, 0), 2): 1, ((8, 4), 8): 1, ((8, 5), 8): 1, ((9, 6), 9): 1, ((0, 6), 8): 1, ((4, 1), 4): 1, ((4, 0), 4): 1, ((3, 0), 3): 1, ((7, 1), 7): 1, ((6, 8), 6): 1, ((0, 9), 11): 1, ((1, 2), 2): 1, ((5, 5), 5): 1, ((5, 1), 5): 1, ((3, 8), 3): 1, ((2, 8), 2): 1})
Symbol-06 (int -> int -> int), Samples:  55,  Counter({((6, 4), 11): 5, ((3, 7), 7): 4, ((9, 7), 14): 4, ((7, 1), 12): 3, ((4, 4), 8): 2, ((3, 2), 7): 2, ((8, 4), 13): 2, ((0, 4), 5): 2, ((0, 8), 5): 2, ((2, 1), 6): 2, ((7, 9), 12): 2, ((1, 4), 5): 2, ((2, 4), 6): 2, ((6, 8), 11): 1, ((8, 6), 13): 1, ((2, 3), 6): 1, ((0, 1), 5): 1, ((0, 3), 5): 1, ((4, 6), 8): 1, ((7, 6), 12): 1, ((8, 3), 13): 1, ((1, 3), 5): 1, ((1, 6), 5): 1, ((9, 4), 14): 1, ((2, 2), 6): 1, ((0, 0), 5): 1, ((2, 5), 6): 1, ((4, 7), 8): 1, ((8, 5), 13): 1, ((4, 2), 8): 1, ((5, 3), 10): 1, ((1, 9), 5): 1, ((6, 2), 11): 1, ((7, 4), 12): 1})
Symbol-13 (int -> int -> int), Samples:  56,  Counter({((3, 4), 6): 3, ((7, 2), 14): 3, ((6, 4), 12): 3, ((2, 4), 4): 3, ((9, 1), 18): 3, ((3, 2), 6): 2, ((5, 2), 10): 2, ((4, 7), 8): 2, ((6, 1), 12): 1, ((1, 2), 2): 1, ((6, 7), 12): 1, ((8, 9), 16): 1, ((8, 4), 16): 1, ((8, 8), 16): 1, ((9, 9), 18): 1, ((4, 3), 8): 1, ((2, 3), 30): 1, ((9, 8), 18): 1, ((2, 2), 4): 1, ((2, 7), 4): 1, ((7, 9), 14): 1, ((6, 0), 12): 1, ((6, 2), 12): 1, ((6, 3), 12): 1, ((4, 6), 8): 1, ((3, 8), 6): 1, ((5, 4), 10): 1, ((9, 4), 18): 1, ((7, 1), 14): 1, ((0, 4), 0): 1, ((1, 9), 2): 1, ((3, 5), 6): 1, ((3, 7), 6): 1, ((1, 4), 2): 1, ((7, 7), 14): 1, ((6, 5), 12): 1, ((9, 6), 18): 1, ((2, 5), 4): 1, ((7, 4), 14): 1, ((9, 5), 18): 1, ((8, 0), 16): 1, ((1, 1), 2): 1, ((3, 1), 10): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.96
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.98
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.99
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 58s
------------------------------
Epoch 33/499 (max_len=3, data=2820)
Train acc: 88.18 (abduce 98.79)
Dep:  Counter({(1, -1, 1): 1606, (-1,): 1000, (2, 2, -1): 170, (-1, 0, 0): 10})
Hit samples:  2786  Ave length:  2.28
Symbols:  15 [(0, 485), (1, 104), (2, 493), (3, 281), (4, 451), (5, 490), (6, 63), (7, 453), (8, 450), (9, 448), (10, 544), (11, 477), (12, 721), (13, 70), (14, 828)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  89,  Counter({((5, 4), 5): 6, ((9, 4), 9): 6, ((4, 4), 4): 5, ((7, 4), 7): 5, ((0, 4), 6): 4, ((6, 4), 6): 4, ((6, 2), 6): 4, ((1, 7), 7): 3, ((1, 4), 4): 2, ((9, 9), 9): 2, ((5, 2), 5): 2, ((1, 8), 8): 2, ((2, 4), 2): 2, ((9, 1), 9): 2, ((8, 8), 8): 2, ((3, 4), 3): 2, ((5, 1), 5): 2, ((5, 5), 5): 1, ((6, 8), 6): 1, ((1, 9), 9): 1, ((7, 0), 7): 1, ((9, 6), 9): 1, ((6, 0), 6): 1, ((4, 5), 4): 1, ((9, 7), 9): 1, ((7, 1), 7): 1, ((3, 3), 3): 1, ((0, 9), 11): 1, ((4, 0), 4): 1, ((8, 4), 8): 1, ((0, 7), 9): 1, ((0, 6), 8): 1, ((9, 5), 9): 1, ((1, 3), 3): 1, ((6, 7), 6): 1, ((9, 0), 9): 1, ((4, 8), 40): 1, ((6, 3), 6): 1, ((4, 6), 4): 1, ((7, 7), 7): 1, ((4, 9), 4): 1, ((6, 1), 6): 1, ((6, 6), 6): 1, ((3, 1), 3): 1, ((3, 5), 3): 1, ((1, 2), 2): 1, ((8, 5), 8): 1, ((2, 7), 2): 1, ((8, 6), 8): 1, ((9, 2), 9): 1, ((3, 8), 3): 1})
Symbol-06 (int -> int -> int), Samples:  54,  Counter({((6, 4), 11): 4, ((3, 7), 7): 3, ((9, 7), 14): 3, ((8, 4), 13): 3, ((0, 4), 5): 2, ((7, 1), 12): 2, ((0, 8), 5): 2, ((1, 4), 5): 2, ((2, 4), 6): 2, ((7, 6), 12): 2, ((3, 2), 7): 2, ((5, 5), 10): 2, ((2, 3), 6): 2, ((7, 4), 12): 1, ((8, 6), 13): 1, ((6, 5), 11): 1, ((4, 2), 8): 1, ((0, 1), 5): 1, ((4, 7), 8): 1, ((6, 8), 11): 1, ((9, 4), 14): 1, ((0, 6), 5): 1, ((2, 2), 6): 1, ((1, 6), 5): 1, ((4, 4), 8): 1, ((2, 1), 6): 1, ((0, 0), 5): 1, ((0, 3), 5): 1, ((1, 3), 5): 1, ((1, 9), 5): 1, ((4, 6), 8): 1, ((8, 5), 13): 1, ((7, 9), 12): 1, ((5, 9), 10): 1, ((2, 5), 6): 1, ((3, 4), 9): 1})
Symbol-13 (int -> int -> int), Samples:  62,  Counter({((3, 4), 6): 5, ((2, 4), 4): 4, ((7, 2), 14): 4, ((2, 2), 4): 3, ((5, 2), 10): 3, ((4, 7), 8): 3, ((0, 8), 0): 2, ((9, 4), 18): 2, ((9, 6), 18): 2, ((3, 5), 6): 2, ((3, 1), 6): 2, ((8, 4), 16): 1, ((6, 7), 12): 1, ((6, 2), 12): 1, ((1, 4), 2): 1, ((6, 4), 12): 1, ((1, 8), 2): 1, ((6, 1), 12): 1, ((9, 1), 18): 1, ((8, 9), 16): 1, ((1, 2), 2): 1, ((6, 3), 12): 1, ((2, 7), 4): 1, ((6, 0), 12): 1, ((4, 6), 8): 1, ((3, 7), 6): 1, ((7, 7), 14): 1, ((3, 8), 6): 1, ((0, 4), 0): 1, ((2, 5), 4): 1, ((6, 5), 12): 1, ((8, 0), 16): 1, ((5, 1), 10): 1, ((1, 1), 2): 1, ((4, 5), 8): 1, ((8, 8), 16): 1, ((7, 1), 14): 1, ((4, 4), 14): 1, ((9, 7), 18): 1, ((4, 2), 25): 1, ((5, 7), 10): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.98
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.98
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.97
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 57s
------------------------------
Epoch 34/499 (max_len=3, data=2820)
Train acc: 88.51 (abduce 98.69)
Dep:  Counter({(1, -1, 1): 1594, (-1,): 1000, (2, 2, -1): 176, (-1, 0, 0): 13})
Hit samples:  2783  Ave length:  2.28
Symbols:  15 [(0, 476), (1, 111), (2, 489), (3, 285), (4, 450), (5, 491), (6, 60), (7, 452), (8, 452), (9, 447), (10, 547), (11, 477), (12, 714), (13, 72), (14, 826)]
Learn perception with 2748 samples, take 250 sec.
Learn syntax with 2748 samples, take 2 sec.
result accuracy by digit:
0 ( 0%) 80.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 80.00
4 ( 0%) 90.00
5 ( 0%) 80.00
6 ( 0%) 90.00
7 ( 0%) 100.00
8 ( 0%) 80.00
9 ( 0%) 90.00
val (Perception Acc=9.25, Syntax Acc=43.10, Result Acc=5.78)
Epoch time: 4m 18s
------------------------------
Epoch 35/499 (max_len=3, data=2820)
Train acc: 90.40 (abduce 98.79)
Dep:  Counter({(1, -1, 1): 1619, (-1,): 1000, (2, 2, -1): 153, (-1, 0, 0): 14})
Hit samples:  2786  Ave length:  2.28
Symbols:  15 [(0, 474), (1, 107), (2, 493), (3, 290), (4, 455), (5, 490), (6, 55), (7, 459), (8, 449), (9, 448), (10, 537), (11, 477), (12, 722), (13, 62), (14, 840)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  88,  Counter({((9, 4), 9): 5, ((5, 4), 5): 5, ((4, 4), 4): 4, ((7, 4), 7): 4, ((0, 4), 6): 4, ((1, 7), 7): 4, ((2, 4), 2): 3, ((3, 4), 3): 3, ((6, 2), 6): 2, ((5, 5), 5): 2, ((1, 4), 4): 2, ((1, 9), 9): 2, ((6, 0), 6): 2, ((1, 8), 8): 2, ((6, 3), 6): 2, ((3, 5), 3): 2, ((9, 9), 9): 2, ((5, 2), 5): 2, ((8, 4), 8): 2, ((4, 1), 4): 2, ((4, 0), 4): 1, ((6, 4), 6): 1, ((1, 6), 6): 1, ((9, 6), 9): 1, ((3, 3), 3): 1, ((6, 7), 6): 1, ((6, 8), 6): 1, ((7, 0), 7): 1, ((9, 7), 9): 1, ((4, 8), 40): 1, ((2, 7), 2): 1, ((8, 8), 8): 1, ((9, 2), 9): 1, ((9, 0), 9): 1, ((3, 1), 3): 1, ((2, 2), 2): 1, ((1, 1), 2): 1, ((1, 3), 3): 1, ((0, 6), 8): 1, ((0, 9), 11): 1, ((7, 7), 7): 1, ((6, 6), 6): 1, ((4, 6), 4): 1, ((9, 5), 9): 1, ((0, 0), 2): 1, ((8, 3), 8): 1, ((4, 7), 4): 1, ((3, 8), 3): 1, ((8, 0), 0): 1, ((4, 5), 4): 1, ((8, 5), 8): 1, ((1, 2), 2): 1})
Symbol-06 (int -> int -> int), Samples:  48,  Counter({((6, 4), 11): 4, ((9, 7), 14): 3, ((7, 1), 12): 2, ((2, 1), 6): 2, ((0, 4), 5): 2, ((7, 6), 12): 2, ((0, 8), 5): 2, ((3, 7), 7): 2, ((4, 4), 8): 2, ((2, 4), 6): 2, ((1, 9), 5): 2, ((9, 4), 14): 1, ((8, 6), 13): 1, ((4, 2), 8): 1, ((8, 5), 13): 1, ((3, 2), 7): 1, ((6, 5), 11): 1, ((6, 8), 11): 1, ((4, 7), 8): 1, ((7, 9), 12): 1, ((1, 6), 5): 1, ((0, 6), 5): 1, ((3, 3), 7): 1, ((5, 5), 10): 1, ((8, 4), 13): 1, ((0, 3), 5): 1, ((2, 3), 6): 1, ((1, 4), 5): 1, ((0, 9), 5): 1, ((0, 1), 5): 1, ((2, 8), 6): 1, ((5, 3), 10): 1, ((8, 3), 13): 1, ((4, 8), 8): 1})
Symbol-13 (int -> int -> int), Samples:  51,  Counter({((3, 4), 6): 3, ((3, 2), 6): 2, ((2, 4), 4): 2, ((7, 2), 14): 2, ((6, 4), 12): 2, ((9, 4), 18): 2, ((6, 0), 12): 2, ((2, 2), 4): 2, ((9, 1), 18): 2, ((3, 5), 6): 1, ((6, 2), 12): 1, ((9, 8), 18): 1, ((9, 9), 18): 1, ((3, 7), 6): 1, ((1, 7), 2): 1, ((7, 9), 14): 1, ((2, 5), 4): 1, ((1, 4), 2): 1, ((6, 1), 12): 1, ((4, 6), 8): 1, ((9, 5), 18): 1, ((5, 2), 10): 1, ((8, 9), 16): 1, ((9, 6), 18): 1, ((0, 8), 0): 1, ((8, 8), 16): 1, ((4, 8), 8): 1, ((2, 7), 4): 1, ((8, 0), 16): 1, ((4, 7), 8): 1, ((1, 8), 2): 1, ((1, 2), 2): 1, ((6, 5), 12): 1, ((3, 8), 6): 1, ((4, 5), 8): 1, ((5, 1), 10): 1, ((0, 3), 30): 1, ((7, 7), 14): 1, ((3, 1), 6): 1, ((7, 4), 14): 1, ((8, 4), 16): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.98
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.97
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 36/499 (max_len=3, data=2820)
Train acc: 90.33 (abduce 98.79)
Dep:  Counter({(1, -1, 1): 1626, (-1,): 1000, (2, 2, -1): 149, (-1, 0, 0): 11})
Hit samples:  2786  Ave length:  2.28
Symbols:  15 [(0, 483), (1, 100), (2, 495), (3, 287), (4, 451), (5, 490), (6, 61), (7, 453), (8, 448), (9, 450), (10, 534), (11, 481), (12, 720), (13, 61), (14, 844)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  83,  Counter({((9, 4), 9): 6, ((5, 4), 5): 6, ((4, 4), 4): 5, ((0, 4), 6): 4, ((6, 2), 6): 3, ((3, 4), 3): 3, ((1, 7), 7): 3, ((1, 9), 9): 2, ((6, 0), 6): 2, ((7, 4), 7): 2, ((8, 5), 8): 2, ((5, 5), 5): 2, ((2, 4), 2): 2, ((9, 1), 9): 2, ((6, 3), 6): 2, ((8, 4), 8): 2, ((3, 5), 3): 2, ((4, 6), 4): 1, ((9, 6), 9): 1, ((4, 5), 4): 1, ((9, 0), 9): 1, ((9, 7), 9): 1, ((4, 0), 4): 1, ((2, 7), 2): 1, ((3, 3), 3): 1, ((4, 8), 40): 1, ((8, 8), 8): 1, ((7, 1), 7): 1, ((9, 9), 9): 1, ((6, 6), 6): 1, ((6, 4), 6): 1, ((9, 2), 9): 1, ((5, 2), 5): 1, ((6, 8), 6): 1, ((7, 0), 7): 1, ((0, 9), 11): 1, ((1, 4), 4): 1, ((2, 2), 2): 1, ((1, 1), 2): 1, ((0, 0), 2): 1, ((1, 8), 8): 1, ((1, 6), 6): 1, ((0, 7), 9): 1, ((3, 1), 3): 1, ((7, 8), 7): 1, ((7, 7), 7): 1, ((4, 1), 4): 1, ((9, 5), 9): 1, ((0, 6), 8): 1, ((6, 7), 6): 1})
Symbol-06 (int -> int -> int), Samples:  49,  Counter({((6, 4), 11): 5, ((9, 7), 14): 3, ((2, 1), 6): 2, ((3, 2), 7): 2, ((0, 4), 5): 2, ((0, 8), 5): 2, ((7, 1), 12): 2, ((3, 7), 7): 2, ((2, 4), 6): 2, ((7, 9), 12): 1, ((6, 5), 11): 1, ((2, 3), 6): 1, ((0, 9), 5): 1, ((0, 1), 5): 1, ((8, 5), 13): 1, ((7, 6), 12): 1, ((8, 4), 13): 1, ((5, 3), 10): 1, ((9, 4), 14): 1, ((4, 4), 8): 1, ((0, 3), 5): 1, ((4, 7), 8): 1, ((5, 5), 10): 1, ((1, 4), 5): 1, ((6, 8), 11): 1, ((1, 6), 5): 1, ((2, 8), 6): 1, ((4, 2), 8): 1, ((0, 6), 5): 1, ((8, 6), 13): 1, ((3, 3), 7): 1, ((1, 3), 5): 1, ((8, 9), 13): 1, ((1, 9), 5): 1, ((4, 6), 8): 1, ((1, 5), 5): 1})
Symbol-13 (int -> int -> int), Samples:  53,  Counter({((2, 2), 4): 4, ((3, 2), 6): 4, ((6, 4), 12): 3, ((2, 4), 4): 2, ((3, 4), 6): 2, ((9, 4), 18): 2, ((7, 2), 14): 2, ((3, 5), 6): 2, ((1, 2), 2): 1, ((9, 8), 18): 1, ((3, 7), 6): 1, ((5, 2), 10): 1, ((1, 7), 2): 1, ((2, 5), 4): 1, ((2, 7), 4): 1, ((9, 9), 18): 1, ((6, 2), 12): 1, ((8, 9), 16): 1, ((4, 5), 8): 1, ((6, 3), 12): 1, ((3, 8), 6): 1, ((9, 6), 18): 1, ((6, 1), 12): 1, ((8, 4), 16): 1, ((4, 6), 8): 1, ((1, 8), 2): 1, ((5, 1), 10): 1, ((1, 4), 2): 1, ((8, 8), 16): 1, ((7, 9), 14): 1, ((6, 0), 12): 1, ((4, 8), 8): 1, ((6, 7), 12): 1, ((0, 8), 0): 1, ((6, 5), 12): 1, ((7, 4), 14): 1, ((4, 7), 8): 1, ((5, 4), 10): 1, ((9, 1), 18): 1, ((8, 0), 16): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.98
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.98
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 37/499 (max_len=3, data=2820)
Train acc: 90.85 (abduce 99.11)
Dep:  Counter({(1, -1, 1): 1623, (-1,): 1000, (2, 2, -1): 158, (-1, 0, 0): 14})
Hit samples:  2795  Ave length:  2.28
Symbols:  15 [(0, 478), (1, 106), (2, 495), (3, 286), (4, 456), (5, 488), (6, 69), (7, 452), (8, 453), (9, 450), (10, 558), (11, 474), (12, 721), (13, 62), (14, 837)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  92,  Counter({((5, 4), 5): 7, ((4, 4), 4): 5, ((9, 4), 9): 5, ((2, 4), 2): 4, ((6, 2), 6): 3, ((7, 4), 7): 3, ((1, 7), 7): 3, ((0, 4), 6): 3, ((3, 4), 3): 3, ((8, 4), 8): 3, ((5, 2), 5): 2, ((1, 9), 9): 2, ((6, 3), 6): 2, ((6, 0), 6): 2, ((5, 5), 5): 2, ((8, 5), 8): 2, ((9, 1), 9): 2, ((3, 5), 3): 2, ((6, 4), 6): 1, ((3, 3), 3): 1, ((4, 5), 4): 1, ((6, 6), 6): 1, ((4, 8), 40): 1, ((9, 7), 9): 1, ((7, 1), 7): 1, ((9, 0), 9): 1, ((6, 7), 6): 1, ((1, 8), 8): 1, ((2, 7), 2): 1, ((7, 0), 7): 1, ((4, 0), 4): 1, ((4, 6), 4): 1, ((0, 9), 11): 1, ((3, 1), 3): 1, ((1, 4), 4): 1, ((8, 3), 8): 1, ((5, 1), 5): 1, ((0, 7), 9): 1, ((9, 2), 9): 1, ((1, 6), 6): 1, ((9, 6), 9): 1, ((1, 3), 3): 1, ((7, 7), 7): 1, ((0, 0), 2): 1, ((1, 2), 2): 1, ((8, 1), 8): 1, ((4, 1), 4): 1, ((9, 9), 9): 1, ((4, 9), 4): 1, ((6, 8), 6): 1, ((3, 0), 3): 1, ((9, 5), 9): 1, ((1, 1), 2): 1, ((4, 7), 12): 1, ((9, 3), 9): 1})
Symbol-06 (int -> int -> int), Samples:  54,  Counter({((6, 4), 11): 6, ((8, 4), 13): 3, ((9, 7), 14): 3, ((0, 4), 5): 2, ((2, 4), 6): 2, ((7, 6), 12): 2, ((2, 1), 6): 2, ((3, 2), 7): 2, ((3, 7), 7): 2, ((4, 4), 8): 2, ((1, 4), 5): 2, ((7, 1), 12): 2, ((0, 8), 5): 2, ((4, 8), 8): 2, ((4, 2), 8): 1, ((5, 5), 10): 1, ((6, 5), 11): 1, ((8, 6), 13): 1, ((1, 3), 5): 1, ((2, 3), 6): 1, ((5, 3), 10): 1, ((1, 6), 5): 1, ((7, 9), 12): 1, ((4, 7), 8): 1, ((0, 6), 5): 1, ((0, 3), 5): 1, ((6, 8), 11): 1, ((9, 4), 14): 1, ((8, 3), 13): 1, ((2, 8), 6): 1, ((0, 9), 5): 1, ((0, 1), 5): 1, ((1, 9), 5): 1, ((3, 3), 7): 1})
Symbol-13 (int -> int -> int), Samples:  54,  Counter({((2, 4), 4): 3, ((6, 4), 12): 3, ((3, 4), 6): 3, ((3, 2), 6): 2, ((6, 0), 12): 2, ((4, 7), 8): 2, ((5, 2), 10): 2, ((3, 5), 6): 2, ((9, 4), 18): 2, ((7, 2), 14): 1, ((9, 5), 18): 1, ((1, 2), 2): 1, ((6, 1), 12): 1, ((6, 2), 12): 1, ((4, 6), 8): 1, ((7, 9), 14): 1, ((1, 7), 2): 1, ((3, 7), 6): 1, ((8, 4), 16): 1, ((4, 5), 8): 1, ((0, 8), 0): 1, ((8, 8), 16): 1, ((9, 8), 18): 1, ((2, 7), 4): 1, ((8, 9), 16): 1, ((6, 7), 12): 1, ((9, 6), 18): 1, ((5, 1), 10): 1, ((5, 4), 10): 1, ((2, 5), 4): 1, ((9, 9), 18): 1, ((7, 7), 14): 1, ((4, 8), 8): 1, ((3, 8), 6): 1, ((3, 1), 6): 1, ((2, 3), 30): 1, ((8, 0), 16): 1, ((6, 5), 12): 1, ((0, 4), 0): 1, ((2, 2), 4): 1, ((4, 2), 25): 1, ((7, 4), 14): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.97
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.98
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.99
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 38/499 (max_len=3, data=2820)
Train acc: 90.89 (abduce 98.76)
Dep:  Counter({(1, -1, 1): 1615, (-1,): 1000, (2, 2, -1): 159, (-1, 0, 0): 11})
Hit samples:  2785  Ave length:  2.28
Symbols:  15 [(0, 478), (1, 103), (2, 492), (3, 291), (4, 452), (5, 493), (6, 49), (7, 448), (8, 452), (9, 448), (10, 542), (11, 474), (12, 725), (13, 61), (14, 847)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  94,  Counter({((5, 4), 5): 7, ((4, 4), 4): 5, ((9, 4), 9): 5, ((2, 4), 2): 5, ((0, 4), 6): 4, ((3, 4), 3): 4, ((1, 7), 7): 4, ((6, 2), 6): 3, ((7, 4), 7): 3, ((1, 9), 9): 2, ((5, 2), 5): 2, ((6, 3), 6): 2, ((8, 4), 8): 2, ((9, 1), 9): 2, ((1, 4), 4): 2, ((1, 8), 8): 2, ((4, 0), 4): 2, ((8, 8), 8): 2, ((3, 5), 3): 2, ((4, 5), 4): 1, ((9, 6), 9): 1, ((3, 3), 3): 1, ((7, 1), 7): 1, ((0, 6), 8): 1, ((6, 4), 6): 1, ((6, 8), 6): 1, ((6, 6), 6): 1, ((4, 6), 4): 1, ((5, 5), 5): 1, ((7, 0), 7): 1, ((9, 7), 9): 1, ((1, 3), 3): 1, ((9, 9), 9): 1, ((0, 7), 9): 1, ((0, 0), 2): 1, ((9, 2), 9): 1, ((9, 0), 9): 1, ((1, 6), 6): 1, ((0, 9), 11): 1, ((2, 7), 2): 1, ((1, 1), 2): 1, ((8, 3), 8): 1, ((7, 8), 7): 1, ((1, 2), 2): 1, ((4, 8), 40): 1, ((2, 2), 2): 1, ((3, 1), 3): 1, ((4, 1), 4): 1, ((8, 5), 8): 1, ((8, 2), 8): 1, ((9, 5), 9): 1, ((3, 8), 3): 1, ((6, 7), 6): 1})
Symbol-06 (int -> int -> int), Samples:  42,  Counter({((6, 4), 11): 6, ((9, 7), 14): 3, ((0, 4), 5): 2, ((8, 4), 13): 2, ((7, 6), 12): 2, ((2, 1), 6): 2, ((1, 4), 5): 2, ((6, 8), 11): 1, ((9, 4), 14): 1, ((8, 6), 13): 1, ((2, 3), 6): 1, ((4, 4), 8): 1, ((3, 2), 7): 1, ((4, 2), 8): 1, ((0, 3), 5): 1, ((6, 5), 11): 1, ((4, 7), 8): 1, ((0, 6), 5): 1, ((8, 5), 13): 1, ((2, 4), 6): 1, ((8, 3), 13): 1, ((1, 6), 5): 1, ((5, 3), 10): 1, ((0, 9), 5): 1, ((7, 1), 12): 1, ((0, 1), 5): 1, ((2, 6), 6): 1, ((0, 8), 5): 1, ((3, 7), 7): 1, ((1, 9), 5): 1})
Symbol-13 (int -> int -> int), Samples:  56,  Counter({((2, 4), 4): 3, ((7, 2), 14): 3, ((3, 2), 6): 2, ((9, 4), 18): 2, ((3, 4), 6): 2, ((9, 1), 18): 2, ((6, 4), 12): 2, ((6, 0), 12): 2, ((2, 2), 4): 2, ((6, 1), 12): 1, ((3, 7), 6): 1, ((4, 6), 8): 1, ((6, 2), 12): 1, ((2, 5), 4): 1, ((8, 4), 16): 1, ((9, 9), 18): 1, ((9, 8), 18): 1, ((1, 2), 2): 1, ((5, 4), 10): 1, ((0, 8), 0): 1, ((4, 8), 8): 1, ((6, 7), 12): 1, ((7, 9), 14): 1, ((3, 8), 6): 1, ((7, 4), 14): 1, ((8, 8), 16): 1, ((5, 2), 10): 1, ((9, 6), 18): 1, ((6, 3), 12): 1, ((2, 7), 4): 1, ((1, 8), 2): 1, ((5, 1), 10): 1, ((4, 7), 8): 1, ((1, 4), 2): 1, ((8, 9), 16): 1, ((6, 5), 12): 1, ((8, 0), 16): 1, ((1, 7), 2): 1, ((8, 1), 17): 1, ((3, 5), 6): 1, ((3, 1), 6): 1, ((7, 7), 14): 1, ((5, 6), 10): 1, ((4, 9), 8): 1, ((1, 3), 30): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.98
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.99
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.99
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 57s
------------------------------
Epoch 39/499 (max_len=3, data=2820)
Train acc: 90.33 (abduce 99.15)
Dep:  Counter({(1, -1, 1): 1620, (-1,): 1000, (2, 2, -1): 161, (-1, 0, 0): 15})
Hit samples:  2796  Ave length:  2.28
Symbols:  15 [(0, 482), (1, 104), (2, 496), (3, 287), (4, 450), (5, 489), (6, 54), (7, 451), (8, 456), (9, 450), (10, 549), (11, 482), (12, 722), (13, 67), (14, 849)]
Learn perception with 2771 samples, take 252 sec.
Learn syntax with 2771 samples, take 2 sec.
result accuracy by digit:
0 ( 0%) 80.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 80.00
4 ( 0%) 90.00
5 ( 0%) 80.00
6 ( 0%) 90.00
7 ( 0%) 100.00
8 ( 0%) 90.00
9 ( 0%) 100.00
val (Perception Acc=9.26, Syntax Acc=43.13, Result Acc=6.06)
Epoch time: 4m 21s
------------------------------
Epoch 40/499 (max_len=3, data=2820)
Train acc: 91.80 (abduce 98.94)
Dep:  Counter({(1, -1, 1): 1634, (-1,): 1000, (2, 2, -1): 140, (-1, 0, 0): 16})
Hit samples:  2790  Ave length:  2.28
Symbols:  15 [(0, 471), (1, 101), (2, 496), (3, 292), (4, 453), (5, 493), (6, 47), (7, 461), (8, 451), (9, 445), (10, 536), (11, 482), (12, 723), (13, 52), (14, 867)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  85,  Counter({((9, 4), 9): 6, ((5, 4), 5): 6, ((0, 4), 6): 4, ((2, 4), 2): 4, ((4, 4), 4): 4, ((1, 4), 4): 3, ((8, 4), 8): 3, ((5, 2), 5): 2, ((1, 7), 7): 2, ((7, 4), 7): 2, ((6, 3), 6): 2, ((6, 2), 6): 2, ((3, 5), 3): 2, ((6, 0), 6): 2, ((3, 4), 3): 1, ((4, 0), 4): 1, ((1, 3), 3): 1, ((7, 8), 7): 1, ((7, 1), 7): 1, ((5, 5), 5): 1, ((6, 8), 6): 1, ((9, 7), 9): 1, ((9, 9), 9): 1, ((0, 7), 9): 1, ((7, 0), 7): 1, ((6, 4), 6): 1, ((6, 6), 6): 1, ((8, 8), 8): 1, ((8, 2), 8): 1, ((0, 0), 2): 1, ((1, 6), 6): 1, ((9, 5), 9): 1, ((4, 8), 40): 1, ((1, 8), 8): 1, ((9, 6), 9): 1, ((8, 5), 8): 1, ((2, 7), 2): 1, ((6, 7), 6): 1, ((0, 9), 11): 1, ((1, 9), 9): 1, ((2, 2), 2): 1, ((4, 5), 4): 1, ((9, 1), 9): 1, ((7, 7), 7): 1, ((5, 1), 5): 1, ((3, 3), 3): 1, ((4, 6), 4): 1, ((9, 2), 9): 1, ((4, 1), 4): 1, ((6, 1), 6): 1, ((1, 0), 2): 1, ((0, 6), 8): 1, ((3, 1), 3): 1, ((3, 8), 3): 1, ((0, 5), 7): 1})
Symbol-06 (int -> int -> int), Samples:  40,  Counter({((2, 4), 6): 3, ((9, 7), 14): 3, ((0, 4), 5): 2, ((6, 4), 11): 2, ((0, 8), 5): 2, ((8, 5), 13): 2, ((1, 4), 5): 2, ((0, 3), 5): 1, ((5, 5), 10): 1, ((4, 2), 8): 1, ((7, 6), 12): 1, ((6, 5), 11): 1, ((0, 9), 5): 1, ((2, 8), 6): 1, ((7, 1), 12): 1, ((8, 6), 13): 1, ((9, 4), 14): 1, ((0, 6), 5): 1, ((0, 1), 5): 1, ((1, 6), 5): 1, ((3, 7), 7): 1, ((2, 1), 6): 1, ((8, 4), 13): 1, ((3, 2), 7): 1, ((6, 8), 11): 1, ((6, 3), 11): 1, ((4, 7), 8): 1, ((5, 3), 10): 1, ((1, 9), 5): 1, ((5, 7), 16): 1, ((7, 2), 12): 1})
Symbol-13 (int -> int -> int), Samples:  45,  Counter({((3, 2), 6): 2, ((3, 4), 6): 2, ((2, 4), 4): 2, ((7, 2), 14): 2, ((6, 4), 12): 2, ((0, 8), 0): 2, ((3, 5), 6): 2, ((6, 5), 12): 1, ((8, 4), 16): 1, ((1, 2), 2): 1, ((4, 6), 8): 1, ((9, 9), 18): 1, ((9, 4), 18): 1, ((1, 7), 2): 1, ((8, 8), 16): 1, ((3, 7), 6): 1, ((4, 7), 8): 1, ((9, 5), 18): 1, ((6, 2), 12): 1, ((2, 5), 4): 1, ((6, 0), 12): 1, ((9, 1), 18): 1, ((4, 5), 8): 1, ((9, 8), 18): 1, ((6, 3), 12): 1, ((7, 9), 14): 1, ((3, 1), 6): 1, ((3, 8), 6): 1, ((2, 3), 30): 1, ((8, 9), 16): 1, ((5, 1), 10): 1, ((5, 4), 10): 1, ((6, 7), 12): 1, ((2, 2), 4): 1, ((9, 6), 18): 1, ((6, 6), 12): 1, ((1, 4), 2): 1, ((4, 4), 8): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.98
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.98
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.98
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 54s
------------------------------
Epoch 41/499 (max_len=3, data=2820)
Train acc: 92.42 (abduce 98.94)
Dep:  Counter({(1, -1, 1): 1644, (-1,): 1000, (2, 2, -1): 134, (-1, 0, 0): 12})
Hit samples:  2790  Ave length:  2.28
Symbols:  15 [(0, 482), (1, 90), (2, 496), (3, 291), (4, 449), (5, 487), (6, 53), (7, 457), (8, 451), (9, 452), (10, 533), (11, 482), (12, 734), (13, 58), (14, 855)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  79,  Counter({((4, 4), 4): 5, ((5, 4), 5): 4, ((0, 4), 6): 4, ((2, 4), 2): 4, ((3, 4), 3): 3, ((6, 2), 6): 3, ((7, 4), 7): 3, ((5, 2), 5): 2, ((6, 3), 6): 2, ((1, 7), 7): 2, ((9, 4), 9): 2, ((9, 9), 9): 2, ((3, 5), 3): 2, ((8, 4), 8): 2, ((1, 3), 3): 2, ((1, 4), 4): 2, ((8, 5), 8): 2, ((4, 0), 4): 1, ((1, 9), 9): 1, ((7, 0), 7): 1, ((0, 7), 9): 1, ((6, 4), 6): 1, ((9, 7), 9): 1, ((6, 7), 6): 1, ((6, 8), 6): 1, ((9, 0), 9): 1, ((0, 6), 8): 1, ((8, 2), 8): 1, ((6, 0), 6): 1, ((9, 2), 9): 1, ((6, 6), 6): 1, ((8, 8), 8): 1, ((3, 1), 3): 1, ((5, 1), 5): 1, ((7, 7), 7): 1, ((9, 1), 9): 1, ((4, 6), 4): 1, ((0, 9), 11): 1, ((3, 3), 3): 1, ((0, 0), 2): 1, ((5, 5), 5): 1, ((4, 5), 4): 1, ((7, 1), 7): 1, ((1, 6), 24): 1, ((9, 5), 9): 1, ((5, 7), 5): 1, ((9, 6), 9): 1, ((2, 7), 2): 1, ((2, 2), 2): 1, ((1, 8), 40): 1})
Symbol-06 (int -> int -> int), Samples:  48,  Counter({((6, 4), 11): 5, ((3, 7), 7): 3, ((9, 7), 14): 3, ((3, 2), 7): 2, ((0, 4), 5): 2, ((8, 5), 13): 2, ((0, 8), 5): 2, ((1, 4), 5): 2, ((2, 4), 6): 2, ((7, 6), 12): 2, ((2, 1), 6): 2, ((9, 4), 14): 2, ((8, 6), 13): 1, ((6, 8), 11): 1, ((6, 5), 11): 1, ((0, 1), 5): 1, ((4, 7), 8): 1, ((0, 3), 5): 1, ((2, 3), 6): 1, ((2, 8), 6): 1, ((0, 6), 5): 1, ((7, 1), 12): 1, ((4, 2), 8): 1, ((0, 9), 5): 1, ((5, 3), 10): 1, ((8, 4), 13): 1, ((7, 9), 12): 1, ((5, 5), 10): 1, ((1, 9), 5): 1, ((6, 3), 11): 1, ((7, 4), 12): 1})
Symbol-13 (int -> int -> int), Samples:  51,  Counter({((7, 2), 14): 3, ((2, 2), 4): 2, ((4, 7), 8): 2, ((2, 4), 4): 2, ((3, 4), 6): 2, ((6, 2), 12): 2, ((6, 4), 12): 2, ((3, 5), 6): 2, ((4, 6), 8): 1, ((9, 9), 18): 1, ((9, 4), 18): 1, ((8, 4), 16): 1, ((9, 8), 18): 1, ((5, 4), 10): 1, ((1, 7), 2): 1, ((6, 0), 12): 1, ((9, 5), 18): 1, ((7, 9), 14): 1, ((1, 2), 2): 1, ((3, 7), 6): 1, ((1, 4), 2): 1, ((9, 6), 18): 1, ((0, 0), 0): 1, ((2, 7), 4): 1, ((9, 1), 18): 1, ((2, 5), 4): 1, ((3, 8), 6): 1, ((6, 1), 12): 1, ((8, 0), 16): 1, ((2, 3), 30): 1, ((6, 3), 12): 1, ((7, 1), 14): 1, ((6, 5), 12): 1, ((5, 2), 10): 1, ((4, 5), 8): 1, ((3, 1), 6): 1, ((3, 2), 6): 1, ((5, 1), 10): 1, ((7, 7), 14): 1, ((4, 8), 8): 1, ((8, 8), 16): 1, ((8, 9), 16): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.97
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.97
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 42/499 (max_len=3, data=2820)
Train acc: 92.02 (abduce 99.15)
Dep:  Counter({(1, -1, 1): 1639, (-1,): 1000, (2, 2, -1): 144, (-1, 0, 0): 13})
Hit samples:  2796  Ave length:  2.28
Symbols:  15 [(0, 476), (1, 97), (2, 497), (3, 283), (4, 451), (5, 494), (6, 55), (7, 461), (8, 458), (9, 447), (10, 546), (11, 479), (12, 739), (13, 62), (14, 843)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  87,  Counter({((4, 4), 4): 6, ((5, 4), 5): 6, ((9, 4), 9): 6, ((0, 4), 6): 3, ((1, 7), 7): 3, ((1, 4), 4): 3, ((3, 4), 3): 3, ((7, 4), 7): 2, ((6, 2), 6): 2, ((2, 4), 2): 2, ((5, 2), 5): 2, ((6, 3), 6): 2, ((8, 4), 8): 2, ((9, 9), 9): 2, ((4, 1), 4): 2, ((3, 5), 3): 2, ((6, 4), 6): 2, ((1, 9), 9): 1, ((0, 0), 2): 1, ((6, 6), 6): 1, ((7, 0), 7): 1, ((5, 5), 5): 1, ((0, 9), 11): 1, ((1, 6), 6): 1, ((9, 6), 9): 1, ((4, 6), 4): 1, ((4, 5), 4): 1, ((6, 0), 6): 1, ((4, 8), 40): 1, ((7, 1), 7): 1, ((9, 2), 9): 1, ((2, 7), 2): 1, ((8, 8), 8): 1, ((1, 3), 3): 1, ((3, 3), 3): 1, ((2, 2), 2): 1, ((0, 7), 9): 1, ((0, 6), 8): 1, ((9, 1), 9): 1, ((9, 7), 9): 1, ((7, 8), 7): 1, ((7, 7), 7): 1, ((5, 1), 5): 1, ((8, 5), 8): 1, ((3, 1), 3): 1, ((7, 3), 7): 1, ((9, 0), 9): 1, ((9, 5), 9): 1, ((7, 5), 7): 1, ((8, 7), 8): 1, ((3, 8), 3): 1, ((8, 2), 8): 1, ((8, 3), 8): 1, ((6, 8), 6): 1})
Symbol-06 (int -> int -> int), Samples:  48,  Counter({((3, 7), 7): 3, ((9, 7), 14): 3, ((6, 4), 11): 3, ((3, 2), 7): 2, ((0, 4), 5): 2, ((0, 8), 5): 2, ((8, 5), 13): 2, ((2, 4), 6): 2, ((1, 4), 5): 2, ((7, 6), 12): 2, ((2, 1), 6): 2, ((9, 4), 14): 1, ((2, 3), 6): 1, ((6, 8), 11): 1, ((0, 3), 5): 1, ((0, 9), 5): 1, ((8, 6), 13): 1, ((4, 7), 8): 1, ((5, 5), 10): 1, ((8, 4), 13): 1, ((0, 6), 5): 1, ((0, 1), 5): 1, ((7, 9), 12): 1, ((2, 8), 6): 1, ((1, 6), 5): 1, ((7, 1), 12): 1, ((6, 5), 11): 1, ((5, 3), 10): 1, ((4, 2), 8): 1, ((1, 9), 5): 1, ((7, 4), 12): 1, ((6, 3), 11): 1, ((5, 4), 8): 1, ((5, 7), 16): 1})
Symbol-13 (int -> int -> int), Samples:  54,  Counter({((2, 4), 4): 3, ((6, 4), 12): 3, ((7, 2), 14): 3, ((6, 2), 12): 2, ((3, 4), 6): 2, ((3, 2), 6): 2, ((2, 2), 4): 2, ((4, 7), 8): 2, ((3, 5), 6): 2, ((7, 7), 14): 1, ((9, 9), 18): 1, ((4, 6), 8): 1, ((1, 2), 2): 1, ((8, 4), 16): 1, ((2, 7), 4): 1, ((3, 7), 6): 1, ((9, 5), 18): 1, ((9, 4), 18): 1, ((0, 8), 0): 1, ((5, 2), 10): 1, ((8, 8), 16): 1, ((1, 7), 2): 1, ((9, 1), 18): 1, ((1, 8), 2): 1, ((6, 1), 12): 1, ((2, 5), 4): 1, ((9, 8), 18): 1, ((3, 8), 6): 1, ((7, 9), 14): 1, ((6, 0), 12): 1, ((6, 5), 12): 1, ((4, 5), 8): 1, ((6, 3), 12): 1, ((4, 8), 8): 1, ((8, 0), 16): 1, ((3, 1), 6): 1, ((6, 6), 12): 1, ((5, 1), 10): 1, ((5, 4), 10): 1, ((8, 9), 16): 1, ((9, 6), 18): 1, ((0, 0), 0): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.99
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.98
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.98
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 55s
------------------------------
Epoch 43/499 (max_len=3, data=2820)
Train acc: 91.76 (abduce 99.01)
Dep:  Counter({(1, -1, 1): 1645, (-1,): 1000, (2, 2, -1): 130, (-1, 0, 0): 17})
Hit samples:  2792  Ave length:  2.28
Symbols:  15 [(0, 481), (1, 97), (2, 494), (3, 287), (4, 454), (5, 486), (6, 53), (7, 455), (8, 457), (9, 441), (10, 544), (11, 485), (12, 732), (13, 59), (14, 851)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  84,  Counter({((5, 4), 5): 6, ((9, 4), 9): 6, ((4, 4), 4): 5, ((2, 4), 2): 4, ((0, 4), 6): 3, ((5, 2), 5): 2, ((7, 4), 7): 2, ((8, 4), 8): 2, ((9, 9), 9): 2, ((6, 3), 6): 2, ((1, 4), 4): 2, ((1, 7), 7): 2, ((3, 4), 3): 2, ((8, 5), 8): 2, ((1, 6), 6): 1, ((4, 8), 40): 1, ((1, 9), 9): 1, ((6, 0), 6): 1, ((6, 6), 6): 1, ((7, 1), 7): 1, ((3, 3), 3): 1, ((6, 2), 6): 1, ((1, 8), 8): 1, ((9, 7), 9): 1, ((5, 1), 5): 1, ((8, 2), 8): 1, ((1, 3), 3): 1, ((0, 9), 11): 1, ((9, 0), 9): 1, ((6, 8), 6): 1, ((7, 0), 7): 1, ((4, 5), 4): 1, ((9, 6), 9): 1, ((7, 7), 7): 1, ((6, 4), 6): 1, ((2, 7), 2): 1, ((0, 6), 8): 1, ((8, 8), 8): 1, ((9, 2), 9): 1, ((4, 0), 4): 1, ((6, 7), 6): 1, ((4, 6), 4): 1, ((8, 3), 8): 1, ((3, 1), 3): 1, ((0, 7), 9): 1, ((7, 8), 7): 1, ((0, 0), 2): 1, ((7, 3), 7): 1, ((3, 8), 3): 1, ((3, 5), 3): 1, ((9, 5), 9): 1, ((9, 1), 9): 1, ((4, 9), 4): 1, ((1, 1), 2): 1, ((3, 9), 3): 1, ((1, 0), 2): 1})
Symbol-06 (int -> int -> int), Samples:  46,  Counter({((6, 4), 11): 4, ((3, 7), 7): 3, ((9, 7), 14): 3, ((3, 2), 7): 2, ((1, 4), 5): 2, ((7, 6), 12): 2, ((2, 4), 6): 2, ((8, 5), 13): 2, ((2, 1), 6): 2, ((7, 1), 12): 1, ((0, 1), 5): 1, ((6, 5), 11): 1, ((5, 3), 10): 1, ((1, 6), 5): 1, ((8, 4), 13): 1, ((0, 3), 5): 1, ((2, 8), 6): 1, ((9, 4), 14): 1, ((2, 3), 6): 1, ((4, 2), 8): 1, ((6, 8), 11): 1, ((4, 7), 8): 1, ((0, 4), 5): 1, ((0, 6), 5): 1, ((5, 5), 10): 1, ((6, 3), 11): 1, ((8, 6), 13): 1, ((0, 8), 5): 1, ((0, 9), 5): 1, ((1, 9), 5): 1, ((7, 4), 12): 1, ((0, 5), 5): 1, ((7, 9), 12): 1})
Symbol-13 (int -> int -> int), Samples:  53,  Counter({((2, 2), 4): 4, ((6, 4), 12): 4, ((2, 4), 4): 3, ((3, 4), 6): 3, ((7, 2), 14): 2, ((3, 5), 6): 2, ((4, 7), 8): 2, ((9, 8), 18): 2, ((8, 8), 16): 1, ((1, 7), 2): 1, ((7, 9), 14): 1, ((2, 7), 4): 1, ((9, 1), 18): 1, ((1, 2), 2): 1, ((3, 7), 6): 1, ((6, 3), 12): 1, ((6, 2), 12): 1, ((9, 5), 18): 1, ((5, 2), 10): 1, ((4, 6), 8): 1, ((3, 8), 6): 1, ((4, 5), 8): 1, ((6, 7), 12): 1, ((9, 6), 18): 1, ((2, 5), 4): 1, ((3, 1), 6): 1, ((7, 1), 14): 1, ((8, 4), 16): 1, ((9, 9), 18): 1, ((6, 1), 12): 1, ((6, 0), 12): 1, ((0, 8), 0): 1, ((5, 1), 10): 1, ((6, 5), 12): 1, ((1, 8), 2): 1, ((8, 0), 16): 1, ((8, 9), 16): 1, ((4, 8), 8): 1, ((7, 4), 14): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.98
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.99
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 44/499 (max_len=3, data=2820)
Train acc: 92.22 (abduce 98.94)
Dep:  Counter({(1, -1, 1): 1641, (-1,): 1000, (2, 2, -1): 137, (-1, 0, 0): 12})
Hit samples:  2790  Ave length:  2.28
Symbols:  15 [(0, 481), (1, 91), (2, 495), (3, 284), (4, 452), (5, 492), (6, 54), (7, 460), (8, 451), (9, 440), (10, 544), (11, 481), (12, 739), (13, 56), (14, 850)]
Learn perception with 2769 samples, take 255 sec.
Learn syntax with 2769 samples, take 2 sec.
result accuracy by digit:
0 ( 0%) 80.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 80.00
4 ( 0%) 100.00
5 ( 0%) 80.00
6 ( 0%) 90.00
7 ( 0%) 100.00
8 ( 0%) 90.00
9 ( 0%) 100.00
val (Perception Acc=9.31, Syntax Acc=43.15, Result Acc=6.03)
Epoch time: 4m 23s
------------------------------
Epoch 45/499 (max_len=3, data=2820)
Train acc: 94.40 (abduce 99.33)
Dep:  Counter({(1, -1, 1): 1664, (-1,): 1000, (2, 2, -1): 126, (-1, 0, 0): 11})
Hit samples:  2801  Ave length:  2.29
Symbols:  15 [(0, 485), (1, 86), (2, 496), (3, 285), (4, 460), (5, 487), (6, 51), (7, 459), (8, 456), (9, 448), (10, 538), (11, 488), (12, 750), (13, 52), (14, 862)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  77,  Counter({((5, 4), 5): 6, ((9, 4), 9): 6, ((2, 4), 2): 3, ((4, 4), 4): 3, ((1, 7), 7): 2, ((5, 2), 5): 2, ((8, 4), 8): 2, ((9, 9), 9): 2, ((0, 4), 6): 2, ((9, 1), 9): 2, ((7, 4), 7): 2, ((3, 4), 3): 2, ((3, 5), 3): 2, ((1, 3), 3): 2, ((1, 4), 4): 2, ((4, 1), 4): 1, ((6, 0), 6): 1, ((1, 6), 6): 1, ((8, 2), 8): 1, ((9, 2), 9): 1, ((3, 3), 3): 1, ((0, 6), 8): 1, ((9, 0), 9): 1, ((7, 1), 7): 1, ((0, 0), 2): 1, ((1, 8), 8): 1, ((6, 3), 6): 1, ((6, 8), 6): 1, ((6, 4), 6): 1, ((4, 8), 40): 1, ((5, 1), 5): 1, ((9, 6), 9): 1, ((6, 2), 6): 1, ((9, 7), 9): 1, ((0, 7), 9): 1, ((2, 7), 2): 1, ((7, 0), 7): 1, ((6, 6), 6): 1, ((7, 8), 7): 1, ((9, 5), 9): 1, ((1, 9), 9): 1, ((3, 2), 3): 1, ((4, 5), 4): 1, ((8, 8), 8): 1, ((6, 7), 6): 1, ((7, 7), 7): 1, ((8, 5), 8): 1, ((7, 2), 7): 1, ((0, 9), 11): 1, ((1, 2), 2): 1, ((8, 7), 8): 1, ((8, 3), 8): 1})
Symbol-06 (int -> int -> int), Samples:  43,  Counter({((6, 4), 11): 3, ((2, 4), 6): 3, ((3, 2), 7): 2, ((0, 8), 5): 2, ((0, 4), 5): 2, ((7, 6), 12): 2, ((1, 4), 5): 2, ((2, 1), 6): 2, ((3, 7), 7): 2, ((9, 7), 14): 2, ((8, 5), 13): 1, ((0, 3), 5): 1, ((4, 2), 8): 1, ((2, 8), 6): 1, ((4, 7), 8): 1, ((0, 1), 5): 1, ((2, 3), 6): 1, ((6, 5), 11): 1, ((0, 6), 5): 1, ((8, 6), 13): 1, ((5, 3), 10): 1, ((9, 4), 14): 1, ((6, 3), 11): 1, ((3, 4), 7): 1, ((1, 5), 5): 1, ((6, 8), 11): 1, ((7, 9), 12): 1, ((0, 9), 5): 1, ((7, 4), 12): 1, ((8, 4), 13): 1, ((1, 9), 5): 1})
Symbol-13 (int -> int -> int), Samples:  49,  Counter({((2, 2), 4): 3, ((1, 4), 2): 2, ((6, 2), 12): 2, ((3, 4), 6): 2, ((6, 4), 12): 2, ((2, 4), 4): 2, ((3, 5), 6): 2, ((4, 7), 8): 2, ((9, 4), 18): 2, ((5, 4), 10): 1, ((7, 2), 14): 1, ((6, 1), 12): 1, ((9, 8), 18): 1, ((7, 9), 14): 1, ((8, 8), 16): 1, ((6, 3), 12): 1, ((2, 7), 4): 1, ((3, 7), 6): 1, ((0, 8), 0): 1, ((9, 1), 18): 1, ((4, 5), 8): 1, ((9, 9), 18): 1, ((1, 8), 2): 1, ((7, 1), 14): 1, ((3, 2), 6): 1, ((8, 4), 16): 1, ((9, 5), 18): 1, ((1, 7), 2): 1, ((2, 5), 4): 1, ((4, 6), 8): 1, ((4, 8), 8): 1, ((9, 6), 18): 1, ((6, 5), 12): 1, ((5, 2), 10): 1, ((6, 0), 12): 1, ((3, 1), 6): 1, ((3, 8), 6): 1, ((5, 1), 10): 1, ((8, 9), 16): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.98
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 46/499 (max_len=3, data=2820)
Train acc: 93.33 (abduce 99.15)
Dep:  Counter({(1, -1, 1): 1663, (-1,): 1000, (2, 2, -1): 120, (-1, 0, 0): 13})
Hit samples:  2796  Ave length:  2.28
Symbols:  15 [(0, 482), (1, 91), (2, 496), (3, 283), (4, 455), (5, 489), (6, 48), (7, 458), (8, 453), (9, 447), (10, 544), (11, 485), (12, 745), (13, 57), (14, 855)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  82,  Counter({((9, 4), 9): 6, ((5, 4), 5): 5, ((0, 4), 6): 4, ((1, 4), 4): 4, ((4, 4), 4): 3, ((2, 4), 2): 3, ((3, 4), 3): 2, ((6, 3), 6): 2, ((6, 2), 6): 2, ((7, 4), 7): 2, ((8, 4), 8): 2, ((9, 9), 9): 2, ((5, 2), 5): 2, ((3, 3), 3): 2, ((1, 7), 7): 2, ((3, 5), 3): 2, ((9, 7), 9): 2, ((5, 1), 5): 2, ((8, 5), 8): 2, ((8, 2), 8): 1, ((1, 6), 6): 1, ((6, 0), 6): 1, ((6, 8), 6): 1, ((7, 1), 7): 1, ((7, 0), 7): 1, ((9, 0), 9): 1, ((4, 5), 4): 1, ((9, 6), 9): 1, ((1, 9), 9): 1, ((1, 8), 8): 1, ((6, 6), 6): 1, ((8, 8), 8): 1, ((4, 6), 4): 1, ((0, 0), 2): 1, ((4, 1), 4): 1, ((2, 7), 2): 1, ((6, 7), 6): 1, ((9, 5), 9): 1, ((4, 8), 40): 1, ((9, 1), 9): 1, ((3, 1), 3): 1, ((9, 2), 9): 1, ((0, 7), 9): 1, ((6, 4), 6): 1, ((6, 1), 6): 1, ((0, 9), 11): 1, ((3, 2), 3): 1, ((0, 6), 8): 1, ((7, 7), 7): 1, ((8, 7), 8): 1})
Symbol-06 (int -> int -> int), Samples:  45,  Counter({((6, 4), 11): 4, ((2, 4), 6): 3, ((0, 4), 5): 2, ((3, 2), 7): 2, ((0, 8), 5): 2, ((8, 5), 13): 2, ((2, 1), 6): 2, ((9, 7), 14): 2, ((1, 4), 5): 2, ((7, 6), 12): 2, ((3, 7), 7): 2, ((1, 9), 5): 2, ((8, 4), 13): 1, ((2, 3), 6): 1, ((0, 1), 5): 1, ((8, 6), 13): 1, ((6, 3), 11): 1, ((4, 2), 8): 1, ((5, 5), 10): 1, ((9, 4), 14): 1, ((0, 9), 5): 1, ((6, 5), 11): 1, ((0, 6), 5): 1, ((2, 8), 6): 1, ((6, 8), 11): 1, ((5, 3), 10): 1, ((7, 9), 12): 1, ((9, 5), 14): 1, ((7, 4), 12): 1, ((4, 7), 8): 1})
Symbol-13 (int -> int -> int), Samples:  49,  Counter({((2, 2), 4): 3, ((6, 2), 12): 2, ((7, 2), 14): 2, ((4, 7), 8): 2, ((1, 4), 2): 2, ((2, 4), 4): 2, ((3, 4), 6): 2, ((3, 5), 6): 2, ((6, 4), 12): 2, ((9, 4), 18): 2, ((6, 5), 12): 2, ((8, 8), 16): 1, ((1, 7), 2): 1, ((9, 1), 18): 1, ((5, 2), 10): 1, ((2, 7), 4): 1, ((8, 4), 16): 1, ((7, 9), 14): 1, ((9, 9), 18): 1, ((5, 4), 10): 1, ((1, 8), 2): 1, ((9, 8), 18): 1, ((4, 6), 8): 1, ((6, 1), 12): 1, ((6, 3), 12): 1, ((2, 5), 4): 1, ((8, 9), 16): 1, ((7, 1), 14): 1, ((4, 5), 8): 1, ((3, 7), 6): 1, ((3, 2), 6): 1, ((3, 1), 6): 1, ((7, 4), 14): 1, ((3, 8), 6): 1, ((5, 1), 10): 1, ((2, 3), 30): 1, ((6, 7), 12): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.98
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.99
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 57s
------------------------------
Epoch 47/499 (max_len=3, data=2820)
Train acc: 93.82 (abduce 99.36)
Dep:  Counter({(1, -1, 1): 1660, (-1,): 1000, (2, 2, -1): 126, (-1, 0, 0): 16})
Hit samples:  2802  Ave length:  2.29
Symbols:  15 [(0, 478), (1, 89), (2, 496), (3, 291), (4, 456), (5, 489), (6, 46), (7, 460), (8, 455), (9, 450), (10, 547), (11, 482), (12, 747), (13, 60), (14, 860)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  80,  Counter({((9, 4), 9): 5, ((0, 4), 6): 4, ((4, 4), 4): 4, ((1, 4), 4): 4, ((5, 4), 5): 3, ((8, 4), 8): 2, ((6, 3), 6): 2, ((5, 2), 5): 2, ((1, 7), 7): 2, ((2, 4), 2): 2, ((7, 4), 7): 2, ((9, 9), 9): 2, ((6, 2), 6): 2, ((3, 3), 3): 2, ((3, 4), 3): 2, ((6, 1), 6): 2, ((9, 5), 9): 2, ((8, 5), 8): 2, ((6, 0), 6): 1, ((7, 0), 7): 1, ((9, 6), 9): 1, ((1, 9), 9): 1, ((0, 6), 8): 1, ((6, 4), 6): 1, ((1, 6), 6): 1, ((4, 5), 4): 1, ((0, 0), 2): 1, ((1, 8), 8): 1, ((7, 8), 7): 1, ((8, 8), 8): 1, ((5, 1), 5): 1, ((3, 5), 3): 1, ((2, 2), 2): 1, ((5, 5), 5): 1, ((7, 7), 7): 1, ((9, 7), 9): 1, ((6, 8), 6): 1, ((7, 1), 7): 1, ((0, 7), 9): 1, ((3, 2), 3): 1, ((0, 9), 11): 1, ((2, 7), 2): 1, ((4, 8), 40): 1, ((8, 3), 8): 1, ((9, 1), 9): 1, ((4, 1), 4): 1, ((1, 3), 3): 1, ((6, 7), 6): 1, ((7, 2), 7): 1, ((4, 6), 4): 1, ((9, 2), 9): 1, ((3, 1), 3): 1})
Symbol-06 (int -> int -> int), Samples:  42,  Counter({((6, 4), 11): 4, ((0, 8), 5): 2, ((0, 4), 5): 2, ((8, 5), 13): 2, ((7, 6), 12): 2, ((2, 4), 6): 2, ((1, 4), 5): 2, ((3, 7), 7): 2, ((8, 6), 13): 1, ((6, 5), 11): 1, ((0, 9), 5): 1, ((6, 8), 11): 1, ((9, 4), 14): 1, ((2, 3), 6): 1, ((7, 9), 12): 1, ((8, 4), 13): 1, ((4, 2), 8): 1, ((0, 6), 5): 1, ((3, 2), 7): 1, ((3, 4), 7): 1, ((5, 3), 10): 1, ((0, 3), 5): 1, ((1, 5), 5): 1, ((4, 7), 8): 1, ((6, 3), 11): 1, ((2, 8), 6): 1, ((5, 5), 10): 1, ((0, 1), 5): 1, ((1, 9), 5): 1, ((9, 7), 14): 1, ((7, 4), 12): 1, ((2, 1), 6): 1})
Symbol-13 (int -> int -> int), Samples:  50,  Counter({((7, 2), 14): 2, ((6, 2), 12): 2, ((4, 7), 8): 2, ((3, 4), 6): 2, ((2, 4), 4): 2, ((3, 2), 6): 2, ((9, 4), 18): 2, ((6, 4), 12): 2, ((1, 4), 2): 2, ((3, 5), 6): 2, ((4, 6), 8): 1, ((2, 7), 4): 1, ((8, 8), 16): 1, ((8, 4), 16): 1, ((9, 8), 18): 1, ((6, 1), 12): 1, ((3, 7), 6): 1, ((1, 7), 2): 1, ((9, 1), 18): 1, ((5, 2), 10): 1, ((6, 0), 12): 1, ((2, 5), 4): 1, ((1, 8), 2): 1, ((6, 3), 12): 1, ((5, 4), 10): 1, ((0, 8), 0): 1, ((7, 1), 14): 1, ((9, 9), 18): 1, ((7, 9), 14): 1, ((6, 5), 12): 1, ((2, 2), 4): 1, ((5, 1), 10): 1, ((6, 7), 12): 1, ((8, 9), 16): 1, ((0, 0), 0): 1, ((3, 8), 6): 1, ((7, 4), 14): 1, ((3, 1), 6): 1, ((4, 5), 8): 1, ((2, 3), 7): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.99
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.98
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 48/499 (max_len=3, data=2820)
Train acc: 93.72 (abduce 99.36)
Dep:  Counter({(1, -1, 1): 1667, (-1,): 1000, (2, 2, -1): 122, (-1, 0, 0): 13})
Hit samples:  2802  Ave length:  2.29
Symbols:  15 [(0, 483), (1, 82), (2, 496), (3, 291), (4, 454), (5, 487), (6, 50), (7, 463), (8, 456), (9, 447), (10, 542), (11, 485), (12, 749), (13, 62), (14, 859)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  73,  Counter({((9, 4), 9): 5, ((5, 4), 5): 5, ((1, 4), 4): 4, ((4, 4), 4): 3, ((2, 4), 2): 2, ((1, 7), 7): 2, ((8, 4), 8): 2, ((0, 4), 6): 2, ((6, 3), 6): 2, ((5, 2), 5): 2, ((7, 4), 7): 2, ((6, 4), 6): 2, ((9, 1), 9): 2, ((6, 2), 6): 2, ((4, 1), 4): 1, ((9, 6), 9): 1, ((7, 0), 7): 1, ((3, 3), 3): 1, ((6, 0), 6): 1, ((5, 5), 5): 1, ((9, 7), 9): 1, ((4, 6), 4): 1, ((7, 1), 7): 1, ((1, 6), 6): 1, ((1, 8), 8): 1, ((0, 7), 9): 1, ((4, 8), 40): 1, ((3, 4), 3): 1, ((9, 9), 9): 1, ((2, 7), 2): 1, ((6, 8), 6): 1, ((4, 5), 4): 1, ((0, 9), 11): 1, ((0, 6), 8): 1, ((1, 9), 9): 1, ((5, 1), 5): 1, ((8, 2), 8): 1, ((0, 0), 2): 1, ((9, 2), 9): 1, ((3, 2), 3): 1, ((9, 5), 9): 1, ((7, 8), 7): 1, ((7, 2), 7): 1, ((3, 1), 3): 1, ((1, 3), 3): 1, ((6, 1), 6): 1, ((9, 0), 9): 1, ((6, 6), 6): 1, ((3, 5), 3): 1, ((8, 9), 8): 1})
Symbol-06 (int -> int -> int), Samples:  45,  Counter({((6, 4), 11): 4, ((0, 8), 5): 2, ((3, 2), 7): 2, ((2, 4), 6): 2, ((8, 5), 13): 2, ((0, 4), 5): 2, ((7, 6), 12): 2, ((1, 4), 5): 2, ((2, 1), 6): 2, ((9, 7), 14): 2, ((3, 7), 7): 2, ((0, 3), 5): 1, ((5, 5), 10): 1, ((0, 9), 5): 1, ((0, 1), 5): 1, ((3, 4), 7): 1, ((8, 6), 13): 1, ((0, 6), 5): 1, ((6, 5), 11): 1, ((8, 4), 13): 1, ((9, 4), 14): 1, ((4, 7), 8): 1, ((2, 8), 6): 1, ((5, 3), 10): 1, ((4, 2), 8): 1, ((2, 3), 6): 1, ((6, 8), 11): 1, ((7, 9), 12): 1, ((1, 9), 5): 1, ((1, 5), 5): 1, ((6, 3), 11): 1, ((7, 4), 12): 1})
Symbol-13 (int -> int -> int), Samples:  51,  Counter({((7, 2), 14): 3, ((6, 4), 12): 3, ((6, 2), 12): 2, ((4, 7), 8): 2, ((2, 4), 4): 2, ((3, 4), 6): 2, ((3, 2), 6): 2, ((3, 5), 6): 2, ((9, 4), 18): 2, ((2, 5), 4): 1, ((1, 7), 2): 1, ((9, 8), 18): 1, ((8, 8), 16): 1, ((1, 4), 2): 1, ((2, 7), 4): 1, ((8, 4), 16): 1, ((3, 7), 6): 1, ((5, 2), 10): 1, ((9, 1), 18): 1, ((6, 1), 12): 1, ((1, 8), 2): 1, ((6, 3), 12): 1, ((4, 5), 8): 1, ((6, 0), 12): 1, ((5, 4), 10): 1, ((0, 8), 0): 1, ((2, 2), 4): 1, ((7, 1), 14): 1, ((9, 9), 18): 1, ((9, 5), 18): 1, ((6, 7), 12): 1, ((3, 1), 6): 1, ((2, 3), 30): 1, ((4, 6), 8): 1, ((0, 0), 0): 1, ((5, 1), 10): 1, ((6, 5), 12): 1, ((9, 6), 18): 1, ((3, 8), 6): 1, ((8, 9), 16): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.97
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.98
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 49/499 (max_len=3, data=2820)
Train acc: 93.29 (abduce 99.22)
Dep:  Counter({(1, -1, 1): 1667, (-1,): 1000, (2, 2, -1): 121, (-1, 0, 0): 10})
Hit samples:  2798  Ave length:  2.29
Symbols:  15 [(0, 482), (1, 89), (2, 495), (3, 290), (4, 453), (5, 493), (6, 49), (7, 459), (8, 456), (9, 452), (10, 533), (11, 483), (12, 748), (13, 50), (14, 862)]
Learn perception with 2788 samples, take 257 sec.
Learn syntax with 2788 samples, take 2 sec.
result accuracy by digit:
0 ( 0%) 80.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 80.00
4 ( 0%) 100.00
5 ( 0%) 80.00
6 ( 0%) 90.00
7 ( 0%) 100.00
8 ( 0%) 90.00
9 ( 0%) 100.00
val (Perception Acc=9.73, Syntax Acc=43.20, Result Acc=6.06)
Epoch time: 4m 25s
------------------------------
Epoch 50/499 (max_len=3, data=2820)
Train acc: 94.11 (abduce 99.57)
Dep:  Counter({(1, -1, 1): 1688, (-1,): 1000, (2, 2, -1): 110, (-1, 0, 0): 10})
Hit samples:  2808  Ave length:  2.29
Symbols:  15 [(0, 488), (1, 79), (2, 490), (3, 293), (4, 462), (5, 491), (6, 47), (7, 463), (8, 457), (9, 454), (10, 538), (11, 480), (12, 763), (13, 54), (14, 865)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  69,  Counter({((9, 4), 9): 4, ((4, 4), 4): 4, ((2, 4), 2): 3, ((0, 4), 6): 3, ((5, 4), 5): 3, ((7, 4), 7): 2, ((6, 3), 6): 2, ((5, 2), 5): 2, ((6, 0), 6): 2, ((1, 4), 4): 2, ((2, 7), 2): 2, ((6, 2), 6): 1, ((9, 6), 9): 1, ((7, 0), 7): 1, ((6, 4), 6): 1, ((0, 0), 2): 1, ((1, 8), 8): 1, ((0, 7), 9): 1, ((8, 2), 8): 1, ((7, 1), 7): 1, ((0, 6), 8): 1, ((8, 8), 8): 1, ((1, 3), 3): 1, ((9, 7), 9): 1, ((9, 2), 9): 1, ((5, 1), 5): 1, ((1, 9), 9): 1, ((6, 6), 6): 1, ((7, 7), 7): 1, ((6, 8), 6): 1, ((3, 3), 3): 1, ((7, 8), 7): 1, ((9, 1), 9): 1, ((5, 5), 5): 1, ((3, 1), 3): 1, ((2, 2), 2): 1, ((8, 4), 8): 1, ((1, 6), 6): 1, ((0, 9), 11): 1, ((9, 0), 9): 1, ((4, 1), 4): 1, ((3, 2), 3): 1, ((4, 5), 4): 1, ((6, 1), 6): 1, ((5, 0), 5): 1, ((9, 9), 9): 1, ((3, 5), 3): 1, ((3, 4), 3): 1, ((8, 5), 8): 1, ((4, 6), 4): 1, ((4, 8), 40): 1})
Symbol-06 (int -> int -> int), Samples:  43,  Counter({((6, 4), 11): 4, ((0, 4), 5): 3, ((0, 8), 5): 2, ((3, 2), 7): 2, ((7, 6), 12): 2, ((8, 5), 13): 2, ((9, 7), 14): 2, ((2, 1), 6): 2, ((3, 7), 7): 2, ((6, 8), 11): 1, ((2, 8), 6): 1, ((1, 4), 5): 1, ((0, 3), 5): 1, ((0, 1), 5): 1, ((5, 5), 10): 1, ((6, 5), 11): 1, ((8, 6), 13): 1, ((3, 4), 7): 1, ((4, 2), 8): 1, ((8, 4), 13): 1, ((6, 3), 11): 1, ((1, 5), 5): 1, ((5, 3), 10): 1, ((9, 4), 14): 1, ((7, 9), 12): 1, ((7, 1), 12): 1, ((1, 9), 5): 1, ((7, 4), 12): 1, ((4, 7), 8): 1, ((0, 0), 5): 1, ((2, 3), 6): 1})
Symbol-13 (int -> int -> int), Samples:  48,  Counter({((6, 2), 12): 2, ((1, 4), 2): 2, ((3, 4), 6): 2, ((7, 2), 14): 2, ((6, 4), 12): 2, ((2, 2), 4): 2, ((4, 7), 8): 2, ((5, 4), 10): 2, ((2, 4), 4): 2, ((3, 5), 6): 2, ((9, 9), 18): 1, ((6, 1), 12): 1, ((6, 6), 12): 1, ((1, 7), 2): 1, ((8, 4), 16): 1, ((7, 9), 14): 1, ((3, 7), 6): 1, ((9, 8), 18): 1, ((1, 8), 2): 1, ((8, 8), 16): 1, ((2, 7), 4): 1, ((4, 5), 8): 1, ((9, 5), 18): 1, ((4, 6), 8): 1, ((6, 0), 12): 1, ((2, 3), 30): 1, ((9, 1), 18): 1, ((6, 7), 12): 1, ((3, 8), 6): 1, ((9, 4), 18): 1, ((3, 2), 6): 1, ((6, 3), 12): 1, ((6, 5), 12): 1, ((7, 1), 14): 1, ((9, 6), 18): 1, ((5, 1), 10): 1, ((1, 2), 2): 1, ((0, 8), 0): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.98
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.99
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 57s
------------------------------
Epoch 51/499 (max_len=3, data=2820)
Train acc: 94.82 (abduce 99.36)
Dep:  Counter({(1, -1, 1): 1675, (-1,): 1000, (2, 2, -1): 118, (-1, 0, 0): 9})
Hit samples:  2802  Ave length:  2.29
Symbols:  15 [(0, 487), (1, 84), (2, 492), (3, 289), (4, 455), (5, 492), (6, 50), (7, 464), (8, 459), (9, 449), (10, 535), (11, 482), (12, 747), (13, 52), (14, 869)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  76,  Counter({((9, 4), 9): 5, ((4, 4), 4): 3, ((5, 2), 5): 3, ((2, 4), 2): 3, ((0, 4), 6): 3, ((5, 4), 5): 3, ((6, 0), 6): 2, ((3, 4), 3): 2, ((7, 4), 7): 2, ((8, 4), 8): 2, ((9, 9), 9): 2, ((3, 5), 3): 2, ((4, 1), 4): 2, ((6, 8), 6): 1, ((9, 1), 9): 1, ((9, 0), 9): 1, ((0, 9), 11): 1, ((7, 0), 7): 1, ((1, 6), 6): 1, ((6, 3), 6): 1, ((0, 7), 9): 1, ((6, 4), 6): 1, ((1, 3), 3): 1, ((7, 1), 7): 1, ((8, 8), 8): 1, ((8, 2), 8): 1, ((9, 6), 9): 1, ((4, 6), 4): 1, ((3, 1), 3): 1, ((9, 2), 9): 1, ((1, 4), 4): 1, ((6, 6), 6): 1, ((4, 8), 40): 1, ((5, 5), 5): 1, ((1, 9), 9): 1, ((4, 5), 4): 1, ((1, 8), 8): 1, ((6, 7), 6): 1, ((6, 2), 6): 1, ((3, 3), 3): 1, ((9, 7), 9): 1, ((7, 8), 7): 1, ((2, 7), 2): 1, ((0, 0), 2): 1, ((2, 2), 2): 1, ((0, 6), 8): 1, ((1, 2), 2): 1, ((3, 2), 3): 1, ((5, 1), 5): 1, ((1, 7), 7): 1, ((8, 5), 8): 1, ((8, 3), 8): 1, ((6, 1), 6): 1, ((8, 9), 8): 1, ((9, 5), 9): 1})
Symbol-06 (int -> int -> int), Samples:  46,  Counter({((6, 4), 11): 4, ((0, 8), 5): 2, ((7, 6), 12): 2, ((2, 4), 6): 2, ((2, 1), 6): 2, ((8, 5), 13): 2, ((3, 2), 7): 2, ((3, 7), 7): 2, ((9, 7), 14): 2, ((0, 4), 5): 2, ((9, 4), 14): 1, ((5, 5), 10): 1, ((2, 3), 6): 1, ((4, 2), 8): 1, ((4, 7), 8): 1, ((1, 4), 5): 1, ((7, 9), 12): 1, ((0, 1), 5): 1, ((1, 5), 5): 1, ((0, 3), 5): 1, ((2, 8), 6): 1, ((6, 8), 11): 1, ((7, 1), 12): 1, ((8, 4), 13): 1, ((6, 5), 11): 1, ((6, 3), 11): 1, ((5, 3), 10): 1, ((0, 0), 5): 1, ((3, 3), 7): 1, ((3, 4), 7): 1, ((8, 6), 13): 1, ((0, 6), 5): 1, ((1, 9), 5): 1, ((7, 4), 12): 1})
Symbol-13 (int -> int -> int), Samples:  48,  Counter({((1, 4), 2): 3, ((7, 2), 14): 3, ((3, 4), 6): 3, ((2, 2), 4): 2, ((3, 2), 6): 2, ((6, 2), 12): 2, ((5, 4), 10): 2, ((6, 3), 12): 2, ((6, 4), 12): 2, ((2, 4), 4): 2, ((3, 5), 6): 2, ((8, 8), 16): 1, ((4, 6), 8): 1, ((6, 1), 12): 1, ((7, 1), 14): 1, ((9, 5), 18): 1, ((0, 8), 0): 1, ((9, 8), 18): 1, ((7, 9), 14): 1, ((3, 7), 6): 1, ((1, 7), 2): 1, ((9, 4), 18): 1, ((8, 4), 16): 1, ((6, 6), 12): 1, ((2, 7), 4): 1, ((3, 8), 6): 1, ((2, 3), 30): 1, ((1, 8), 2): 1, ((9, 6), 18): 1, ((6, 7), 12): 1, ((9, 9), 18): 1, ((8, 9), 16): 1, ((6, 5), 12): 1, ((4, 7), 8): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.97
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.98
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 52/499 (max_len=3, data=2820)
Train acc: 94.53 (abduce 99.57)
Dep:  Counter({(1, -1, 1): 1683, (-1,): 1000, (2, 2, -1): 119, (-1, 0, 0): 6})
Hit samples:  2808  Ave length:  2.29
Symbols:  15 [(0, 490), (1, 86), (2, 495), (3, 290), (4, 460), (5, 490), (6, 49), (7, 463), (8, 457), (9, 456), (10, 534), (11, 481), (12, 757), (13, 51), (14, 865)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  73,  Counter({((5, 4), 5): 4, ((9, 4), 9): 4, ((4, 4), 4): 3, ((5, 2), 5): 3, ((2, 4), 2): 3, ((1, 4), 4): 3, ((9, 9), 9): 2, ((7, 4), 7): 2, ((6, 0), 6): 2, ((3, 4), 3): 2, ((8, 4), 8): 2, ((0, 4), 6): 2, ((9, 1), 9): 2, ((1, 3), 3): 2, ((6, 3), 6): 1, ((8, 5), 8): 1, ((1, 9), 9): 1, ((7, 0), 7): 1, ((7, 1), 7): 1, ((0, 9), 11): 1, ((8, 2), 8): 1, ((1, 6), 6): 1, ((9, 7), 9): 1, ((1, 7), 7): 1, ((3, 3), 3): 1, ((6, 8), 6): 1, ((1, 8), 8): 1, ((9, 6), 9): 1, ((3, 1), 3): 1, ((6, 4), 6): 1, ((4, 5), 4): 1, ((9, 2), 9): 1, ((4, 8), 40): 1, ((5, 1), 5): 1, ((8, 8), 8): 1, ((6, 6), 6): 1, ((6, 2), 6): 1, ((9, 0), 9): 1, ((7, 7), 7): 1, ((2, 2), 2): 1, ((7, 8), 7): 1, ((0, 6), 8): 1, ((6, 7), 6): 1, ((0, 7), 9): 1, ((0, 0), 2): 1, ((4, 6), 4): 1, ((2, 7), 2): 1, ((3, 2), 3): 1, ((5, 5), 5): 1, ((9, 5), 9): 1, ((3, 5), 3): 1})
Symbol-06 (int -> int -> int), Samples:  44,  Counter({((6, 4), 11): 5, ((3, 7), 7): 3, ((0, 8), 5): 2, ((8, 5), 13): 2, ((7, 6), 12): 2, ((3, 2), 7): 2, ((0, 4), 5): 2, ((2, 1), 6): 2, ((9, 7), 14): 2, ((1, 4), 5): 2, ((6, 3), 11): 1, ((6, 5), 11): 1, ((2, 3), 6): 1, ((0, 1), 5): 1, ((7, 1), 12): 1, ((0, 0), 5): 1, ((4, 2), 8): 1, ((8, 6), 13): 1, ((7, 9), 12): 1, ((2, 8), 6): 1, ((6, 8), 11): 1, ((4, 7), 8): 1, ((0, 3), 5): 1, ((3, 3), 7): 1, ((5, 3), 10): 1, ((8, 4), 13): 1, ((1, 9), 5): 1, ((2, 4), 6): 1, ((2, 5), 5): 1, ((7, 4), 12): 1})
Symbol-13 (int -> int -> int), Samples:  45,  Counter({((3, 4), 6): 2, ((6, 2), 12): 2, ((7, 2), 14): 2, ((1, 4), 2): 2, ((2, 4), 4): 2, ((6, 4), 12): 2, ((2, 2), 4): 2, ((3, 5), 6): 2, ((5, 4), 10): 1, ((6, 1), 12): 1, ((9, 8), 18): 1, ((6, 0), 12): 1, ((0, 8), 0): 1, ((2, 7), 4): 1, ((9, 9), 18): 1, ((1, 8), 2): 1, ((4, 6), 8): 1, ((6, 6), 12): 1, ((3, 7), 6): 1, ((1, 7), 2): 1, ((8, 8), 16): 1, ((4, 7), 8): 1, ((9, 4), 18): 1, ((3, 2), 6): 1, ((7, 1), 14): 1, ((3, 8), 6): 1, ((4, 5), 8): 1, ((8, 4), 16): 1, ((9, 6), 18): 1, ((6, 7), 12): 1, ((9, 5), 18): 1, ((9, 1), 18): 1, ((6, 3), 30): 1, ((5, 1), 10): 1, ((1, 2), 2): 1, ((6, 5), 12): 1, ((9, 2), 18): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.97
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.99
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 0.97
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 53/499 (max_len=3, data=2820)
Train acc: 94.43 (abduce 99.54)
Dep:  Counter({(1, -1, 1): 1682, (-1,): 1000, (2, 2, -1): 115, (-1, 0, 0): 10})
Hit samples:  2807  Ave length:  2.29
Symbols:  15 [(0, 492), (1, 80), (2, 499), (3, 292), (4, 457), (5, 488), (6, 45), (7, 462), (8, 456), (9, 451), (10, 534), (11, 483), (12, 755), (13, 55), (14, 872)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  74,  Counter({((9, 4), 9): 4, ((4, 4), 4): 4, ((0, 4), 6): 3, ((2, 4), 2): 3, ((5, 2), 5): 3, ((5, 4), 5): 2, ((6, 0), 6): 2, ((8, 4), 8): 2, ((7, 4), 7): 2, ((3, 4), 3): 2, ((6, 3), 6): 2, ((3, 5), 3): 2, ((5, 5), 5): 2, ((9, 6), 9): 1, ((6, 8), 6): 1, ((1, 6), 6): 1, ((8, 8), 8): 1, ((4, 5), 4): 1, ((9, 9), 9): 1, ((1, 7), 7): 1, ((9, 1), 9): 1, ((1, 4), 4): 1, ((0, 7), 9): 1, ((9, 0), 9): 1, ((3, 3), 3): 1, ((7, 0), 7): 1, ((6, 2), 6): 1, ((2, 2), 2): 1, ((6, 7), 6): 1, ((1, 9), 9): 1, ((8, 2), 8): 1, ((3, 1), 3): 1, ((7, 1), 7): 1, ((4, 6), 4): 1, ((2, 7), 2): 1, ((1, 8), 8): 1, ((9, 2), 9): 1, ((5, 1), 5): 1, ((0, 9), 11): 1, ((6, 6), 6): 1, ((1, 3), 3): 1, ((3, 2), 3): 1, ((7, 8), 7): 1, ((9, 7), 9): 1, ((4, 8), 40): 1, ((0, 0), 2): 1, ((0, 6), 8): 1, ((1, 2), 2): 1, ((4, 1), 4): 1, ((6, 4), 6): 1, ((8, 9), 8): 1, ((7, 7), 7): 1, ((9, 5), 9): 1, ((8, 5), 8): 1})
Symbol-06 (int -> int -> int), Samples:  41,  Counter({((6, 4), 11): 4, ((8, 5), 13): 2, ((0, 8), 5): 2, ((7, 6), 12): 2, ((3, 2), 7): 2, ((0, 4), 5): 2, ((9, 7), 14): 2, ((3, 7), 7): 2, ((2, 1), 6): 2, ((9, 4), 14): 1, ((0, 1), 5): 1, ((4, 7), 8): 1, ((6, 8), 11): 1, ((4, 2), 8): 1, ((3, 4), 7): 1, ((1, 4), 5): 1, ((7, 9), 12): 1, ((5, 5), 10): 1, ((6, 5), 11): 1, ((8, 6), 13): 1, ((0, 3), 5): 1, ((2, 3), 6): 1, ((2, 8), 6): 1, ((0, 0), 5): 1, ((7, 1), 12): 1, ((0, 6), 5): 1, ((7, 4), 12): 1, ((1, 9), 5): 1, ((6, 3), 11): 1, ((1, 5), 5): 1})
Symbol-13 (int -> int -> int), Samples:  44,  Counter({((7, 2), 14): 2, ((3, 4), 6): 2, ((6, 2), 12): 2, ((2, 4), 4): 2, ((2, 2), 4): 2, ((6, 4), 12): 2, ((4, 7), 8): 2, ((3, 5), 6): 2, ((1, 2), 2): 1, ((4, 6), 8): 1, ((8, 8), 16): 1, ((1, 4), 2): 1, ((1, 7), 2): 1, ((0, 8), 0): 1, ((2, 7), 4): 1, ((9, 9), 18): 1, ((9, 8), 18): 1, ((9, 4), 18): 1, ((7, 9), 14): 1, ((3, 2), 6): 1, ((1, 8), 2): 1, ((9, 5), 18): 1, ((3, 7), 6): 1, ((6, 1), 12): 1, ((6, 3), 12): 1, ((4, 5), 8): 1, ((6, 0), 12): 1, ((6, 7), 12): 1, ((3, 8), 6): 1, ((6, 6), 12): 1, ((5, 1), 10): 1, ((8, 4), 16): 1, ((9, 6), 18): 1, ((6, 5), 12): 1, ((9, 1), 18): 1, ((8, 9), 16): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.99
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.99
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 54/499 (max_len=3, data=2820)
Train acc: 94.34 (abduce 99.47)
Dep:  Counter({(1, -1, 1): 1679, (-1,): 1000, (2, 2, -1): 118, (-1, 0, 0): 8})
Hit samples:  2805  Ave length:  2.29
Symbols:  15 [(0, 487), (1, 86), (2, 494), (3, 290), (4, 453), (5, 497), (6, 44), (7, 461), (8, 456), (9, 454), (10, 533), (11, 485), (12, 757), (13, 52), (14, 866)]
Learn perception with 2795 samples, take 262 sec.
Learn syntax with 2795 samples, take 2 sec.
result accuracy by digit:
0 ( 0%) 80.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 80.00
4 ( 0%) 90.00
5 ( 0%) 80.00
6 ( 0%) 90.00
7 ( 0%) 100.00
8 ( 0%) 80.00
9 ( 0%) 100.00
val (Perception Acc=9.30, Syntax Acc=43.10, Result Acc=6.08)
Epoch time: 4m 30s
------------------------------
Epoch 55/499 (max_len=3, data=2820)
Train acc: 95.05 (abduce 99.65)
Dep:  Counter({(1, -1, 1): 1687, (-1,): 1000, (2, 2, -1): 112, (-1, 0, 0): 11})
Hit samples:  2810  Ave length:  2.29
Symbols:  15 [(0, 488), (1, 79), (2, 496), (3, 294), (4, 457), (5, 494), (6, 42), (7, 465), (8, 455), (9, 454), (10, 534), (11, 483), (12, 767), (13, 51), (14, 871)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  71,  Counter({((5, 4), 5): 5, ((4, 4), 4): 3, ((9, 4), 9): 3, ((2, 4), 2): 3, ((1, 4), 4): 3, ((0, 4), 6): 3, ((6, 0), 6): 2, ((2, 2), 2): 2, ((6, 3), 6): 2, ((8, 4), 8): 2, ((3, 4), 3): 2, ((7, 4), 7): 2, ((3, 5), 3): 2, ((9, 6), 9): 2, ((4, 5), 4): 1, ((9, 0), 9): 1, ((8, 2), 8): 1, ((3, 3), 3): 1, ((1, 6), 6): 1, ((8, 8), 8): 1, ((1, 8), 8): 1, ((5, 1), 5): 1, ((6, 6), 6): 1, ((7, 1), 7): 1, ((6, 7), 6): 1, ((1, 7), 7): 1, ((3, 2), 3): 1, ((5, 5), 5): 1, ((1, 9), 9): 1, ((6, 4), 6): 1, ((9, 9), 9): 1, ((6, 2), 6): 1, ((9, 1), 9): 1, ((9, 2), 9): 1, ((7, 0), 7): 1, ((0, 6), 8): 1, ((5, 2), 5): 1, ((9, 7), 9): 1, ((0, 9), 11): 1, ((7, 8), 7): 1, ((0, 7), 9): 1, ((0, 0), 2): 1, ((3, 1), 3): 1, ((6, 8), 6): 1, ((9, 8), 9): 1, ((7, 7), 7): 1, ((8, 5), 8): 1, ((4, 6), 4): 1, ((8, 3), 8): 1})
Symbol-06 (int -> int -> int), Samples:  40,  Counter({((6, 4), 11): 4, ((8, 5), 13): 2, ((3, 2), 7): 2, ((7, 6), 12): 2, ((0, 8), 5): 2, ((0, 4), 5): 2, ((2, 1), 6): 2, ((7, 4), 12): 2, ((6, 8), 11): 1, ((6, 3), 11): 1, ((0, 1), 5): 1, ((5, 5), 10): 1, ((4, 2), 8): 1, ((4, 7), 8): 1, ((2, 8), 6): 1, ((5, 3), 10): 1, ((8, 6), 13): 1, ((1, 4), 5): 1, ((1, 5), 5): 1, ((2, 3), 6): 1, ((0, 3), 5): 1, ((7, 1), 12): 1, ((2, 4), 6): 1, ((3, 7), 7): 1, ((0, 0), 5): 1, ((8, 4), 13): 1, ((9, 7), 14): 1, ((3, 4), 7): 1, ((1, 9), 5): 1, ((3, 3), 7): 1})
Symbol-13 (int -> int -> int), Samples:  43,  Counter({((2, 2), 4): 4, ((7, 2), 14): 2, ((6, 2), 12): 2, ((3, 4), 6): 2, ((1, 4), 2): 2, ((2, 4), 4): 2, ((3, 2), 6): 2, ((4, 7), 8): 2, ((2, 7), 4): 1, ((9, 4), 18): 1, ((7, 9), 14): 1, ((0, 8), 0): 1, ((4, 6), 8): 1, ((4, 5), 8): 1, ((3, 7), 6): 1, ((8, 8), 16): 1, ((6, 3), 12): 1, ((6, 1), 12): 1, ((5, 4), 10): 1, ((9, 5), 18): 1, ((1, 7), 2): 1, ((9, 8), 18): 1, ((8, 4), 16): 1, ((6, 0), 12): 1, ((1, 2), 2): 1, ((3, 8), 6): 1, ((3, 5), 6): 1, ((5, 1), 10): 1, ((6, 5), 12): 1, ((6, 7), 12): 1, ((9, 6), 18): 1, ((1, 8), 2): 1, ((8, 9), 16): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.99
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 57s
------------------------------
Epoch 56/499 (max_len=3, data=2820)
Train acc: 91.63 (abduce 99.57)
Dep:  Counter({(1, -1, 1): 1689, (-1,): 1000, (2, 2, -1): 112, (-1, 0, 0): 7})
Hit samples:  2808  Ave length:  2.29
Symbols:  15 [(0, 491), (1, 77), (2, 495), (3, 294), (4, 456), (5, 490), (6, 45), (7, 461), (8, 455), (9, 454), (10, 532), (11, 488), (12, 764), (13, 47), (14, 875)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  73,  Counter({((5, 4), 5): 6, ((4, 4), 4): 4, ((9, 4), 9): 4, ((2, 4), 2): 3, ((1, 4), 4): 3, ((6, 3), 6): 2, ((3, 4), 3): 2, ((8, 4), 8): 2, ((9, 6), 9): 2, ((7, 4), 7): 2, ((5, 2), 5): 2, ((2, 2), 2): 2, ((3, 5), 3): 2, ((1, 3), 3): 2, ((0, 4), 6): 2, ((9, 1), 9): 2, ((1, 9), 9): 1, ((4, 6), 4): 1, ((8, 8), 8): 1, ((4, 5), 4): 1, ((3, 3), 3): 1, ((1, 8), 8): 1, ((0, 9), 11): 1, ((7, 0), 7): 1, ((1, 6), 6): 1, ((6, 6), 6): 1, ((6, 0), 6): 1, ((6, 2), 6): 1, ((3, 1), 3): 1, ((5, 1), 5): 1, ((6, 7), 6): 1, ((1, 7), 7): 1, ((7, 1), 7): 1, ((0, 7), 9): 1, ((5, 5), 5): 1, ((9, 9), 9): 1, ((9, 2), 9): 1, ((9, 7), 9): 1, ((0, 0), 2): 1, ((6, 8), 6): 1, ((7, 8), 7): 1, ((3, 2), 3): 1, ((6, 4), 6): 1, ((0, 6), 8): 1, ((4, 1), 4): 1, ((8, 9), 8): 1, ((8, 2), 8): 1})
Symbol-06 (int -> int -> int), Samples:  42,  Counter({((6, 4), 11): 4, ((3, 7), 7): 3, ((3, 2), 7): 2, ((0, 4), 5): 2, ((8, 5), 13): 2, ((7, 6), 12): 2, ((9, 7), 14): 2, ((7, 4), 12): 2, ((0, 8), 5): 2, ((4, 2), 8): 1, ((1, 4), 5): 1, ((6, 8), 11): 1, ((0, 1), 5): 1, ((5, 3), 10): 1, ((4, 7), 8): 1, ((0, 0), 5): 1, ((2, 3), 6): 1, ((8, 6), 13): 1, ((2, 8), 6): 1, ((8, 4), 13): 1, ((5, 5), 10): 1, ((7, 1), 12): 1, ((2, 4), 6): 1, ((1, 5), 5): 1, ((0, 3), 5): 1, ((0, 6), 5): 1, ((6, 3), 11): 1, ((3, 3), 7): 1, ((9, 4), 14): 1, ((1, 9), 5): 1})
Symbol-13 (int -> int -> int), Samples:  41,  Counter({((7, 2), 14): 2, ((2, 4), 4): 2, ((3, 4), 6): 2, ((6, 2), 12): 2, ((9, 4), 18): 2, ((4, 7), 8): 2, ((6, 4), 12): 2, ((4, 6), 8): 1, ((3, 7), 6): 1, ((1, 7), 2): 1, ((1, 4), 2): 1, ((8, 8), 16): 1, ((7, 9), 14): 1, ((8, 4), 16): 1, ((3, 2), 6): 1, ((2, 7), 4): 1, ((9, 8), 18): 1, ((9, 5), 18): 1, ((6, 1), 12): 1, ((6, 3), 12): 1, ((5, 4), 10): 1, ((6, 6), 12): 1, ((0, 8), 0): 1, ((4, 5), 8): 1, ((2, 2), 4): 1, ((5, 1), 10): 1, ((7, 1), 14): 1, ((8, 9), 16): 1, ((3, 8), 6): 1, ((6, 0), 12): 1, ((3, 5), 6): 1, ((9, 6), 18): 1, ((6, 5), 12): 1, ((6, 7), 12): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 55s
------------------------------
Epoch 57/499 (max_len=3, data=2820)
Train acc: 95.44 (abduce 99.36)
Dep:  Counter({(1, -1, 1): 1683, (-1,): 1000, (2, 2, -1): 109, (-1, 0, 0): 10})
Hit samples:  2802  Ave length:  2.29
Symbols:  15 [(0, 494), (1, 81), (2, 496), (3, 295), (4, 452), (5, 489), (6, 45), (7, 459), (8, 452), (9, 456), (10, 523), (11, 488), (12, 752), (13, 51), (14, 873)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  77,  Counter({((5, 4), 5): 6, ((9, 4), 9): 4, ((2, 4), 2): 3, ((0, 4), 6): 3, ((8, 4), 8): 2, ((5, 2), 5): 2, ((6, 0), 6): 2, ((9, 6), 9): 2, ((3, 4), 3): 2, ((7, 4), 7): 2, ((6, 3), 6): 2, ((2, 2), 2): 2, ((9, 1), 9): 2, ((4, 6), 4): 2, ((3, 5), 3): 2, ((1, 7), 7): 1, ((6, 2), 6): 1, ((6, 6), 6): 1, ((6, 8), 6): 1, ((1, 6), 6): 1, ((0, 6), 8): 1, ((8, 2), 8): 1, ((1, 8), 8): 1, ((7, 1), 7): 1, ((6, 7), 6): 1, ((8, 8), 8): 1, ((4, 5), 4): 1, ((1, 4), 4): 1, ((9, 7), 9): 1, ((9, 9), 9): 1, ((6, 4), 6): 1, ((5, 5), 5): 1, ((1, 9), 9): 1, ((7, 0), 7): 1, ((0, 7), 9): 1, ((9, 0), 9): 1, ((3, 1), 3): 1, ((3, 3), 3): 1, ((7, 8), 7): 1, ((5, 1), 5): 1, ((3, 2), 3): 1, ((7, 7), 7): 1, ((0, 0), 2): 1, ((4, 4), 4): 1, ((0, 9), 11): 1, ((9, 8), 9): 1, ((1, 3), 3): 1, ((4, 1), 4): 1, ((8, 9), 8): 1, ((1, 2), 2): 1, ((8, 5), 8): 1, ((9, 2), 9): 1, ((3, 8), 3): 1, ((7, 2), 7): 1})
Symbol-06 (int -> int -> int), Samples:  40,  Counter({((6, 4), 11): 4, ((3, 2), 7): 2, ((8, 5), 13): 2, ((0, 8), 5): 2, ((0, 4), 5): 2, ((7, 6), 12): 2, ((1, 4), 5): 2, ((9, 7), 14): 2, ((4, 7), 8): 1, ((5, 5), 10): 1, ((2, 3), 6): 1, ((0, 3), 5): 1, ((0, 1), 5): 1, ((6, 8), 11): 1, ((1, 5), 5): 1, ((3, 7), 7): 1, ((8, 4), 13): 1, ((8, 6), 13): 1, ((2, 4), 6): 1, ((5, 3), 10): 1, ((0, 0), 5): 1, ((6, 3), 11): 1, ((2, 8), 6): 1, ((9, 4), 14): 1, ((4, 2), 8): 1, ((7, 4), 12): 1, ((0, 6), 5): 1, ((2, 1), 6): 1, ((1, 9), 5): 1, ((7, 1), 12): 1})
Symbol-13 (int -> int -> int), Samples:  46,  Counter({((2, 2), 4): 3, ((6, 4), 12): 2, ((1, 4), 2): 2, ((2, 4), 4): 2, ((4, 7), 8): 2, ((6, 2), 12): 2, ((3, 4), 6): 2, ((3, 2), 6): 2, ((0, 4), 0): 2, ((4, 6), 8): 1, ((6, 1), 12): 1, ((7, 2), 14): 1, ((1, 7), 2): 1, ((0, 8), 0): 1, ((9, 8), 18): 1, ((6, 6), 12): 1, ((3, 7), 6): 1, ((9, 4), 18): 1, ((7, 9), 14): 1, ((6, 0), 12): 1, ((8, 8), 16): 1, ((2, 7), 4): 1, ((7, 1), 14): 1, ((8, 9), 16): 1, ((9, 5), 18): 1, ((1, 2), 2): 1, ((5, 4), 10): 1, ((3, 5), 6): 1, ((5, 1), 10): 1, ((9, 6), 18): 1, ((4, 5), 8): 1, ((6, 3), 12): 1, ((3, 8), 6): 1, ((6, 7), 12): 1, ((6, 5), 12): 1, ((1, 8), 2): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 58/499 (max_len=3, data=2820)
Train acc: 95.25 (abduce 99.11)
Dep:  Counter({(1, -1, 1): 1677, (-1,): 1000, (2, 2, -1): 109, (-1, 0, 0): 9})
Hit samples:  2795  Ave length:  2.28
Symbols:  15 [(0, 487), (1, 80), (2, 492), (3, 291), (4, 449), (5, 489), (6, 45), (7, 460), (8, 453), (9, 457), (10, 527), (11, 485), (12, 755), (13, 46), (14, 869)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  73,  Counter({((5, 4), 5): 6, ((4, 4), 4): 3, ((9, 4), 9): 3, ((2, 4), 2): 3, ((7, 4), 7): 2, ((5, 2), 5): 2, ((6, 3), 6): 2, ((3, 4), 3): 2, ((2, 2), 2): 2, ((9, 6), 9): 2, ((9, 1), 9): 2, ((1, 4), 4): 2, ((8, 4), 8): 2, ((3, 5), 3): 2, ((0, 4), 6): 2, ((6, 2), 6): 1, ((1, 9), 9): 1, ((1, 7), 7): 1, ((8, 8), 8): 1, ((6, 0), 6): 1, ((1, 6), 6): 1, ((8, 2), 8): 1, ((1, 8), 8): 1, ((6, 4), 6): 1, ((7, 1), 7): 1, ((5, 5), 5): 1, ((3, 3), 3): 1, ((0, 6), 8): 1, ((9, 2), 9): 1, ((6, 7), 6): 1, ((6, 8), 6): 1, ((7, 8), 7): 1, ((9, 7), 9): 1, ((9, 9), 9): 1, ((4, 5), 4): 1, ((7, 0), 7): 1, ((3, 2), 3): 1, ((0, 0), 2): 1, ((5, 1), 5): 1, ((7, 7), 7): 1, ((9, 0), 9): 1, ((4, 6), 4): 1, ((3, 1), 3): 1, ((9, 8), 9): 1, ((4, 1), 4): 1, ((0, 7), 9): 1, ((8, 5), 8): 1, ((6, 1), 6): 1, ((6, 6), 6): 1, ((0, 9), 11): 1, ((8, 3), 8): 1})
Symbol-06 (int -> int -> int), Samples:  42,  Counter({((6, 4), 11): 4, ((0, 4), 5): 2, ((7, 6), 12): 2, ((0, 8), 5): 2, ((8, 5), 13): 2, ((3, 2), 7): 2, ((2, 1), 6): 2, ((9, 7), 14): 2, ((3, 7), 7): 2, ((4, 7), 8): 1, ((0, 1), 5): 1, ((1, 4), 5): 1, ((0, 3), 5): 1, ((5, 5), 10): 1, ((9, 4), 14): 1, ((8, 4), 13): 1, ((2, 3), 6): 1, ((4, 2), 8): 1, ((6, 8), 11): 1, ((8, 6), 13): 1, ((5, 3), 10): 1, ((6, 3), 11): 1, ((1, 5), 5): 1, ((2, 8), 6): 1, ((3, 4), 7): 1, ((0, 0), 5): 1, ((0, 6), 5): 1, ((7, 4), 12): 1, ((7, 1), 12): 1, ((1, 9), 5): 1, ((2, 4), 6): 1})
Symbol-13 (int -> int -> int), Samples:  44,  Counter({((2, 2), 4): 4, ((7, 2), 14): 2, ((6, 2), 12): 2, ((3, 4), 6): 2, ((3, 2), 6): 2, ((1, 4), 2): 2, ((4, 7), 8): 2, ((6, 4), 12): 2, ((9, 6), 18): 1, ((4, 6), 8): 1, ((9, 8), 18): 1, ((8, 4), 16): 1, ((5, 4), 10): 1, ((9, 4), 18): 1, ((6, 3), 12): 1, ((3, 7), 6): 1, ((1, 7), 2): 1, ((7, 9), 14): 1, ((2, 7), 4): 1, ((6, 1), 12): 1, ((6, 6), 12): 1, ((9, 5), 18): 1, ((0, 8), 0): 1, ((6, 0), 12): 1, ((7, 1), 14): 1, ((1, 2), 2): 1, ((2, 4), 4): 1, ((4, 5), 8): 1, ((8, 9), 16): 1, ((5, 1), 10): 1, ((3, 5), 6): 1, ((3, 8), 6): 1, ((1, 8), 2): 1, ((0, 4), 0): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 55s
------------------------------
Epoch 59/499 (max_len=3, data=2820)
Train acc: 95.05 (abduce 99.40)
Dep:  Counter({(1, -1, 1): 1688, (-1,): 1000, (2, 2, -1): 105, (-1, 0, 0): 10})
Hit samples:  2803  Ave length:  2.29
Symbols:  15 [(0, 487), (1, 83), (2, 493), (3, 292), (4, 451), (5, 493), (6, 41), (7, 465), (8, 456), (9, 457), (10, 531), (11, 481), (12, 760), (13, 47), (14, 872)]
Learn perception with 2793 samples, take 265 sec.
Learn syntax with 2793 samples, take 2 sec.
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 90.00
2 ( 0%) 100.00
3 ( 0%) 80.00
4 ( 0%) 90.00
5 ( 0%) 80.00
6 ( 0%) 90.00
7 ( 0%) 100.00
8 ( 0%) 90.00
9 ( 0%) 100.00
val (Perception Acc=9.42, Syntax Acc=43.21, Result Acc=6.15)
Epoch time: 4m 34s
------------------------------
Epoch 60/499 (max_len=3, data=2820)
Train acc: 96.22 (abduce 99.65)
Dep:  Counter({(1, -1, 1): 1698, (-1,): 1000, (2, 2, -1): 102, (-1, 0, 0): 10})
Hit samples:  2810  Ave length:  2.29
Symbols:  15 [(0, 493), (1, 83), (2, 493), (3, 292), (4, 457), (5, 495), (6, 40), (7, 466), (8, 454), (9, 458), (10, 526), (11, 486), (12, 766), (13, 44), (14, 877)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  76,  Counter({((5, 4), 5): 5, ((4, 4), 4): 5, ((9, 4), 9): 3, ((2, 4), 2): 3, ((9, 6), 9): 2, ((5, 2), 5): 2, ((6, 3), 6): 2, ((6, 4), 6): 2, ((7, 4), 7): 2, ((2, 2), 2): 2, ((8, 2), 8): 2, ((9, 1), 9): 2, ((1, 4), 4): 2, ((0, 4), 6): 2, ((6, 0), 6): 2, ((1, 3), 3): 2, ((5, 1), 5): 2, ((6, 8), 6): 1, ((6, 6), 6): 1, ((4, 5), 4): 1, ((3, 4), 3): 1, ((9, 9), 9): 1, ((8, 8), 8): 1, ((1, 9), 9): 1, ((3, 1), 3): 1, ((1, 8), 8): 1, ((7, 8), 7): 1, ((5, 5), 5): 1, ((6, 7), 6): 1, ((9, 2), 9): 1, ((1, 6), 6): 1, ((8, 4), 8): 1, ((7, 1), 7): 1, ((9, 7), 9): 1, ((0, 0), 2): 1, ((0, 9), 11): 1, ((9, 0), 9): 1, ((7, 7), 7): 1, ((3, 2), 3): 1, ((3, 0), 3): 1, ((1, 7), 7): 1, ((0, 7), 9): 1, ((0, 6), 8): 1, ((3, 3), 3): 1, ((6, 2), 6): 1, ((4, 6), 4): 1, ((8, 5), 8): 1, ((9, 8), 9): 1, ((3, 5), 3): 1, ((8, 3), 8): 1, ((1, 2), 2): 1})
Symbol-06 (int -> int -> int), Samples:  38,  Counter({((6, 4), 11): 3, ((3, 2), 7): 2, ((8, 5), 13): 2, ((0, 8), 5): 2, ((0, 4), 5): 2, ((7, 6), 12): 2, ((9, 7), 14): 2, ((3, 7), 7): 2, ((6, 8), 11): 1, ((2, 8), 6): 1, ((0, 3), 5): 1, ((0, 1), 5): 1, ((6, 3), 11): 1, ((1, 4), 5): 1, ((7, 1), 12): 1, ((5, 5), 10): 1, ((4, 7), 8): 1, ((4, 2), 8): 1, ((8, 6), 13): 1, ((3, 4), 7): 1, ((5, 3), 10): 1, ((0, 0), 5): 1, ((2, 1), 6): 1, ((3, 3), 7): 1, ((7, 4), 12): 1, ((9, 4), 14): 1, ((2, 4), 6): 1, ((1, 5), 5): 1, ((1, 9), 5): 1})
Symbol-13 (int -> int -> int), Samples:  41,  Counter({((2, 2), 4): 4, ((7, 2), 14): 2, ((6, 3), 12): 2, ((6, 2), 12): 2, ((6, 4), 12): 2, ((3, 4), 6): 2, ((4, 7), 8): 2, ((6, 1), 12): 1, ((0, 8), 0): 1, ((8, 8), 16): 1, ((1, 4), 2): 1, ((3, 7), 6): 1, ((2, 7), 4): 1, ((1, 7), 2): 1, ((8, 4), 16): 1, ((9, 8), 18): 1, ((1, 8), 2): 1, ((3, 2), 6): 1, ((9, 5), 18): 1, ((4, 6), 8): 1, ((5, 4), 10): 1, ((1, 2), 2): 1, ((7, 1), 14): 1, ((3, 8), 6): 1, ((6, 7), 12): 1, ((8, 9), 16): 1, ((9, 6), 18): 1, ((5, 1), 10): 1, ((6, 6), 12): 1, ((2, 0), 4): 1, ((2, 4), 4): 1, ((4, 5), 8): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 53s
------------------------------
Epoch 61/499 (max_len=3, data=2820)
Train acc: 94.53 (abduce 99.72)
Dep:  Counter({(1, -1, 1): 1698, (-1,): 1000, (2, 2, -1): 106, (-1, 0, 0): 8})
Hit samples:  2812  Ave length:  2.29
Symbols:  15 [(0, 492), (1, 77), (2, 493), (3, 295), (4, 455), (5, 494), (6, 43), (7, 466), (8, 456), (9, 456), (10, 532), (11, 485), (12, 768), (13, 49), (14, 875)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  74,  Counter({((5, 4), 5): 6, ((4, 4), 4): 4, ((9, 4), 9): 4, ((2, 4), 2): 3, ((0, 4), 6): 3, ((5, 2), 5): 2, ((9, 6), 9): 2, ((1, 4), 4): 2, ((8, 4), 8): 2, ((7, 4), 7): 2, ((6, 3), 6): 2, ((9, 1), 9): 2, ((6, 0), 6): 2, ((6, 4), 6): 2, ((8, 2), 8): 2, ((7, 0), 7): 1, ((1, 6), 6): 1, ((6, 8), 6): 1, ((6, 7), 6): 1, ((7, 8), 7): 1, ((6, 2), 6): 1, ((0, 7), 9): 1, ((0, 0), 2): 1, ((9, 0), 9): 1, ((9, 7), 9): 1, ((3, 4), 3): 1, ((9, 9), 9): 1, ((9, 2), 9): 1, ((7, 1), 7): 1, ((0, 9), 11): 1, ((1, 7), 7): 1, ((5, 5), 5): 1, ((6, 6), 6): 1, ((3, 2), 3): 1, ((0, 6), 8): 1, ((3, 3), 3): 1, ((1, 8), 8): 1, ((3, 1), 3): 1, ((1, 9), 9): 1, ((8, 8), 8): 1, ((3, 0), 3): 1, ((4, 6), 4): 1, ((2, 2), 2): 1, ((4, 5), 4): 1, ((5, 1), 5): 1, ((8, 5), 8): 1, ((1, 3), 3): 1, ((3, 5), 3): 1, ((9, 8), 9): 1})
Symbol-06 (int -> int -> int), Samples:  39,  Counter({((6, 4), 11): 3, ((3, 2), 7): 2, ((8, 5), 13): 2, ((0, 4), 5): 2, ((0, 8), 5): 2, ((7, 6), 12): 2, ((3, 7), 7): 2, ((9, 7), 14): 2, ((2, 1), 6): 2, ((1, 4), 5): 1, ((0, 3), 5): 1, ((5, 5), 10): 1, ((8, 6), 13): 1, ((2, 8), 6): 1, ((0, 1), 5): 1, ((2, 4), 6): 1, ((7, 1), 12): 1, ((3, 4), 7): 1, ((4, 7), 8): 1, ((5, 3), 10): 1, ((6, 8), 11): 1, ((9, 4), 14): 1, ((0, 0), 5): 1, ((6, 3), 11): 1, ((8, 4), 13): 1, ((4, 2), 8): 1, ((1, 5), 5): 1, ((1, 9), 5): 1, ((3, 3), 7): 1})
Symbol-13 (int -> int -> int), Samples:  45,  Counter({((2, 2), 4): 5, ((6, 3), 12): 2, ((7, 2), 14): 2, ((6, 2), 12): 2, ((3, 4), 6): 2, ((4, 7), 8): 2, ((6, 4), 12): 2, ((1, 4), 2): 2, ((9, 5), 18): 1, ((8, 8), 16): 1, ((7, 1), 14): 1, ((4, 6), 8): 1, ((8, 4), 16): 1, ((5, 4), 10): 1, ((3, 7), 6): 1, ((1, 7), 2): 1, ((1, 8), 2): 1, ((2, 0), 4): 1, ((6, 1), 12): 1, ((0, 8), 0): 1, ((2, 4), 4): 1, ((2, 7), 4): 1, ((3, 2), 6): 1, ((9, 8), 18): 1, ((8, 9), 16): 1, ((9, 6), 18): 1, ((6, 6), 12): 1, ((3, 8), 6): 1, ((6, 5), 12): 1, ((4, 5), 8): 1, ((5, 1), 10): 1, ((6, 7), 12): 1, ((3, 5), 6): 1, ((0, 9), 15): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.99
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 55s
------------------------------
Epoch 62/499 (max_len=3, data=2820)
Train acc: 95.93 (abduce 99.57)
Dep:  Counter({(1, -1, 1): 1698, (-1,): 1000, (2, 2, -1): 97, (-1, 0, 0): 13})
Hit samples:  2808  Ave length:  2.29
Symbols:  15 [(0, 492), (1, 80), (2, 494), (3, 290), (4, 458), (5, 491), (6, 46), (7, 464), (8, 458), (9, 460), (10, 528), (11, 481), (12, 766), (13, 42), (14, 874)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  72,  Counter({((5, 4), 5): 6, ((4, 4), 4): 5, ((9, 4), 9): 4, ((2, 4), 2): 3, ((1, 4), 4): 2, ((9, 6), 9): 2, ((6, 0), 6): 2, ((6, 3), 6): 2, ((2, 2), 2): 2, ((6, 4), 6): 2, ((5, 2), 5): 2, ((7, 4), 7): 2, ((8, 2), 8): 2, ((0, 4), 6): 2, ((3, 1), 3): 2, ((8, 4), 8): 1, ((3, 4), 3): 1, ((4, 5), 4): 1, ((6, 8), 6): 1, ((0, 6), 8): 1, ((1, 8), 8): 1, ((4, 6), 4): 1, ((8, 8), 8): 1, ((6, 2), 6): 1, ((1, 9), 9): 1, ((6, 6), 6): 1, ((3, 2), 3): 1, ((1, 6), 6): 1, ((7, 0), 7): 1, ((9, 0), 9): 1, ((0, 0), 2): 1, ((0, 7), 9): 1, ((9, 7), 9): 1, ((7, 7), 7): 1, ((7, 8), 7): 1, ((6, 7), 6): 1, ((1, 7), 7): 1, ((5, 1), 5): 1, ((0, 9), 11): 1, ((3, 0), 3): 1, ((4, 1), 4): 1, ((5, 5), 5): 1, ((9, 9), 9): 1, ((9, 1), 9): 1, ((8, 5), 8): 1, ((3, 5), 3): 1, ((4, 8), 9): 1})
Symbol-06 (int -> int -> int), Samples:  40,  Counter({((6, 4), 11): 3, ((0, 4), 5): 2, ((0, 8), 5): 2, ((7, 6), 12): 2, ((8, 5), 13): 2, ((3, 2), 7): 2, ((9, 7), 14): 2, ((7, 4), 12): 2, ((3, 7), 7): 2, ((1, 4), 5): 1, ((4, 2), 8): 1, ((4, 7), 8): 1, ((6, 8), 11): 1, ((2, 8), 6): 1, ((6, 3), 11): 1, ((8, 6), 13): 1, ((3, 4), 7): 1, ((7, 1), 12): 1, ((0, 1), 5): 1, ((2, 4), 6): 1, ((0, 3), 5): 1, ((0, 0), 5): 1, ((3, 3), 7): 1, ((5, 3), 10): 1, ((8, 4), 13): 1, ((1, 5), 5): 1, ((5, 5), 10): 1, ((1, 9), 5): 1, ((2, 1), 6): 1, ((9, 4), 14): 1})
Symbol-13 (int -> int -> int), Samples:  39,  Counter({((2, 2), 4): 3, ((7, 2), 14): 2, ((6, 3), 12): 2, ((6, 2), 12): 2, ((6, 4), 12): 2, ((4, 6), 8): 1, ((3, 7), 6): 1, ((9, 8), 18): 1, ((3, 4), 6): 1, ((3, 2), 6): 1, ((1, 4), 2): 1, ((0, 8), 0): 1, ((6, 1), 12): 1, ((1, 7), 2): 1, ((5, 4), 10): 1, ((2, 7), 4): 1, ((2, 4), 4): 1, ((4, 7), 8): 1, ((6, 6), 12): 1, ((9, 5), 18): 1, ((8, 4), 16): 1, ((7, 1), 14): 1, ((2, 0), 4): 1, ((4, 5), 8): 1, ((6, 7), 12): 1, ((8, 9), 16): 1, ((1, 2), 2): 1, ((3, 8), 6): 1, ((6, 5), 12): 1, ((1, 8), 2): 1, ((9, 6), 18): 1, ((3, 5), 6): 1, ((5, 1), 10): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 0.99
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 55s
------------------------------
Epoch 63/499 (max_len=3, data=2820)
Train acc: 95.90 (abduce 99.47)
Dep:  Counter({(1, -1, 1): 1700, (-1,): 1000, (2, 2, -1): 96, (-1, 0, 0): 9})
Hit samples:  2805  Ave length:  2.29
Symbols:  15 [(0, 490), (1, 80), (2, 494), (3, 292), (4, 459), (5, 488), (6, 39), (7, 466), (8, 457), (9, 458), (10, 519), (11, 487), (12, 770), (13, 47), (14, 869)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  73,  Counter({((5, 4), 5): 6, ((4, 4), 4): 4, ((9, 4), 9): 4, ((2, 4), 2): 3, ((9, 6), 9): 2, ((7, 4), 7): 2, ((6, 0), 6): 2, ((6, 3), 6): 2, ((1, 4), 4): 2, ((6, 4), 6): 2, ((2, 2), 2): 2, ((9, 1), 9): 2, ((0, 4), 6): 2, ((8, 2), 8): 2, ((5, 2), 5): 1, ((7, 0), 7): 1, ((1, 6), 6): 1, ((7, 1), 7): 1, ((6, 7), 6): 1, ((6, 2), 6): 1, ((3, 1), 3): 1, ((3, 4), 3): 1, ((6, 8), 6): 1, ((5, 5), 5): 1, ((5, 1), 5): 1, ((8, 4), 8): 1, ((0, 9), 11): 1, ((7, 7), 7): 1, ((3, 3), 3): 1, ((7, 8), 7): 1, ((9, 2), 9): 1, ((9, 7), 9): 1, ((0, 0), 2): 1, ((0, 7), 9): 1, ((4, 6), 4): 1, ((9, 9), 9): 1, ((0, 6), 8): 1, ((4, 5), 4): 1, ((3, 0), 3): 1, ((3, 2), 3): 1, ((1, 8), 8): 1, ((9, 0), 9): 1, ((1, 9), 9): 1, ((6, 6), 6): 1, ((1, 3), 3): 1, ((4, 1), 4): 1, ((8, 5), 8): 1, ((9, 8), 9): 1, ((3, 5), 3): 1, ((8, 8), 8): 1})
Symbol-06 (int -> int -> int), Samples:  36,  Counter({((8, 5), 13): 2, ((3, 2), 7): 2, ((7, 6), 12): 2, ((6, 4), 11): 2, ((0, 4), 5): 2, ((2, 1), 6): 2, ((9, 7), 14): 2, ((0, 8), 5): 2, ((0, 1), 5): 1, ((6, 3), 11): 1, ((8, 6), 13): 1, ((8, 4), 13): 1, ((1, 4), 5): 1, ((9, 4), 14): 1, ((0, 0), 5): 1, ((1, 5), 5): 1, ((5, 5), 10): 1, ((7, 1), 12): 1, ((0, 3), 5): 1, ((6, 8), 11): 1, ((4, 7), 8): 1, ((3, 4), 7): 1, ((7, 4), 12): 1, ((2, 8), 6): 1, ((2, 4), 6): 1, ((1, 9), 5): 1, ((5, 3), 10): 1, ((3, 7), 7): 1})
Symbol-13 (int -> int -> int), Samples:  42,  Counter({((2, 2), 4): 4, ((6, 2), 12): 2, ((6, 3), 12): 2, ((7, 2), 14): 2, ((3, 4), 6): 2, ((6, 4), 12): 2, ((4, 7), 8): 2, ((2, 7), 4): 1, ((4, 5), 8): 1, ((8, 8), 16): 1, ((6, 6), 12): 1, ((3, 7), 6): 1, ((1, 4), 2): 1, ((1, 8), 2): 1, ((1, 7), 2): 1, ((4, 6), 8): 1, ((3, 2), 6): 1, ((8, 4), 16): 1, ((9, 8), 18): 1, ((9, 5), 18): 1, ((7, 1), 14): 1, ((2, 0), 4): 1, ((2, 4), 4): 1, ((6, 1), 12): 1, ((1, 2), 2): 1, ((6, 7), 12): 1, ((3, 8), 6): 1, ((6, 5), 12): 1, ((5, 1), 10): 1, ((3, 5), 6): 1, ((9, 6), 18): 1, ((8, 9), 16): 1, ((3, 1), 6): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 54s
------------------------------
Epoch 64/499 (max_len=3, data=2820)
Train acc: 94.14 (abduce 99.65)
Dep:  Counter({(1, -1, 1): 1704, (-1,): 1000, (2, 2, -1): 100, (-1, 0, 0): 6})
Hit samples:  2810  Ave length:  2.29
Symbols:  15 [(0, 495), (1, 75), (2, 493), (3, 293), (4, 455), (5, 492), (6, 42), (7, 464), (8, 459), (9, 461), (10, 523), (11, 485), (12, 770), (13, 46), (14, 877)]
Learn perception with 2805 samples, take 270 sec.
Learn syntax with 2805 samples, take 2 sec.
result accuracy by digit:
0 ( 0%) 90.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 80.00
4 ( 0%) 90.00
5 ( 0%) 80.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 90.00
9 ( 0%) 100.00
val (Perception Acc=9.48, Syntax Acc=43.29, Result Acc=6.23)
Epoch time: 4m 38s
------------------------------
Epoch 65/499 (max_len=3, data=2820)
Train acc: 96.45 (abduce 99.65)
Dep:  Counter({(1, -1, 1): 1712, (-1,): 1000, (2, 2, -1): 91, (-1, 0, 0): 7})
Hit samples:  2810  Ave length:  2.29
Symbols:  15 [(0, 494), (1, 77), (2, 494), (3, 291), (4, 456), (5, 490), (6, 39), (7, 464), (8, 460), (9, 462), (10, 524), (11, 485), (12, 777), (13, 45), (14, 872)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  73,  Counter({((4, 4), 4): 5, ((5, 4), 5): 4, ((9, 4), 9): 4, ((2, 4), 2): 3, ((9, 6), 9): 2, ((6, 3), 6): 2, ((6, 4), 6): 2, ((8, 4), 8): 2, ((2, 2), 2): 2, ((6, 0), 6): 2, ((7, 4), 7): 2, ((8, 2), 8): 2, ((9, 1), 9): 2, ((0, 4), 6): 2, ((7, 0), 7): 1, ((6, 6), 6): 1, ((4, 5), 4): 1, ((8, 8), 8): 1, ((1, 7), 7): 1, ((1, 9), 9): 1, ((6, 2), 6): 1, ((9, 2), 9): 1, ((4, 6), 4): 1, ((5, 5), 5): 1, ((1, 8), 8): 1, ((6, 7), 6): 1, ((0, 0), 2): 1, ((0, 7), 9): 1, ((6, 8), 6): 1, ((0, 6), 8): 1, ((3, 4), 3): 1, ((9, 9), 9): 1, ((7, 7), 7): 1, ((5, 2), 5): 1, ((3, 2), 3): 1, ((7, 1), 7): 1, ((1, 6), 6): 1, ((0, 9), 11): 1, ((5, 1), 5): 1, ((7, 8), 7): 1, ((1, 4), 4): 1, ((9, 0), 9): 1, ((3, 1), 3): 1, ((3, 0), 3): 1, ((3, 3), 3): 1, ((9, 7), 9): 1, ((8, 5), 8): 1, ((3, 5), 3): 1, ((8, 3), 8): 1, ((4, 1), 4): 1, ((7, 2), 7): 1})
Symbol-06 (int -> int -> int), Samples:  39,  Counter({((6, 4), 11): 3, ((8, 5), 13): 2, ((0, 8), 5): 2, ((3, 2), 7): 2, ((0, 4), 5): 2, ((9, 7), 14): 2, ((2, 1), 6): 2, ((3, 7), 7): 2, ((6, 8), 11): 1, ((4, 7), 8): 1, ((1, 4), 5): 1, ((0, 3), 5): 1, ((9, 4), 14): 1, ((7, 6), 12): 1, ((8, 6), 13): 1, ((2, 8), 6): 1, ((8, 4), 13): 1, ((3, 3), 7): 1, ((6, 3), 11): 1, ((3, 4), 7): 1, ((0, 1), 5): 1, ((7, 9), 12): 1, ((4, 2), 8): 1, ((1, 3), 5): 1, ((0, 0), 5): 1, ((7, 1), 12): 1, ((5, 3), 10): 1, ((5, 5), 10): 1, ((1, 5), 5): 1, ((1, 9), 5): 1})
Symbol-13 (int -> int -> int), Samples:  39,  Counter({((2, 2), 4): 4, ((6, 3), 12): 2, ((6, 2), 12): 2, ((3, 4), 6): 2, ((1, 4), 2): 1, ((2, 7), 4): 1, ((9, 8), 18): 1, ((4, 6), 8): 1, ((7, 1), 14): 1, ((3, 7), 6): 1, ((7, 2), 14): 1, ((6, 6), 12): 1, ((6, 1), 12): 1, ((5, 4), 10): 1, ((1, 8), 2): 1, ((3, 2), 6): 1, ((4, 5), 8): 1, ((1, 7), 2): 1, ((8, 4), 16): 1, ((2, 4), 4): 1, ((2, 0), 4): 1, ((0, 8), 0): 1, ((9, 5), 18): 1, ((1, 2), 2): 1, ((5, 1), 10): 1, ((9, 6), 18): 1, ((6, 7), 12): 1, ((3, 8), 6): 1, ((8, 9), 16): 1, ((6, 4), 12): 1, ((6, 5), 12): 1, ((4, 7), 8): 1, ((3, 5), 6): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.99
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 54s
------------------------------
Epoch 66/499 (max_len=3, data=2820)
Train acc: 96.58 (abduce 99.72)
Dep:  Counter({(1, -1, 1): 1709, (-1,): 1000, (2, 2, -1): 94, (-1, 0, 0): 9})
Hit samples:  2812  Ave length:  2.29
Symbols:  15 [(0, 492), (1, 76), (2, 492), (3, 294), (4, 457), (5, 492), (6, 40), (7, 466), (8, 461), (9, 462), (10, 524), (11, 484), (12, 773), (13, 44), (14, 879)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  72,  Counter({((5, 4), 5): 6, ((4, 4), 4): 4, ((9, 4), 9): 4, ((2, 4), 2): 3, ((7, 4), 7): 2, ((9, 6), 9): 2, ((5, 2), 5): 2, ((6, 0), 6): 2, ((6, 4), 6): 2, ((6, 3), 6): 2, ((2, 2), 2): 2, ((7, 0), 7): 2, ((8, 2), 8): 2, ((1, 4), 4): 1, ((5, 5), 5): 1, ((9, 2), 9): 1, ((0, 4), 6): 1, ((8, 8), 8): 1, ((7, 1), 7): 1, ((0, 7), 9): 1, ((3, 4), 3): 1, ((9, 7), 9): 1, ((9, 0), 9): 1, ((1, 8), 8): 1, ((3, 3), 3): 1, ((6, 6), 6): 1, ((8, 4), 8): 1, ((9, 1), 9): 1, ((4, 5), 4): 1, ((4, 6), 4): 1, ((0, 0), 2): 1, ((1, 7), 7): 1, ((5, 1), 5): 1, ((6, 8), 6): 1, ((7, 8), 7): 1, ((6, 7), 6): 1, ((1, 9), 9): 1, ((3, 0), 3): 1, ((0, 9), 11): 1, ((0, 6), 8): 1, ((9, 9), 9): 1, ((3, 2), 3): 1, ((6, 2), 6): 1, ((1, 6), 6): 1, ((8, 5), 8): 1, ((4, 1), 4): 1, ((1, 1), 2): 1, ((3, 5), 3): 1, ((1, 3), 3): 1, ((7, 2), 7): 1})
Symbol-06 (int -> int -> int), Samples:  38,  Counter({((6, 4), 11): 2, ((3, 2), 7): 2, ((8, 5), 13): 2, ((0, 8), 5): 2, ((9, 7), 14): 2, ((2, 1), 6): 2, ((3, 7), 7): 2, ((2, 8), 6): 1, ((0, 3), 5): 1, ((7, 6), 12): 1, ((6, 8), 11): 1, ((4, 2), 8): 1, ((5, 5), 10): 1, ((9, 4), 14): 1, ((0, 1), 5): 1, ((4, 7), 8): 1, ((8, 6), 13): 1, ((1, 4), 5): 1, ((3, 3), 7): 1, ((7, 1), 12): 1, ((3, 4), 7): 1, ((0, 4), 5): 1, ((5, 3), 10): 1, ((6, 3), 11): 1, ((1, 3), 5): 1, ((8, 4), 13): 1, ((0, 0), 5): 1, ((1, 5), 5): 1, ((7, 3), 12): 1, ((7, 4), 12): 1, ((1, 9), 5): 1})
Symbol-13 (int -> int -> int), Samples:  41,  Counter({((2, 2), 4): 4, ((7, 2), 14): 2, ((6, 2), 12): 2, ((6, 3), 12): 2, ((3, 4), 6): 2, ((6, 4), 12): 2, ((4, 7), 8): 1, ((6, 6), 12): 1, ((1, 4), 2): 1, ((9, 8), 18): 1, ((4, 6), 8): 1, ((5, 4), 10): 1, ((1, 7), 2): 1, ((1, 8), 2): 1, ((8, 4), 16): 1, ((2, 0), 4): 1, ((4, 5), 8): 1, ((1, 2), 2): 1, ((2, 4), 4): 1, ((7, 1), 14): 1, ((9, 5), 18): 1, ((3, 7), 6): 1, ((6, 1), 12): 1, ((6, 7), 12): 1, ((2, 7), 4): 1, ((8, 8), 16): 1, ((9, 6), 18): 1, ((5, 1), 10): 1, ((3, 2), 6): 1, ((3, 8), 6): 1, ((6, 5), 12): 1, ((8, 9), 16): 1, ((3, 5), 6): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 54s
------------------------------
Epoch 67/499 (max_len=3, data=2820)
Train acc: 96.71 (abduce 99.75)
Dep:  Counter({(1, -1, 1): 1709, (-1,): 1000, (2, 2, -1): 100, (-1, 0, 0): 4})
Hit samples:  2813  Ave length:  2.29
Symbols:  15 [(0, 493), (1, 74), (2, 492), (3, 294), (4, 455), (5, 490), (6, 42), (7, 467), (8, 464), (9, 462), (10, 524), (11, 485), (12, 775), (13, 42), (14, 880)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  67,  Counter({((4, 4), 4): 5, ((5, 4), 5): 4, ((2, 4), 2): 3, ((9, 4), 9): 3, ((6, 4), 6): 2, ((7, 4), 7): 2, ((9, 6), 9): 2, ((8, 4), 8): 2, ((6, 3), 6): 2, ((6, 0), 6): 2, ((5, 2), 5): 2, ((8, 2), 8): 2, ((9, 1), 9): 2, ((8, 8), 8): 1, ((6, 8), 6): 1, ((7, 1), 7): 1, ((7, 8), 7): 1, ((0, 4), 6): 1, ((3, 1), 3): 1, ((0, 0), 2): 1, ((7, 0), 7): 1, ((0, 7), 9): 1, ((1, 9), 9): 1, ((5, 5), 5): 1, ((3, 4), 3): 1, ((3, 0), 3): 1, ((1, 6), 6): 1, ((0, 6), 8): 1, ((0, 9), 11): 1, ((6, 2), 6): 1, ((2, 2), 2): 1, ((4, 5), 4): 1, ((9, 2), 9): 1, ((3, 3), 3): 1, ((1, 8), 8): 1, ((9, 7), 9): 1, ((4, 6), 4): 1, ((9, 0), 9): 1, ((9, 9), 9): 1, ((6, 6), 6): 1, ((6, 7), 6): 1, ((5, 1), 5): 1, ((1, 7), 7): 1, ((8, 3), 8): 1, ((7, 7), 7): 1, ((8, 5), 8): 1, ((3, 5), 3): 1})
Symbol-06 (int -> int -> int), Samples:  39,  Counter({((6, 4), 11): 3, ((3, 2), 7): 2, ((8, 5), 13): 2, ((0, 8), 5): 2, ((9, 7), 14): 2, ((2, 1), 6): 2, ((0, 3), 5): 1, ((4, 2), 8): 1, ((2, 8), 6): 1, ((6, 8), 11): 1, ((1, 3), 5): 1, ((5, 5), 10): 1, ((0, 1), 5): 1, ((3, 7), 7): 1, ((4, 7), 8): 1, ((3, 3), 7): 1, ((6, 3), 11): 1, ((0, 4), 5): 1, ((8, 4), 13): 1, ((7, 6), 12): 1, ((8, 6), 13): 1, ((3, 4), 7): 1, ((9, 4), 14): 1, ((7, 1), 12): 1, ((7, 9), 12): 1, ((1, 4), 5): 1, ((5, 3), 10): 1, ((7, 4), 12): 1, ((0, 9), 5): 1, ((1, 5), 5): 1, ((5, 1), 10): 1, ((1, 9), 5): 1})
Symbol-13 (int -> int -> int), Samples:  38,  Counter({((2, 2), 4): 3, ((6, 4), 12): 2, ((7, 2), 14): 2, ((6, 2), 12): 2, ((6, 3), 12): 2, ((3, 4), 6): 2, ((4, 6), 8): 1, ((6, 1), 12): 1, ((5, 4), 10): 1, ((1, 4), 2): 1, ((8, 8), 16): 1, ((4, 7), 8): 1, ((8, 4), 16): 1, ((2, 7), 4): 1, ((9, 5), 18): 1, ((1, 8), 2): 1, ((3, 2), 6): 1, ((4, 5), 8): 1, ((9, 8), 18): 1, ((6, 6), 12): 1, ((1, 2), 2): 1, ((7, 1), 14): 1, ((1, 7), 2): 1, ((2, 4), 4): 1, ((9, 6), 18): 1, ((9, 4), 18): 1, ((6, 7), 12): 1, ((3, 5), 6): 1, ((6, 5), 12): 1, ((2, 0), 4): 1, ((3, 3), 6): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 57s
------------------------------
Epoch 68/499 (max_len=3, data=2820)
Train acc: 94.01 (abduce 99.61)
Dep:  Counter({(1, -1, 1): 1707, (-1,): 1000, (2, 2, -1): 98, (-1, 0, 0): 4})
Hit samples:  2809  Ave length:  2.29
Symbols:  15 [(0, 493), (1, 72), (2, 490), (3, 295), (4, 458), (5, 489), (6, 42), (7, 460), (8, 461), (9, 457), (10, 530), (11, 485), (12, 770), (13, 45), (14, 880)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  69,  Counter({((5, 4), 5): 5, ((4, 4), 4): 4, ((9, 4), 9): 4, ((2, 4), 2): 3, ((6, 4), 6): 2, ((7, 4), 7): 2, ((6, 0), 6): 2, ((6, 3), 6): 2, ((8, 4), 8): 2, ((2, 2), 2): 2, ((9, 6), 9): 2, ((8, 2), 8): 2, ((1, 4), 4): 1, ((6, 2), 6): 1, ((1, 9), 9): 1, ((9, 9), 9): 1, ((7, 0), 7): 1, ((0, 6), 8): 1, ((1, 8), 8): 1, ((1, 6), 6): 1, ((9, 1), 9): 1, ((4, 5), 4): 1, ((0, 0), 2): 1, ((7, 1), 7): 1, ((3, 4), 3): 1, ((9, 2), 9): 1, ((8, 8), 8): 1, ((5, 5), 5): 1, ((5, 2), 5): 1, ((6, 6), 6): 1, ((6, 8), 6): 1, ((0, 7), 9): 1, ((0, 4), 6): 1, ((4, 6), 4): 1, ((9, 7), 9): 1, ((9, 0), 9): 1, ((3, 2), 3): 1, ((7, 7), 7): 1, ((7, 8), 7): 1, ((3, 3), 3): 1, ((0, 9), 11): 1, ((5, 1), 5): 1, ((3, 0), 3): 1, ((3, 1), 3): 1, ((1, 7), 7): 1, ((8, 5), 8): 1, ((1, 3), 3): 1, ((3, 8), 3): 1, ((3, 5), 3): 1})
Symbol-06 (int -> int -> int), Samples:  38,  Counter({((6, 4), 11): 3, ((3, 2), 7): 2, ((0, 4), 5): 2, ((8, 5), 13): 2, ((0, 8), 5): 2, ((9, 7), 14): 2, ((3, 7), 7): 2, ((4, 2), 8): 1, ((3, 4), 7): 1, ((2, 8), 6): 1, ((9, 4), 14): 1, ((0, 1), 5): 1, ((5, 5), 10): 1, ((0, 3), 5): 1, ((3, 3), 7): 1, ((1, 3), 5): 1, ((5, 3), 10): 1, ((7, 6), 12): 1, ((6, 3), 11): 1, ((8, 4), 13): 1, ((0, 0), 5): 1, ((6, 8), 11): 1, ((1, 4), 5): 1, ((2, 1), 6): 1, ((7, 1), 12): 1, ((8, 6), 13): 1, ((4, 7), 8): 1, ((1, 9), 5): 1, ((7, 9), 12): 1, ((7, 4), 12): 1})
Symbol-13 (int -> int -> int), Samples:  41,  Counter({((2, 2), 4): 3, ((6, 2), 12): 2, ((7, 2), 14): 2, ((3, 4), 6): 2, ((6, 3), 12): 2, ((6, 4), 12): 2, ((6, 1), 12): 1, ((1, 4), 2): 1, ((9, 5), 18): 1, ((8, 4), 16): 1, ((4, 6), 8): 1, ((9, 8), 18): 1, ((4, 7), 8): 1, ((8, 8), 16): 1, ((1, 8), 2): 1, ((0, 8), 0): 1, ((2, 7), 4): 1, ((3, 7), 6): 1, ((1, 2), 2): 1, ((3, 2), 6): 1, ((4, 5), 8): 1, ((5, 4), 10): 1, ((1, 7), 2): 1, ((2, 4), 4): 1, ((8, 9), 16): 1, ((7, 1), 14): 1, ((6, 7), 12): 1, ((5, 1), 10): 1, ((2, 0), 4): 1, ((9, 6), 18): 1, ((3, 8), 6): 1, ((9, 4), 18): 1, ((3, 5), 6): 1, ((6, 5), 12): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.99
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 55s
------------------------------
Epoch 69/499 (max_len=3, data=2820)
Train acc: 96.45 (abduce 99.75)
Dep:  Counter({(1, -1, 1): 1715, (-1,): 1000, (2, 2, -1): 93, (-1, 0, 0): 5})
Hit samples:  2813  Ave length:  2.29
Symbols:  15 [(0, 492), (1, 71), (2, 493), (3, 295), (4, 455), (5, 490), (6, 42), (7, 466), (8, 462), (9, 462), (10, 525), (11, 486), (12, 781), (13, 43), (14, 876)]
Learn perception with 2806 samples, take 274 sec.
Learn syntax with 2806 samples, take 2 sec.
result accuracy by digit:
0 ( 0%) 90.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 80.00
4 ( 0%) 90.00
5 ( 0%) 80.00
6 ( 0%) 90.00
7 ( 0%) 100.00
8 ( 0%) 90.00
9 ( 0%) 100.00
val (Perception Acc=9.55, Syntax Acc=43.23, Result Acc=6.15)
Epoch time: 4m 42s
------------------------------
Epoch 70/499 (max_len=3, data=2820)
Train acc: 97.07 (abduce 99.75)
Dep:  Counter({(1, -1, 1): 1725, (-1,): 1000, (2, 2, -1): 85, (-1, 0, 0): 3})
Hit samples:  2813  Ave length:  2.29
Symbols:  15 [(0, 495), (1, 68), (2, 494), (3, 291), (4, 457), (5, 491), (6, 41), (7, 467), (8, 462), (9, 465), (10, 517), (11, 487), (12, 781), (13, 41), (14, 882)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  66,  Counter({((4, 4), 4): 4, ((5, 4), 5): 4, ((9, 4), 9): 3, ((2, 4), 2): 3, ((5, 2), 5): 2, ((8, 4), 8): 2, ((2, 2), 2): 2, ((6, 3), 6): 2, ((7, 4), 7): 2, ((6, 4), 6): 2, ((8, 2), 8): 2, ((6, 2), 6): 2, ((9, 6), 9): 2, ((8, 8), 8): 1, ((0, 4), 6): 1, ((0, 0), 2): 1, ((1, 6), 6): 1, ((1, 9), 9): 1, ((6, 0), 6): 1, ((6, 8), 6): 1, ((0, 9), 11): 1, ((5, 5), 5): 1, ((7, 8), 7): 1, ((3, 1), 3): 1, ((1, 8), 8): 1, ((6, 6), 6): 1, ((3, 4), 3): 1, ((0, 6), 8): 1, ((7, 0), 7): 1, ((9, 7), 9): 1, ((9, 1), 9): 1, ((1, 7), 7): 1, ((9, 0), 9): 1, ((9, 9), 9): 1, ((1, 4), 4): 1, ((5, 1), 5): 1, ((3, 3), 3): 1, ((4, 5), 4): 1, ((6, 7), 6): 1, ((7, 1), 7): 1, ((3, 2), 3): 1, ((7, 2), 7): 1, ((3, 0), 3): 1, ((7, 7), 7): 1, ((4, 6), 4): 1, ((9, 2), 9): 1, ((3, 5), 3): 1})
Symbol-06 (int -> int -> int), Samples:  39,  Counter({((6, 4), 11): 3, ((0, 4), 5): 3, ((3, 2), 7): 2, ((8, 5), 13): 2, ((9, 7), 14): 2, ((3, 7), 7): 2, ((5, 5), 10): 1, ((5, 3), 10): 1, ((8, 6), 13): 1, ((6, 3), 11): 1, ((1, 3), 5): 1, ((7, 1), 12): 1, ((0, 1), 5): 1, ((2, 8), 6): 1, ((1, 4), 5): 1, ((4, 2), 8): 1, ((4, 7), 8): 1, ((0, 3), 5): 1, ((0, 0), 5): 1, ((7, 6), 12): 1, ((6, 8), 11): 1, ((3, 4), 7): 1, ((3, 3), 7): 1, ((8, 4), 13): 1, ((9, 4), 14): 1, ((0, 8), 5): 1, ((2, 1), 6): 1, ((7, 9), 12): 1, ((1, 9), 5): 1, ((7, 4), 12): 1, ((2, 5), 6): 1})
Symbol-13 (int -> int -> int), Samples:  39,  Counter({((2, 2), 4): 3, ((7, 2), 14): 2, ((3, 4), 6): 2, ((6, 3), 12): 2, ((6, 2), 12): 2, ((6, 4), 12): 2, ((4, 6), 8): 1, ((5, 4), 10): 1, ((9, 8), 18): 1, ((4, 5), 8): 1, ((9, 5), 18): 1, ((7, 1), 14): 1, ((2, 4), 4): 1, ((6, 6), 12): 1, ((1, 8), 2): 1, ((3, 7), 6): 1, ((6, 1), 12): 1, ((8, 8), 16): 1, ((2, 7), 4): 1, ((0, 8), 0): 1, ((1, 4), 2): 1, ((1, 7), 2): 1, ((9, 6), 18): 1, ((3, 2), 6): 1, ((7, 7), 14): 1, ((3, 5), 6): 1, ((3, 8), 6): 1, ((8, 9), 16): 1, ((4, 7), 8): 1, ((6, 7), 12): 1, ((5, 1), 10): 1, ((6, 5), 12): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 55s
------------------------------
Epoch 71/499 (max_len=3, data=2820)
Train acc: 96.45 (abduce 99.75)
Dep:  Counter({(1, -1, 1): 1721, (-1,): 1000, (2, 2, -1): 88, (-1, 0, 0): 4})
Hit samples:  2813  Ave length:  2.29
Symbols:  15 [(0, 491), (1, 70), (2, 492), (3, 294), (4, 459), (5, 493), (6, 42), (7, 466), (8, 463), (9, 462), (10, 523), (11, 483), (12, 780), (13, 38), (14, 883)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  68,  Counter({((4, 4), 4): 4, ((5, 4), 5): 4, ((9, 4), 9): 4, ((2, 4), 2): 3, ((8, 4), 8): 2, ((6, 3), 6): 2, ((7, 4), 7): 2, ((9, 6), 9): 2, ((6, 4), 6): 2, ((5, 2), 5): 2, ((2, 2), 2): 2, ((6, 0), 6): 2, ((0, 4), 6): 2, ((1, 4), 4): 1, ((7, 0), 7): 1, ((4, 6), 4): 1, ((1, 8), 8): 1, ((7, 1), 7): 1, ((6, 2), 6): 1, ((9, 1), 9): 1, ((6, 6), 6): 1, ((1, 6), 6): 1, ((8, 8), 8): 1, ((3, 0), 3): 1, ((3, 1), 3): 1, ((9, 9), 9): 1, ((4, 5), 4): 1, ((6, 8), 6): 1, ((0, 0), 2): 1, ((3, 2), 3): 1, ((5, 1), 5): 1, ((7, 7), 7): 1, ((9, 7), 9): 1, ((1, 9), 9): 1, ((8, 2), 8): 1, ((0, 7), 9): 1, ((6, 7), 6): 1, ((9, 2), 9): 1, ((7, 8), 7): 1, ((9, 0), 9): 1, ((1, 7), 7): 1, ((0, 9), 11): 1, ((3, 4), 3): 1, ((5, 5), 5): 1, ((3, 3), 3): 1, ((7, 2), 7): 1, ((0, 6), 8): 1, ((3, 5), 3): 1})
Symbol-06 (int -> int -> int), Samples:  38,  Counter({((0, 4), 5): 3, ((6, 4), 11): 3, ((3, 2), 7): 2, ((8, 5), 13): 2, ((3, 7), 7): 2, ((1, 4), 5): 1, ((6, 8), 11): 1, ((0, 8), 5): 1, ((5, 5), 10): 1, ((2, 8), 6): 1, ((6, 3), 11): 1, ((4, 2), 8): 1, ((0, 0), 5): 1, ((5, 3), 10): 1, ((3, 3), 7): 1, ((4, 7), 8): 1, ((9, 4), 14): 1, ((0, 3), 5): 1, ((0, 1), 5): 1, ((8, 6), 13): 1, ((1, 3), 5): 1, ((7, 9), 12): 1, ((8, 4), 13): 1, ((3, 4), 7): 1, ((7, 4), 12): 1, ((2, 1), 6): 1, ((2, 3), 6): 1, ((1, 9), 5): 1, ((9, 7), 14): 1, ((7, 8), 12): 1, ((2, 5), 6): 1})
Symbol-13 (int -> int -> int), Samples:  38,  Counter({((2, 2), 4): 4, ((6, 2), 12): 2, ((7, 2), 14): 2, ((6, 3), 12): 2, ((3, 4), 6): 2, ((6, 4), 12): 2, ((4, 7), 8): 1, ((3, 7), 6): 1, ((0, 8), 0): 1, ((5, 4), 10): 1, ((7, 1), 14): 1, ((1, 7), 2): 1, ((2, 7), 4): 1, ((2, 0), 4): 1, ((9, 5), 18): 1, ((9, 8), 18): 1, ((6, 1), 12): 1, ((1, 8), 2): 1, ((8, 8), 16): 1, ((2, 4), 4): 1, ((1, 4), 2): 1, ((4, 6), 8): 1, ((1, 2), 2): 1, ((3, 8), 6): 1, ((4, 5), 8): 1, ((5, 1), 10): 1, ((6, 7), 12): 1, ((9, 6), 18): 1, ((7, 9), 14): 1, ((3, 5), 6): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 54s
------------------------------
Epoch 72/499 (max_len=3, data=2820)
Train acc: 96.74 (abduce 99.72)
Dep:  Counter({(1, -1, 1): 1720, (-1,): 1000, (2, 2, -1): 88, (-1, 0, 0): 4})
Hit samples:  2812  Ave length:  2.29
Symbols:  15 [(0, 493), (1, 70), (2, 492), (3, 296), (4, 455), (5, 491), (6, 43), (7, 469), (8, 464), (9, 461), (10, 517), (11, 486), (12, 779), (13, 42), (14, 878)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  66,  Counter({((5, 4), 5): 4, ((4, 4), 4): 3, ((2, 4), 2): 3, ((9, 4), 9): 3, ((9, 6), 9): 2, ((6, 0), 6): 2, ((6, 4), 6): 2, ((5, 2), 5): 2, ((8, 4), 8): 2, ((2, 2), 2): 2, ((7, 4), 7): 2, ((0, 4), 6): 2, ((6, 3), 6): 2, ((8, 2), 8): 2, ((5, 1), 5): 2, ((7, 8), 7): 1, ((1, 9), 9): 1, ((0, 7), 9): 1, ((7, 0), 7): 1, ((5, 5), 5): 1, ((6, 6), 6): 1, ((9, 1), 9): 1, ((6, 8), 6): 1, ((9, 9), 9): 1, ((9, 7), 9): 1, ((8, 8), 8): 1, ((3, 2), 3): 1, ((0, 0), 2): 1, ((1, 4), 4): 1, ((6, 2), 6): 1, ((3, 3), 3): 1, ((3, 1), 3): 1, ((6, 7), 6): 1, ((0, 6), 8): 1, ((3, 4), 3): 1, ((1, 8), 8): 1, ((0, 9), 11): 1, ((1, 6), 6): 1, ((9, 0), 9): 1, ((9, 2), 9): 1, ((3, 0), 3): 1, ((1, 7), 7): 1, ((7, 1), 7): 1, ((4, 5), 4): 1, ((3, 5), 3): 1, ((7, 2), 7): 1})
Symbol-06 (int -> int -> int), Samples:  40,  Counter({((6, 4), 11): 3, ((0, 4), 5): 2, ((8, 5), 13): 2, ((3, 2), 7): 2, ((3, 7), 7): 2, ((9, 7), 14): 2, ((0, 8), 5): 2, ((6, 8), 11): 1, ((4, 2), 8): 1, ((8, 6), 13): 1, ((3, 4), 7): 1, ((8, 4), 13): 1, ((2, 8), 6): 1, ((9, 4), 14): 1, ((1, 4), 5): 1, ((5, 5), 10): 1, ((0, 0), 5): 1, ((7, 1), 12): 1, ((6, 3), 11): 1, ((7, 6), 12): 1, ((7, 9), 12): 1, ((3, 3), 7): 1, ((1, 3), 5): 1, ((0, 3), 5): 1, ((0, 1), 5): 1, ((5, 3), 10): 1, ((1, 9), 5): 1, ((2, 1), 6): 1, ((7, 4), 12): 1, ((4, 7), 8): 1, ((2, 5), 6): 1, ((1, 5), 5): 1})
Symbol-13 (int -> int -> int), Samples:  41,  Counter({((2, 2), 4): 3, ((7, 2), 14): 2, ((3, 4), 6): 2, ((6, 2), 12): 2, ((6, 3), 12): 2, ((6, 4), 12): 2, ((6, 1), 12): 1, ((9, 8), 18): 1, ((6, 6), 12): 1, ((9, 5), 18): 1, ((4, 7), 8): 1, ((1, 4), 2): 1, ((4, 6), 8): 1, ((2, 4), 4): 1, ((0, 8), 0): 1, ((8, 8), 16): 1, ((3, 7), 6): 1, ((2, 7), 4): 1, ((1, 7), 2): 1, ((1, 8), 2): 1, ((7, 1), 14): 1, ((3, 2), 6): 1, ((4, 5), 8): 1, ((6, 7), 12): 1, ((5, 1), 10): 1, ((1, 2), 2): 1, ((2, 0), 4): 1, ((5, 4), 10): 1, ((3, 8), 6): 1, ((2, 5), 4): 1, ((3, 5), 6): 1, ((9, 6), 18): 1, ((8, 9), 16): 1, ((6, 5), 12): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 73/499 (max_len=3, data=2820)
Train acc: 96.68 (abduce 99.68)
Dep:  Counter({(1, -1, 1): 1723, (-1,): 1000, (2, 2, -1): 83, (-1, 0, 0): 5})
Hit samples:  2811  Ave length:  2.29
Symbols:  15 [(0, 494), (1, 67), (2, 495), (3, 293), (4, 456), (5, 490), (6, 40), (7, 466), (8, 464), (9, 460), (10, 518), (11, 486), (12, 785), (13, 40), (14, 879)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  66,  Counter({((9, 4), 9): 4, ((5, 4), 5): 4, ((4, 4), 4): 4, ((2, 4), 2): 3, ((5, 2), 5): 2, ((6, 4), 6): 2, ((9, 6), 9): 2, ((6, 3), 6): 2, ((2, 2), 2): 2, ((7, 4), 7): 2, ((8, 2), 8): 2, ((9, 0), 9): 1, ((7, 0), 7): 1, ((8, 4), 8): 1, ((1, 9), 9): 1, ((1, 6), 6): 1, ((9, 7), 9): 1, ((9, 2), 9): 1, ((1, 7), 7): 1, ((0, 4), 6): 1, ((3, 3), 3): 1, ((3, 2), 3): 1, ((6, 0), 6): 1, ((1, 4), 4): 1, ((0, 9), 11): 1, ((8, 8), 8): 1, ((3, 1), 3): 1, ((4, 5), 4): 1, ((7, 1), 7): 1, ((9, 1), 9): 1, ((0, 6), 8): 1, ((5, 5), 5): 1, ((6, 8), 6): 1, ((6, 6), 6): 1, ((3, 0), 3): 1, ((4, 6), 4): 1, ((0, 7), 9): 1, ((6, 7), 6): 1, ((0, 0), 2): 1, ((7, 8), 7): 1, ((3, 4), 3): 1, ((6, 2), 6): 1, ((9, 9), 9): 1, ((5, 1), 5): 1, ((7, 7), 7): 1, ((7, 2), 7): 1, ((3, 5), 3): 1, ((6, 1), 6): 1})
Symbol-06 (int -> int -> int), Samples:  37,  Counter({((0, 4), 5): 3, ((8, 5), 13): 2, ((3, 2), 7): 2, ((6, 4), 11): 2, ((9, 7), 14): 2, ((3, 7), 7): 2, ((7, 9), 12): 1, ((1, 3), 5): 1, ((6, 8), 11): 1, ((0, 3), 5): 1, ((0, 1), 5): 1, ((1, 4), 5): 1, ((2, 8), 6): 1, ((4, 7), 8): 1, ((9, 4), 14): 1, ((0, 8), 5): 1, ((8, 6), 13): 1, ((0, 0), 5): 1, ((5, 5), 10): 1, ((3, 4), 7): 1, ((7, 6), 12): 1, ((4, 2), 8): 1, ((5, 3), 10): 1, ((7, 1), 12): 1, ((3, 3), 7): 1, ((6, 3), 11): 1, ((8, 4), 13): 1, ((2, 1), 6): 1, ((2, 5), 6): 1, ((1, 9), 5): 1})
Symbol-13 (int -> int -> int), Samples:  39,  Counter({((2, 2), 4): 3, ((6, 3), 12): 2, ((7, 2), 14): 2, ((6, 2), 12): 2, ((3, 4), 6): 2, ((4, 6), 8): 1, ((6, 1), 12): 1, ((1, 4), 2): 1, ((5, 4), 10): 1, ((3, 7), 6): 1, ((9, 8), 18): 1, ((2, 4), 4): 1, ((4, 7), 8): 1, ((9, 5), 18): 1, ((4, 5), 8): 1, ((0, 8), 0): 1, ((6, 6), 12): 1, ((2, 7), 4): 1, ((1, 8), 2): 1, ((7, 7), 14): 1, ((8, 8), 16): 1, ((6, 4), 12): 1, ((2, 0), 4): 1, ((1, 7), 2): 1, ((7, 1), 14): 1, ((1, 2), 2): 1, ((9, 6), 18): 1, ((6, 7), 12): 1, ((8, 9), 16): 1, ((5, 1), 10): 1, ((3, 8), 6): 1, ((3, 5), 6): 1, ((6, 5), 12): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 54s
------------------------------
Epoch 74/499 (max_len=3, data=2820)
Train acc: 94.86 (abduce 99.72)
Dep:  Counter({(1, -1, 1): 1718, (-1,): 1000, (2, 2, -1): 89, (-1, 0, 0): 5})
Hit samples:  2812  Ave length:  2.29
Symbols:  15 [(0, 494), (1, 71), (2, 494), (3, 295), (4, 456), (5, 489), (6, 41), (7, 466), (8, 461), (9, 461), (10, 522), (11, 486), (12, 777), (13, 44), (14, 879)]
Learn perception with 2807 samples, take 279 sec.
Learn syntax with 2807 samples, take 2 sec.
result accuracy by digit:
0 ( 0%) 90.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 80.00
4 ( 0%) 90.00
5 ( 0%) 80.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 90.00
9 ( 0%) 80.00
val (Perception Acc=9.42, Syntax Acc=43.19, Result Acc=6.18)
Epoch time: 4m 48s
------------------------------
Epoch 75/499 (max_len=3, data=2820)
Train acc: 96.97 (abduce 99.68)
Dep:  Counter({(1, -1, 1): 1723, (-1,): 1000, (2, 2, -1): 83, (-1, 0, 0): 5})
Hit samples:  2811  Ave length:  2.29
Symbols:  15 [(0, 495), (1, 67), (2, 493), (3, 297), (4, 454), (5, 491), (6, 40), (7, 467), (8, 461), (9, 462), (10, 518), (11, 484), (12, 783), (13, 41), (14, 880)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  62,  Counter({((5, 4), 5): 4, ((4, 4), 4): 3, ((2, 4), 2): 3, ((9, 4), 9): 3, ((9, 6), 9): 2, ((2, 2), 2): 2, ((5, 2), 5): 2, ((6, 0), 6): 2, ((7, 4), 7): 2, ((6, 3), 6): 2, ((8, 4), 8): 2, ((8, 2), 8): 2, ((5, 5), 5): 1, ((8, 8), 8): 1, ((7, 8), 7): 1, ((1, 6), 6): 1, ((4, 6), 4): 1, ((6, 8), 6): 1, ((0, 4), 6): 1, ((0, 9), 11): 1, ((6, 4), 6): 1, ((4, 5), 4): 1, ((5, 1), 5): 1, ((3, 3), 3): 1, ((6, 7), 6): 1, ((9, 0), 9): 1, ((9, 2), 9): 1, ((7, 7), 7): 1, ((3, 4), 3): 1, ((1, 8), 8): 1, ((3, 1), 3): 1, ((9, 1), 9): 1, ((3, 0), 3): 1, ((6, 6), 6): 1, ((1, 4), 4): 1, ((7, 0), 7): 1, ((1, 7), 7): 1, ((0, 7), 9): 1, ((9, 9), 9): 1, ((6, 2), 6): 1, ((3, 2), 3): 1, ((0, 0), 2): 1, ((1, 9), 9): 1, ((3, 5), 3): 1, ((0, 6), 8): 1})
Symbol-06 (int -> int -> int), Samples:  39,  Counter({((6, 4), 11): 3, ((3, 2), 7): 2, ((0, 4), 5): 2, ((8, 5), 13): 2, ((0, 8), 5): 2, ((3, 7), 7): 2, ((5, 3), 10): 1, ((6, 3), 11): 1, ((4, 2), 8): 1, ((5, 5), 10): 1, ((2, 8), 6): 1, ((6, 8), 11): 1, ((8, 6), 13): 1, ((9, 4), 14): 1, ((8, 4), 13): 1, ((9, 7), 14): 1, ((7, 9), 12): 1, ((4, 7), 8): 1, ((0, 0), 5): 1, ((0, 3), 5): 1, ((3, 4), 7): 1, ((7, 6), 12): 1, ((0, 1), 5): 1, ((1, 4), 5): 1, ((1, 3), 5): 1, ((5, 2), 10): 1, ((1, 9), 5): 1, ((2, 5), 6): 1, ((7, 4), 12): 1, ((2, 1), 6): 1, ((3, 3), 7): 1, ((7, 1), 12): 1})
Symbol-13 (int -> int -> int), Samples:  39,  Counter({((7, 2), 14): 2, ((2, 2), 4): 2, ((6, 2), 12): 2, ((6, 3), 12): 2, ((6, 4), 12): 2, ((3, 4), 6): 1, ((6, 6), 12): 1, ((2, 7), 4): 1, ((1, 8), 2): 1, ((8, 8), 16): 1, ((6, 1), 12): 1, ((4, 7), 8): 1, ((1, 4), 2): 1, ((1, 7), 2): 1, ((9, 8), 18): 1, ((3, 7), 6): 1, ((2, 4), 4): 1, ((2, 0), 4): 1, ((3, 2), 6): 1, ((0, 8), 0): 1, ((5, 4), 10): 1, ((4, 6), 8): 1, ((7, 7), 14): 1, ((9, 5), 18): 1, ((7, 1), 14): 1, ((3, 8), 6): 1, ((1, 2), 2): 1, ((4, 5), 8): 1, ((9, 6), 18): 1, ((5, 1), 10): 1, ((6, 7), 12): 1, ((3, 5), 6): 1, ((8, 9), 16): 1, ((6, 5), 12): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 55s
------------------------------
Epoch 76/499 (max_len=3, data=2820)
Train acc: 97.01 (abduce 99.72)
Dep:  Counter({(1, -1, 1): 1724, (-1,): 1000, (2, 2, -1): 84, (-1, 0, 0): 4})
Hit samples:  2812  Ave length:  2.29
Symbols:  15 [(0, 491), (1, 68), (2, 492), (3, 296), (4, 456), (5, 492), (6, 42), (7, 469), (8, 462), (9, 460), (10, 520), (11, 486), (12, 778), (13, 41), (14, 883)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  66,  Counter({((5, 4), 5): 4, ((9, 4), 9): 4, ((4, 4), 4): 4, ((2, 4), 2): 3, ((5, 2), 5): 2, ((9, 6), 9): 2, ((6, 3), 6): 2, ((2, 2), 2): 2, ((8, 4), 8): 2, ((6, 0), 6): 2, ((6, 4), 6): 2, ((7, 4), 7): 2, ((8, 2), 8): 2, ((7, 8), 7): 1, ((6, 2), 6): 1, ((1, 6), 6): 1, ((1, 8), 8): 1, ((4, 6), 4): 1, ((3, 4), 3): 1, ((5, 5), 5): 1, ((0, 7), 9): 1, ((9, 7), 9): 1, ((1, 4), 4): 1, ((4, 5), 4): 1, ((1, 7), 7): 1, ((6, 8), 6): 1, ((3, 2), 3): 1, ((3, 0), 3): 1, ((6, 7), 6): 1, ((1, 9), 9): 1, ((0, 0), 2): 1, ((9, 9), 9): 1, ((6, 6), 6): 1, ((0, 9), 11): 1, ((9, 1), 9): 1, ((0, 6), 8): 1, ((3, 1), 3): 1, ((7, 7), 7): 1, ((9, 0), 9): 1, ((9, 2), 9): 1, ((8, 8), 8): 1, ((0, 4), 6): 1, ((7, 1), 7): 1, ((7, 0), 7): 1, ((3, 5), 3): 1, ((5, 1), 5): 1})
Symbol-06 (int -> int -> int), Samples:  38,  Counter({((6, 4), 11): 3, ((3, 2), 7): 2, ((8, 5), 13): 2, ((0, 8), 5): 2, ((9, 7), 14): 2, ((1, 4), 5): 2, ((3, 7), 7): 2, ((8, 6), 13): 1, ((9, 4), 14): 1, ((2, 8), 6): 1, ((6, 8), 11): 1, ((3, 4), 7): 1, ((7, 9), 12): 1, ((4, 2), 8): 1, ((0, 4), 5): 1, ((4, 7), 8): 1, ((0, 3), 5): 1, ((0, 0), 5): 1, ((8, 4), 13): 1, ((1, 3), 5): 1, ((7, 6), 12): 1, ((6, 3), 11): 1, ((5, 5), 10): 1, ((2, 5), 6): 1, ((0, 1), 5): 1, ((5, 3), 10): 1, ((1, 9), 5): 1, ((7, 4), 12): 1, ((2, 1), 6): 1, ((3, 3), 7): 1})
Symbol-13 (int -> int -> int), Samples:  38,  Counter({((2, 2), 4): 3, ((7, 2), 14): 2, ((6, 2), 12): 2, ((3, 4), 6): 2, ((6, 3), 12): 2, ((6, 4), 12): 1, ((9, 8), 18): 1, ((1, 4), 2): 1, ((2, 7), 4): 1, ((4, 7), 8): 1, ((2, 4), 4): 1, ((8, 8), 16): 1, ((7, 7), 14): 1, ((6, 1), 12): 1, ((4, 6), 8): 1, ((4, 5), 8): 1, ((0, 8), 0): 1, ((1, 7), 2): 1, ((1, 8), 2): 1, ((2, 0), 4): 1, ((6, 6), 12): 1, ((5, 4), 10): 1, ((9, 5), 18): 1, ((7, 1), 14): 1, ((1, 2), 2): 1, ((3, 8), 6): 1, ((6, 7), 12): 1, ((8, 9), 16): 1, ((9, 6), 18): 1, ((5, 1), 10): 1, ((3, 5), 6): 1, ((6, 5), 12): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 55s
------------------------------
Epoch 77/499 (max_len=3, data=2820)
Train acc: 97.40 (abduce 99.72)
Dep:  Counter({(1, -1, 1): 1719, (-1,): 1000, (2, 2, -1): 87, (-1, 0, 0): 6})
Hit samples:  2812  Ave length:  2.29
Symbols:  15 [(0, 493), (1, 75), (2, 492), (3, 292), (4, 455), (5, 490), (6, 38), (7, 467), (8, 463), (9, 464), (10, 523), (11, 485), (12, 778), (13, 43), (14, 878)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  69,  Counter({((5, 4), 5): 4, ((9, 4), 9): 4, ((4, 4), 4): 3, ((2, 4), 2): 3, ((6, 3), 6): 2, ((6, 4), 6): 2, ((2, 2), 2): 2, ((5, 2), 5): 2, ((6, 0), 6): 2, ((8, 4), 8): 2, ((9, 6), 9): 2, ((7, 4), 7): 2, ((8, 2), 8): 2, ((0, 4), 6): 2, ((6, 8), 6): 1, ((9, 0), 9): 1, ((0, 6), 8): 1, ((1, 8), 8): 1, ((1, 6), 6): 1, ((4, 5), 4): 1, ((8, 8), 8): 1, ((5, 5), 5): 1, ((7, 0), 7): 1, ((6, 6), 6): 1, ((7, 1), 7): 1, ((7, 8), 7): 1, ((0, 0), 2): 1, ((6, 7), 6): 1, ((0, 9), 11): 1, ((9, 1), 9): 1, ((3, 2), 3): 1, ((9, 7), 9): 1, ((4, 6), 4): 1, ((9, 9), 9): 1, ((5, 1), 5): 1, ((3, 1), 3): 1, ((3, 0), 3): 1, ((1, 7), 7): 1, ((1, 9), 9): 1, ((9, 2), 9): 1, ((7, 7), 7): 1, ((1, 4), 4): 1, ((3, 3), 3): 1, ((3, 4), 3): 1, ((6, 2), 6): 1, ((0, 7), 9): 1, ((6, 1), 6): 1, ((3, 5), 3): 1, ((7, 5), 7): 1})
Symbol-06 (int -> int -> int), Samples:  38,  Counter({((6, 4), 11): 3, ((8, 5), 13): 2, ((3, 2), 7): 2, ((0, 4), 5): 2, ((0, 8), 5): 2, ((9, 7), 14): 2, ((3, 7), 7): 2, ((6, 8), 11): 1, ((2, 8), 6): 1, ((0, 0), 5): 1, ((5, 3), 10): 1, ((7, 6), 12): 1, ((8, 4), 13): 1, ((4, 2), 8): 1, ((9, 4), 14): 1, ((3, 3), 7): 1, ((7, 1), 12): 1, ((3, 4), 7): 1, ((1, 3), 5): 1, ((7, 9), 12): 1, ((4, 7), 8): 1, ((8, 6), 13): 1, ((0, 1), 5): 1, ((1, 4), 5): 1, ((0, 3), 5): 1, ((2, 5), 6): 1, ((5, 5), 10): 1, ((2, 1), 6): 1, ((1, 9), 5): 1, ((6, 2), 11): 1})
Symbol-13 (int -> int -> int), Samples:  39,  Counter({((7, 2), 14): 2, ((6, 2), 12): 2, ((3, 4), 6): 2, ((6, 3), 12): 2, ((2, 2), 4): 2, ((6, 4), 12): 2, ((1, 4), 2): 1, ((4, 6), 8): 1, ((2, 4), 4): 1, ((9, 5), 18): 1, ((8, 8), 16): 1, ((3, 2), 6): 1, ((6, 1), 12): 1, ((9, 8), 18): 1, ((6, 6), 12): 1, ((3, 7), 6): 1, ((2, 7), 4): 1, ((0, 8), 0): 1, ((1, 8), 2): 1, ((7, 1), 14): 1, ((4, 5), 8): 1, ((1, 7), 2): 1, ((7, 7), 14): 1, ((2, 0), 4): 1, ((5, 4), 10): 1, ((4, 7), 8): 1, ((8, 9), 16): 1, ((6, 7), 12): 1, ((9, 6), 18): 1, ((3, 8), 6): 1, ((5, 1), 10): 1, ((6, 5), 12): 1, ((3, 5), 6): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 55s
------------------------------
Epoch 78/499 (max_len=3, data=2820)
Train acc: 97.43 (abduce 99.82)
Dep:  Counter({(1, -1, 1): 1728, (-1,): 1000, (2, 2, -1): 82, (-1, 0, 0): 5})
Hit samples:  2815  Ave length:  2.29
Symbols:  15 [(0, 493), (1, 70), (2, 493), (3, 295), (4, 458), (5, 491), (6, 41), (7, 469), (8, 465), (9, 462), (10, 517), (11, 487), (12, 783), (13, 42), (14, 879)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  66,  Counter({((5, 4), 5): 4, ((9, 4), 9): 4, ((4, 4), 4): 3, ((9, 6), 9): 2, ((6, 0), 6): 2, ((6, 3), 6): 2, ((7, 4), 7): 2, ((5, 2), 5): 2, ((6, 4), 6): 2, ((8, 4), 8): 2, ((2, 4), 2): 2, ((2, 2), 2): 2, ((8, 2), 8): 2, ((0, 4), 6): 2, ((6, 8), 6): 1, ((8, 8), 8): 1, ((6, 6), 6): 1, ((6, 2), 6): 1, ((1, 9), 9): 1, ((5, 5), 5): 1, ((4, 5), 4): 1, ((9, 7), 9): 1, ((0, 9), 11): 1, ((6, 7), 6): 1, ((0, 0), 2): 1, ((1, 8), 8): 1, ((3, 4), 3): 1, ((3, 3), 3): 1, ((1, 7), 7): 1, ((7, 0), 7): 1, ((4, 6), 4): 1, ((7, 8), 7): 1, ((0, 7), 9): 1, ((7, 1), 7): 1, ((7, 7), 7): 1, ((1, 4), 4): 1, ((5, 1), 5): 1, ((9, 9), 9): 1, ((0, 6), 8): 1, ((9, 2), 9): 1, ((3, 1), 3): 1, ((3, 0), 3): 1, ((9, 0), 9): 1, ((3, 2), 3): 1, ((1, 6), 6): 1, ((3, 5), 3): 1, ((9, 1), 9): 1})
Symbol-06 (int -> int -> int), Samples:  40,  Counter({((6, 4), 11): 3, ((0, 8), 5): 2, ((8, 5), 13): 2, ((3, 2), 7): 2, ((0, 4), 5): 2, ((9, 7), 14): 2, ((1, 4), 5): 2, ((3, 7), 7): 2, ((0, 3), 5): 2, ((7, 9), 12): 1, ((2, 8), 6): 1, ((4, 7), 8): 1, ((8, 4), 13): 1, ((5, 5), 10): 1, ((7, 1), 12): 1, ((7, 6), 12): 1, ((0, 1), 5): 1, ((6, 8), 11): 1, ((9, 4), 14): 1, ((4, 2), 8): 1, ((2, 5), 6): 1, ((6, 3), 11): 1, ((1, 3), 5): 1, ((5, 3), 10): 1, ((3, 4), 7): 1, ((8, 6), 13): 1, ((3, 3), 7): 1, ((2, 1), 6): 1, ((1, 9), 5): 1, ((5, 2), 10): 1})
Symbol-13 (int -> int -> int), Samples:  40,  Counter({((7, 2), 14): 2, ((6, 3), 12): 2, ((6, 2), 12): 2, ((3, 4), 6): 2, ((2, 2), 4): 2, ((6, 4), 12): 2, ((3, 7), 6): 1, ((4, 7), 8): 1, ((1, 7), 2): 1, ((6, 1), 12): 1, ((9, 5), 18): 1, ((5, 4), 10): 1, ((2, 4), 4): 1, ((4, 6), 8): 1, ((6, 6), 12): 1, ((2, 7), 4): 1, ((8, 8), 16): 1, ((0, 8), 0): 1, ((7, 7), 14): 1, ((1, 8), 2): 1, ((3, 2), 6): 1, ((1, 2), 2): 1, ((1, 4), 2): 1, ((4, 5), 8): 1, ((9, 8), 18): 1, ((7, 1), 14): 1, ((3, 5), 6): 1, ((5, 1), 10): 1, ((6, 7), 12): 1, ((2, 0), 4): 1, ((9, 6), 18): 1, ((8, 9), 16): 1, ((3, 8), 6): 1, ((6, 5), 12): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 54s
------------------------------
Epoch 79/499 (max_len=3, data=2820)
Train acc: 97.23 (abduce 99.72)
Dep:  Counter({(1, -1, 1): 1720, (-1,): 1000, (2, 2, -1): 88, (-1, 0, 0): 4})
Hit samples:  2812  Ave length:  2.29
Symbols:  15 [(0, 492), (1, 71), (2, 494), (3, 294), (4, 459), (5, 493), (6, 41), (7, 465), (8, 461), (9, 459), (10, 521), (11, 486), (12, 780), (13, 43), (14, 877)]
Learn perception with 2806 samples, take 289 sec.
Learn syntax with 2806 samples, take 2 sec.
result accuracy by digit:
0 ( 0%) 90.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 80.00
4 ( 0%) 90.00
5 ( 0%) 80.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 90.00
9 ( 0%) 100.00
val (Perception Acc=9.40, Syntax Acc=43.37, Result Acc=6.23)
Epoch time: 4m 57s
------------------------------
Epoch 80/499 (max_len=3, data=2820)
Train acc: 97.49 (abduce 99.68)
Dep:  Counter({(1, -1, 1): 1725, (-1,): 1000, (2, 2, -1): 82, (-1, 0, 0): 4})
Hit samples:  2811  Ave length:  2.29
Symbols:  15 [(0, 492), (1, 67), (2, 493), (3, 294), (4, 459), (5, 490), (6, 40), (7, 466), (8, 462), (9, 460), (10, 521), (11, 485), (12, 786), (13, 39), (14, 879)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  63,  Counter({((9, 4), 9): 4, ((5, 4), 5): 4, ((2, 4), 2): 3, ((4, 4), 4): 3, ((5, 2), 5): 2, ((6, 3), 6): 2, ((6, 4), 6): 2, ((6, 0), 6): 2, ((9, 6), 9): 2, ((2, 2), 2): 2, ((7, 4), 7): 2, ((8, 4), 8): 2, ((8, 2), 8): 2, ((0, 4), 6): 2, ((3, 4), 3): 1, ((6, 8), 6): 1, ((0, 6), 8): 1, ((8, 8), 8): 1, ((7, 0), 7): 1, ((5, 5), 5): 1, ((9, 7), 9): 1, ((0, 9), 11): 1, ((1, 4), 4): 1, ((1, 9), 9): 1, ((6, 2), 6): 1, ((0, 0), 2): 1, ((7, 1), 7): 1, ((7, 7), 7): 1, ((3, 3), 3): 1, ((6, 6), 6): 1, ((1, 8), 8): 1, ((1, 6), 6): 1, ((9, 0), 9): 1, ((4, 6), 4): 1, ((9, 1), 9): 1, ((0, 7), 9): 1, ((1, 7), 7): 1, ((9, 2), 9): 1, ((9, 9), 9): 1, ((7, 8), 7): 1, ((5, 1), 5): 1, ((4, 5), 4): 1, ((3, 2), 3): 1})
Symbol-06 (int -> int -> int), Samples:  40,  Counter({((6, 4), 11): 3, ((1, 4), 5): 3, ((3, 2), 7): 2, ((0, 4), 5): 2, ((0, 8), 5): 2, ((8, 5), 13): 2, ((9, 7), 14): 2, ((2, 8), 6): 1, ((5, 3), 10): 1, ((4, 2), 8): 1, ((5, 5), 10): 1, ((6, 8), 11): 1, ((8, 4), 13): 1, ((7, 6), 12): 1, ((0, 3), 5): 1, ((0, 0), 5): 1, ((9, 4), 14): 1, ((0, 1), 5): 1, ((8, 6), 13): 1, ((4, 7), 8): 1, ((3, 4), 7): 1, ((6, 3), 11): 1, ((7, 1), 12): 1, ((7, 9), 12): 1, ((3, 7), 7): 1, ((1, 3), 5): 1, ((2, 5), 6): 1, ((1, 9), 5): 1, ((3, 3), 7): 1, ((2, 1), 6): 1, ((7, 4), 12): 1})
Symbol-13 (int -> int -> int), Samples:  39,  Counter({((7, 2), 14): 2, ((3, 4), 6): 2, ((6, 2), 12): 2, ((6, 3), 12): 2, ((4, 7), 8): 2, ((6, 4), 12): 2, ((2, 2), 4): 2, ((6, 6), 12): 1, ((4, 6), 8): 1, ((6, 1), 12): 1, ((1, 4), 2): 1, ((9, 8), 18): 1, ((7, 1), 14): 1, ((2, 7), 4): 1, ((5, 4), 10): 1, ((8, 8), 16): 1, ((1, 7), 2): 1, ((1, 8), 2): 1, ((0, 8), 0): 1, ((4, 5), 8): 1, ((9, 5), 18): 1, ((2, 0), 4): 1, ((7, 7), 14): 1, ((3, 2), 6): 1, ((2, 4), 4): 1, ((6, 7), 12): 1, ((3, 8), 6): 1, ((5, 1), 10): 1, ((6, 5), 12): 1, ((3, 5), 6): 1, ((9, 6), 18): 1, ((8, 9), 16): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 81/499 (max_len=3, data=2820)
Train acc: 97.62 (abduce 99.86)
Dep:  Counter({(1, -1, 1): 1726, (-1,): 1000, (2, 2, -1): 85, (-1, 0, 0): 5})
Hit samples:  2816  Ave length:  2.29
Symbols:  15 [(0, 494), (1, 68), (2, 496), (3, 296), (4, 461), (5, 491), (6, 39), (7, 466), (8, 462), (9, 459), (10, 519), (11, 488), (12, 783), (13, 42), (14, 884)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  68,  Counter({((5, 4), 5): 4, ((9, 4), 9): 4, ((2, 4), 2): 3, ((4, 4), 4): 3, ((6, 0), 6): 2, ((6, 4), 6): 2, ((5, 2), 5): 2, ((6, 3), 6): 2, ((2, 2), 2): 2, ((7, 4), 7): 2, ((9, 6), 9): 2, ((8, 4), 8): 2, ((8, 2), 8): 2, ((0, 4), 6): 2, ((7, 1), 7): 2, ((6, 6), 6): 1, ((6, 8), 6): 1, ((9, 0), 9): 1, ((9, 2), 9): 1, ((1, 7), 7): 1, ((4, 6), 4): 1, ((7, 8), 7): 1, ((1, 4), 4): 1, ((9, 1), 9): 1, ((4, 5), 4): 1, ((3, 1), 3): 1, ((3, 4), 3): 1, ((1, 8), 8): 1, ((8, 8), 8): 1, ((0, 0), 2): 1, ((6, 7), 6): 1, ((7, 0), 7): 1, ((5, 5), 5): 1, ((9, 9), 9): 1, ((7, 7), 7): 1, ((5, 1), 5): 1, ((0, 9), 11): 1, ((9, 7), 9): 1, ((3, 3), 3): 1, ((6, 2), 6): 1, ((1, 6), 6): 1, ((0, 6), 8): 1, ((1, 9), 9): 1, ((0, 7), 9): 1, ((3, 2), 3): 1, ((3, 5), 3): 1, ((6, 1), 6): 1})
Symbol-06 (int -> int -> int), Samples:  39,  Counter({((6, 4), 11): 3, ((1, 4), 5): 3, ((3, 2), 7): 2, ((0, 8), 5): 2, ((8, 5), 13): 2, ((0, 4), 5): 2, ((9, 7), 14): 2, ((4, 2), 8): 1, ((6, 8), 11): 1, ((0, 0), 5): 1, ((8, 6), 13): 1, ((7, 6), 12): 1, ((3, 7), 7): 1, ((7, 9), 12): 1, ((7, 1), 12): 1, ((0, 1), 5): 1, ((4, 7), 8): 1, ((3, 4), 7): 1, ((5, 5), 10): 1, ((2, 8), 6): 1, ((5, 3), 10): 1, ((9, 4), 14): 1, ((6, 3), 11): 1, ((1, 3), 5): 1, ((8, 4), 13): 1, ((2, 5), 6): 1, ((3, 3), 7): 1, ((0, 3), 5): 1, ((7, 4), 12): 1, ((1, 9), 5): 1})
Symbol-13 (int -> int -> int), Samples:  40,  Counter({((2, 2), 4): 3, ((7, 2), 14): 2, ((3, 4), 6): 2, ((6, 2), 12): 2, ((4, 7), 8): 2, ((6, 3), 12): 2, ((6, 4), 12): 2, ((6, 6), 12): 1, ((9, 8), 18): 1, ((6, 1), 12): 1, ((1, 4), 2): 1, ((1, 7), 2): 1, ((3, 7), 6): 1, ((8, 8), 16): 1, ((1, 8), 2): 1, ((2, 7), 4): 1, ((7, 7), 14): 1, ((3, 2), 6): 1, ((2, 0), 4): 1, ((0, 8), 0): 1, ((5, 4), 10): 1, ((4, 5), 8): 1, ((2, 4), 4): 1, ((7, 1), 14): 1, ((9, 5), 18): 1, ((3, 8), 6): 1, ((8, 9), 16): 1, ((9, 6), 18): 1, ((4, 6), 8): 1, ((6, 7), 12): 1, ((6, 5), 12): 1, ((5, 1), 10): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 82/499 (max_len=3, data=2820)
Train acc: 97.53 (abduce 99.82)
Dep:  Counter({(1, -1, 1): 1723, (-1,): 1000, (2, 2, -1): 85, (-1, 0, 0): 7})
Hit samples:  2815  Ave length:  2.29
Symbols:  15 [(0, 493), (1, 66), (2, 491), (3, 295), (4, 459), (5, 490), (6, 40), (7, 467), (8, 463), (9, 462), (10, 523), (11, 487), (12, 784), (13, 43), (14, 882)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  65,  Counter({((5, 4), 5): 4, ((9, 4), 9): 4, ((2, 4), 2): 3, ((4, 4), 4): 3, ((6, 4), 6): 2, ((5, 2), 5): 2, ((6, 0), 6): 2, ((8, 4), 8): 2, ((9, 6), 9): 2, ((2, 2), 2): 2, ((8, 2), 8): 2, ((7, 4), 7): 2, ((6, 3), 6): 2, ((1, 6), 6): 1, ((7, 0), 7): 1, ((0, 0), 2): 1, ((1, 8), 8): 1, ((6, 8), 6): 1, ((8, 8), 8): 1, ((4, 6), 4): 1, ((5, 1), 5): 1, ((4, 5), 4): 1, ((1, 9), 9): 1, ((0, 7), 9): 1, ((6, 6), 6): 1, ((9, 7), 9): 1, ((0, 9), 11): 1, ((7, 7), 7): 1, ((3, 1), 3): 1, ((6, 7), 6): 1, ((6, 2), 6): 1, ((9, 9), 9): 1, ((0, 6), 8): 1, ((0, 4), 6): 1, ((9, 1), 9): 1, ((9, 0), 9): 1, ((7, 1), 7): 1, ((9, 2), 9): 1, ((3, 2), 3): 1, ((1, 4), 4): 1, ((3, 4), 3): 1, ((5, 5), 5): 1, ((1, 7), 7): 1, ((3, 3), 3): 1, ((7, 2), 7): 1, ((3, 5), 3): 1})
Symbol-06 (int -> int -> int), Samples:  37,  Counter({((1, 4), 5): 3, ((6, 4), 11): 3, ((8, 5), 13): 2, ((3, 2), 7): 2, ((0, 4), 5): 2, ((0, 8), 5): 2, ((4, 2), 8): 1, ((0, 1), 5): 1, ((7, 6), 12): 1, ((0, 0), 5): 1, ((8, 4), 13): 1, ((5, 5), 10): 1, ((3, 4), 7): 1, ((6, 8), 11): 1, ((9, 7), 14): 1, ((7, 1), 12): 1, ((0, 3), 5): 1, ((9, 4), 14): 1, ((2, 5), 6): 1, ((6, 3), 11): 1, ((8, 6), 13): 1, ((5, 3), 10): 1, ((1, 3), 5): 1, ((4, 7), 8): 1, ((3, 7), 7): 1, ((3, 3), 7): 1, ((2, 8), 6): 1, ((2, 1), 6): 1, ((1, 9), 5): 1})
Symbol-13 (int -> int -> int), Samples:  41,  Counter({((6, 2), 12): 2, ((7, 2), 14): 2, ((3, 4), 6): 2, ((4, 7), 8): 2, ((6, 3), 12): 2, ((2, 2), 4): 2, ((6, 4), 12): 2, ((9, 8), 18): 1, ((1, 4), 2): 1, ((0, 8), 0): 1, ((1, 7), 2): 1, ((6, 1), 12): 1, ((4, 6), 8): 1, ((2, 0), 4): 1, ((7, 1), 14): 1, ((9, 5), 18): 1, ((8, 8), 16): 1, ((3, 7), 6): 1, ((2, 7), 4): 1, ((6, 6), 12): 1, ((7, 7), 14): 1, ((3, 2), 6): 1, ((5, 4), 10): 1, ((1, 8), 2): 1, ((3, 8), 6): 1, ((2, 4), 4): 1, ((4, 5), 8): 1, ((6, 7), 12): 1, ((5, 1), 10): 1, ((9, 6), 18): 1, ((1, 2), 2): 1, ((8, 9), 16): 1, ((6, 5), 12): 1, ((3, 5), 6): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 54s
------------------------------
Epoch 83/499 (max_len=3, data=2820)
Train acc: 95.70 (abduce 99.89)
Dep:  Counter({(1, -1, 1): 1728, (-1,): 1000, (2, 2, -1): 84, (-1, 0, 0): 5})
Hit samples:  2817  Ave length:  2.29
Symbols:  15 [(0, 494), (1, 69), (2, 495), (3, 297), (4, 458), (5, 491), (6, 43), (7, 465), (8, 466), (9, 460), (10, 520), (11, 488), (12, 782), (13, 41), (14, 882)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  67,  Counter({((5, 4), 5): 4, ((9, 4), 9): 4, ((4, 4), 4): 3, ((2, 4), 2): 3, ((5, 2), 5): 2, ((6, 4), 6): 2, ((8, 4), 8): 2, ((6, 3), 6): 2, ((9, 6), 9): 2, ((6, 0), 6): 2, ((2, 2), 2): 2, ((0, 4), 6): 2, ((8, 2), 8): 2, ((7, 4), 7): 2, ((1, 6), 6): 1, ((6, 2), 6): 1, ((4, 6), 4): 1, ((0, 6), 8): 1, ((7, 1), 7): 1, ((9, 0), 9): 1, ((9, 1), 9): 1, ((7, 0), 7): 1, ((6, 7), 6): 1, ((1, 9), 9): 1, ((0, 9), 11): 1, ((3, 3), 3): 1, ((9, 2), 9): 1, ((8, 8), 8): 1, ((1, 8), 8): 1, ((7, 7), 7): 1, ((0, 7), 9): 1, ((9, 9), 9): 1, ((6, 8), 6): 1, ((6, 6), 6): 1, ((3, 1), 3): 1, ((1, 7), 7): 1, ((3, 2), 3): 1, ((3, 4), 3): 1, ((7, 8), 7): 1, ((5, 5), 5): 1, ((4, 5), 4): 1, ((7, 2), 7): 1, ((9, 7), 9): 1, ((0, 0), 2): 1, ((1, 3), 3): 1, ((8, 1), 8): 1, ((3, 5), 3): 1})
Symbol-06 (int -> int -> int), Samples:  40,  Counter({((6, 4), 11): 3, ((1, 4), 5): 3, ((0, 8), 5): 2, ((0, 4), 5): 2, ((8, 5), 13): 2, ((3, 2), 7): 2, ((9, 7), 14): 2, ((8, 6), 13): 1, ((2, 8), 6): 1, ((5, 5), 10): 1, ((3, 7), 7): 1, ((5, 3), 10): 1, ((4, 2), 8): 1, ((7, 9), 12): 1, ((9, 4), 14): 1, ((3, 4), 7): 1, ((4, 7), 8): 1, ((1, 3), 5): 1, ((7, 6), 12): 1, ((8, 4), 13): 1, ((0, 0), 5): 1, ((0, 1), 5): 1, ((7, 1), 12): 1, ((6, 3), 11): 1, ((6, 8), 11): 1, ((2, 5), 6): 1, ((0, 3), 5): 1, ((7, 4), 12): 1, ((1, 9), 5): 1, ((2, 1), 6): 1, ((3, 3), 7): 1})
Symbol-13 (int -> int -> int), Samples:  39,  Counter({((7, 2), 14): 2, ((3, 4), 6): 2, ((6, 3), 12): 2, ((4, 7), 8): 2, ((6, 2), 12): 2, ((6, 4), 12): 2, ((2, 2), 4): 2, ((8, 8), 16): 1, ((5, 4), 10): 1, ((0, 8), 0): 1, ((4, 6), 8): 1, ((6, 6), 12): 1, ((1, 4), 2): 1, ((2, 7), 4): 1, ((9, 5), 18): 1, ((6, 1), 12): 1, ((2, 4), 4): 1, ((7, 1), 14): 1, ((7, 7), 14): 1, ((9, 8), 18): 1, ((1, 7), 2): 1, ((4, 5), 8): 1, ((2, 0), 4): 1, ((1, 2), 2): 1, ((6, 7), 12): 1, ((3, 8), 6): 1, ((5, 1), 10): 1, ((6, 5), 12): 1, ((9, 6), 18): 1, ((1, 8), 2): 1, ((8, 9), 16): 1, ((3, 5), 6): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 55s
------------------------------
Epoch 84/499 (max_len=3, data=2820)
Train acc: 97.49 (abduce 99.72)
Dep:  Counter({(1, -1, 1): 1724, (-1,): 1000, (2, 2, -1): 81, (-1, 0, 0): 7})
Hit samples:  2812  Ave length:  2.29
Symbols:  15 [(0, 493), (1, 67), (2, 494), (3, 296), (4, 460), (5, 491), (6, 40), (7, 464), (8, 465), (9, 460), (10, 516), (11, 485), (12, 785), (13, 40), (14, 880)]
Learn perception with 2809 samples, take 291 sec.
Learn syntax with 2809 samples, take 2 sec.
result accuracy by digit:
0 ( 0%) 90.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 90.00
4 ( 0%) 90.00
5 ( 0%) 80.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 80.00
9 ( 0%) 80.00
val (Perception Acc=9.65, Syntax Acc=43.40, Result Acc=6.15)
Epoch time: 4m 59s
------------------------------
Epoch 85/499 (max_len=3, data=2820)
Train acc: 97.66 (abduce 99.68)
Dep:  Counter({(1, -1, 1): 1728, (-1,): 1000, (2, 2, -1): 76, (-1, 0, 0): 7})
Hit samples:  2811  Ave length:  2.29
Symbols:  15 [(0, 495), (1, 66), (2, 496), (3, 295), (4, 459), (5, 489), (6, 39), (7, 465), (8, 465), (9, 460), (10, 515), (11, 483), (12, 784), (13, 40), (14, 882)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  65,  Counter({((5, 4), 5): 4, ((4, 4), 4): 3, ((9, 4), 9): 3, ((9, 6), 9): 3, ((2, 2), 2): 2, ((6, 3), 6): 2, ((5, 2), 5): 2, ((2, 4), 2): 2, ((6, 0), 6): 2, ((8, 4), 8): 2, ((6, 4), 6): 2, ((7, 4), 7): 2, ((8, 2), 8): 2, ((7, 1), 7): 1, ((6, 2), 6): 1, ((6, 8), 6): 1, ((3, 1), 3): 1, ((8, 8), 8): 1, ((1, 4), 4): 1, ((3, 3), 3): 1, ((7, 0), 7): 1, ((1, 9), 9): 1, ((1, 8), 8): 1, ((9, 1), 9): 1, ((5, 1), 5): 1, ((4, 5), 4): 1, ((6, 7), 6): 1, ((1, 6), 6): 1, ((3, 4), 3): 1, ((9, 0), 9): 1, ((9, 7), 9): 1, ((5, 3), 5): 1, ((7, 7), 7): 1, ((0, 9), 11): 1, ((9, 2), 9): 1, ((6, 6), 6): 1, ((0, 4), 6): 1, ((0, 0), 2): 1, ((7, 8), 7): 1, ((3, 2), 3): 1, ((0, 7), 9): 1, ((9, 9), 9): 1, ((2, 3), 2): 1, ((0, 6), 8): 1, ((4, 6), 4): 1, ((1, 7), 7): 1, ((3, 5), 3): 1})
Symbol-06 (int -> int -> int), Samples:  38,  Counter({((6, 4), 11): 3, ((0, 8), 5): 2, ((8, 5), 13): 2, ((3, 2), 7): 2, ((0, 4), 5): 2, ((1, 4), 5): 2, ((9, 7), 14): 2, ((2, 8), 6): 1, ((4, 2), 8): 1, ((1, 3), 5): 1, ((7, 6), 12): 1, ((0, 0), 5): 1, ((7, 9), 12): 1, ((3, 7), 7): 1, ((9, 4), 14): 1, ((4, 7), 8): 1, ((5, 3), 10): 1, ((6, 8), 11): 1, ((8, 4), 13): 1, ((0, 3), 5): 1, ((8, 6), 13): 1, ((3, 4), 7): 1, ((3, 3), 7): 1, ((6, 3), 11): 1, ((7, 1), 12): 1, ((2, 1), 6): 1, ((0, 1), 5): 1, ((2, 5), 6): 1, ((7, 4), 12): 1, ((1, 9), 5): 1})
Symbol-13 (int -> int -> int), Samples:  39,  Counter({((2, 2), 4): 3, ((6, 2), 12): 2, ((7, 2), 14): 2, ((6, 3), 12): 2, ((6, 4), 12): 2, ((4, 7), 8): 2, ((4, 6), 8): 1, ((2, 7), 4): 1, ((7, 1), 14): 1, ((3, 7), 6): 1, ((1, 8), 2): 1, ((8, 8), 16): 1, ((2, 4), 4): 1, ((1, 4), 2): 1, ((9, 5), 18): 1, ((6, 6), 12): 1, ((3, 2), 6): 1, ((2, 0), 4): 1, ((7, 7), 14): 1, ((1, 7), 2): 1, ((6, 1), 12): 1, ((9, 8), 18): 1, ((4, 5), 8): 1, ((9, 6), 18): 1, ((5, 1), 10): 1, ((1, 2), 2): 1, ((6, 7), 12): 1, ((6, 5), 12): 1, ((3, 8), 6): 1, ((8, 9), 16): 1, ((3, 5), 6): 1, ((3, 4), 6): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 55s
------------------------------
Epoch 86/499 (max_len=3, data=2820)
Train acc: 97.30 (abduce 99.75)
Dep:  Counter({(1, -1, 1): 1726, (-1,): 1000, (2, 2, -1): 79, (-1, 0, 0): 8})
Hit samples:  2813  Ave length:  2.29
Symbols:  15 [(0, 495), (1, 67), (2, 494), (3, 297), (4, 459), (5, 489), (6, 40), (7, 463), (8, 465), (9, 462), (10, 518), (11, 484), (12, 784), (13, 40), (14, 882)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  65,  Counter({((5, 4), 5): 4, ((4, 4), 4): 3, ((9, 4), 9): 3, ((9, 6), 9): 3, ((6, 4), 6): 2, ((6, 0), 6): 2, ((7, 4), 7): 2, ((6, 3), 6): 2, ((2, 2), 2): 2, ((8, 4), 8): 2, ((5, 2), 5): 2, ((0, 4), 6): 2, ((8, 2), 8): 2, ((1, 9), 9): 1, ((4, 5), 4): 1, ((3, 3), 3): 1, ((0, 6), 8): 1, ((1, 6), 6): 1, ((9, 9), 9): 1, ((1, 4), 4): 1, ((0, 0), 2): 1, ((6, 7), 6): 1, ((4, 6), 4): 1, ((1, 8), 8): 1, ((1, 7), 7): 1, ((3, 4), 3): 1, ((9, 1), 9): 1, ((7, 0), 7): 1, ((0, 9), 11): 1, ((5, 3), 5): 1, ((9, 0), 9): 1, ((6, 8), 6): 1, ((2, 3), 2): 1, ((6, 2), 6): 1, ((7, 8), 7): 1, ((0, 7), 9): 1, ((2, 4), 2): 1, ((7, 7), 7): 1, ((8, 8), 8): 1, ((9, 2), 9): 1, ((6, 6), 6): 1, ((3, 2), 3): 1, ((3, 1), 3): 1, ((5, 1), 5): 1, ((7, 1), 7): 1, ((3, 5), 3): 1, ((7, 2), 7): 1})
Symbol-06 (int -> int -> int), Samples:  39,  Counter({((6, 4), 11): 3, ((3, 2), 7): 2, ((0, 4), 5): 2, ((8, 5), 13): 2, ((1, 4), 5): 2, ((0, 8), 5): 2, ((9, 7), 14): 2, ((0, 3), 5): 1, ((0, 0), 5): 1, ((0, 1), 5): 1, ((4, 2), 8): 1, ((7, 9), 12): 1, ((3, 7), 7): 1, ((3, 3), 7): 1, ((4, 7), 8): 1, ((5, 5), 10): 1, ((2, 8), 6): 1, ((9, 4), 14): 1, ((7, 1), 12): 1, ((3, 4), 7): 1, ((6, 8), 11): 1, ((7, 6), 12): 1, ((8, 6), 13): 1, ((8, 4), 13): 1, ((5, 3), 10): 1, ((1, 3), 5): 1, ((6, 3), 11): 1, ((2, 5), 6): 1, ((2, 1), 6): 1, ((7, 4), 12): 1, ((1, 9), 5): 1})
Symbol-13 (int -> int -> int), Samples:  40,  Counter({((6, 3), 12): 2, ((7, 2), 14): 2, ((6, 2), 12): 2, ((3, 4), 6): 2, ((4, 7), 8): 2, ((6, 4), 12): 2, ((2, 2), 4): 2, ((6, 1), 12): 1, ((4, 6), 8): 1, ((1, 4), 2): 1, ((2, 7), 4): 1, ((2, 4), 4): 1, ((9, 8), 18): 1, ((6, 6), 12): 1, ((2, 0), 4): 1, ((0, 8), 0): 1, ((1, 7), 2): 1, ((3, 2), 6): 1, ((9, 5), 18): 1, ((7, 1), 14): 1, ((1, 8), 2): 1, ((3, 7), 6): 1, ((7, 7), 14): 1, ((4, 5), 8): 1, ((9, 6), 18): 1, ((8, 8), 16): 1, ((6, 7), 12): 1, ((5, 1), 10): 1, ((1, 2), 2): 1, ((3, 8), 6): 1, ((6, 5), 12): 1, ((8, 9), 16): 1, ((3, 5), 6): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 87/499 (max_len=3, data=2820)
Train acc: 97.56 (abduce 99.86)
Dep:  Counter({(1, -1, 1): 1730, (-1,): 1000, (2, 2, -1): 81, (-1, 0, 0): 5})
Hit samples:  2816  Ave length:  2.29
Symbols:  15 [(0, 496), (1, 67), (2, 496), (3, 296), (4, 461), (5, 491), (6, 42), (7, 463), (8, 464), (9, 462), (10, 516), (11, 487), (12, 784), (13, 40), (14, 883)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  66,  Counter({((5, 4), 5): 4, ((9, 4), 9): 3, ((4, 4), 4): 3, ((9, 6), 9): 3, ((2, 4), 2): 3, ((6, 3), 6): 2, ((6, 4), 6): 2, ((5, 2), 5): 2, ((7, 4), 7): 2, ((8, 4), 8): 2, ((6, 0), 6): 2, ((2, 2), 2): 2, ((8, 2), 8): 2, ((1, 9), 9): 1, ((3, 3), 3): 1, ((6, 6), 6): 1, ((9, 1), 9): 1, ((6, 2), 6): 1, ((1, 8), 8): 1, ((0, 7), 9): 1, ((7, 0), 7): 1, ((8, 8), 8): 1, ((0, 9), 11): 1, ((3, 2), 3): 1, ((4, 5), 4): 1, ((9, 0), 9): 1, ((6, 8), 6): 1, ((0, 4), 6): 1, ((0, 6), 8): 1, ((9, 9), 9): 1, ((3, 4), 3): 1, ((5, 3), 5): 1, ((5, 1), 5): 1, ((7, 1), 7): 1, ((9, 7), 9): 1, ((7, 8), 7): 1, ((3, 1), 3): 1, ((9, 2), 9): 1, ((7, 7), 7): 1, ((4, 6), 4): 1, ((0, 0), 2): 1, ((1, 7), 7): 1, ((1, 6), 6): 1, ((1, 4), 4): 1, ((6, 7), 6): 1, ((3, 5), 3): 1, ((7, 2), 7): 1})
Symbol-06 (int -> int -> int), Samples:  39,  Counter({((6, 4), 11): 3, ((8, 5), 13): 2, ((0, 8), 5): 2, ((3, 2), 7): 2, ((1, 4), 5): 2, ((0, 4), 5): 2, ((9, 7), 14): 2, ((0, 3), 5): 1, ((7, 6), 12): 1, ((3, 7), 7): 1, ((2, 8), 6): 1, ((4, 2), 8): 1, ((6, 8), 11): 1, ((4, 7), 8): 1, ((7, 9), 12): 1, ((9, 4), 14): 1, ((8, 6), 13): 1, ((0, 1), 5): 1, ((6, 3), 11): 1, ((3, 4), 7): 1, ((7, 1), 12): 1, ((5, 5), 10): 1, ((8, 4), 13): 1, ((5, 3), 10): 1, ((1, 3), 5): 1, ((3, 3), 7): 1, ((0, 0), 5): 1, ((7, 4), 12): 1, ((2, 1), 6): 1, ((1, 9), 5): 1, ((2, 5), 6): 1})
Symbol-13 (int -> int -> int), Samples:  40,  Counter({((2, 2), 4): 3, ((6, 2), 12): 2, ((7, 2), 14): 2, ((3, 4), 6): 2, ((6, 3), 12): 2, ((4, 7), 8): 2, ((6, 4), 12): 2, ((6, 6), 12): 1, ((3, 2), 6): 1, ((4, 6), 8): 1, ((9, 5), 18): 1, ((1, 8), 2): 1, ((3, 7), 6): 1, ((4, 5), 8): 1, ((2, 0), 4): 1, ((2, 4), 4): 1, ((0, 8), 0): 1, ((1, 4), 2): 1, ((9, 8), 18): 1, ((1, 7), 2): 1, ((6, 1), 12): 1, ((8, 8), 16): 1, ((2, 7), 4): 1, ((7, 1), 14): 1, ((7, 7), 14): 1, ((9, 6), 18): 1, ((8, 9), 16): 1, ((5, 1), 10): 1, ((3, 8), 6): 1, ((6, 5), 12): 1, ((3, 5), 6): 1, ((6, 7), 12): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 88/499 (max_len=3, data=2820)
Train acc: 97.92 (abduce 99.82)
Dep:  Counter({(1, -1, 1): 1736, (-1,): 1000, (2, 2, -1): 74, (-1, 0, 0): 5})
Hit samples:  2815  Ave length:  2.29
Symbols:  15 [(0, 494), (1, 66), (2, 495), (3, 298), (4, 460), (5, 491), (6, 36), (7, 464), (8, 467), (9, 460), (10, 514), (11, 487), (12, 788), (13, 39), (14, 886)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  65,  Counter({((9, 4), 9): 3, ((4, 4), 4): 3, ((5, 4), 5): 3, ((9, 6), 9): 3, ((2, 2), 2): 2, ((7, 4), 7): 2, ((8, 4), 8): 2, ((2, 4), 2): 2, ((6, 4), 6): 2, ((6, 3), 6): 2, ((5, 2), 5): 2, ((0, 4), 6): 2, ((8, 2), 8): 2, ((6, 0), 6): 2, ((9, 1), 9): 1, ((3, 1), 3): 1, ((7, 0), 7): 1, ((6, 2), 6): 1, ((7, 1), 7): 1, ((0, 9), 11): 1, ((0, 6), 8): 1, ((9, 0), 9): 1, ((6, 8), 6): 1, ((4, 6), 4): 1, ((1, 7), 7): 1, ((4, 5), 4): 1, ((1, 6), 6): 1, ((7, 8), 7): 1, ((3, 3), 3): 1, ((7, 7), 7): 1, ((1, 8), 8): 1, ((1, 9), 9): 1, ((6, 6), 6): 1, ((3, 4), 3): 1, ((0, 0), 2): 1, ((3, 2), 3): 1, ((9, 2), 9): 1, ((9, 7), 9): 1, ((0, 7), 9): 1, ((6, 7), 6): 1, ((5, 1), 5): 1, ((2, 3), 2): 1, ((8, 8), 8): 1, ((9, 9), 9): 1, ((5, 3), 5): 1, ((5, 0), 5): 1, ((3, 5), 3): 1})
Symbol-06 (int -> int -> int), Samples:  36,  Counter({((6, 4), 11): 3, ((0, 4), 5): 2, ((8, 5), 13): 2, ((0, 8), 5): 2, ((9, 7), 14): 2, ((6, 3), 11): 1, ((8, 6), 13): 1, ((2, 8), 6): 1, ((5, 5), 10): 1, ((1, 4), 5): 1, ((7, 1), 12): 1, ((0, 1), 5): 1, ((4, 7), 8): 1, ((3, 3), 7): 1, ((0, 0), 5): 1, ((6, 8), 11): 1, ((1, 3), 5): 1, ((7, 9), 12): 1, ((9, 4), 14): 1, ((3, 2), 7): 1, ((5, 3), 10): 1, ((7, 6), 12): 1, ((0, 3), 5): 1, ((4, 2), 8): 1, ((3, 7), 7): 1, ((3, 4), 7): 1, ((8, 4), 13): 1, ((2, 5), 6): 1, ((2, 1), 6): 1, ((1, 9), 5): 1})
Symbol-13 (int -> int -> int), Samples:  39,  Counter({((7, 2), 14): 2, ((6, 2), 12): 2, ((3, 4), 6): 2, ((4, 7), 8): 2, ((6, 4), 12): 2, ((6, 3), 12): 2, ((2, 2), 4): 2, ((4, 6), 8): 1, ((1, 4), 2): 1, ((6, 6), 12): 1, ((3, 2), 6): 1, ((6, 1), 12): 1, ((2, 0), 4): 1, ((4, 5), 8): 1, ((0, 8), 0): 1, ((3, 7), 6): 1, ((9, 8), 18): 1, ((2, 4), 4): 1, ((8, 8), 16): 1, ((2, 7), 4): 1, ((1, 7), 2): 1, ((9, 5), 18): 1, ((1, 8), 2): 1, ((7, 7), 14): 1, ((7, 1), 14): 1, ((8, 9), 16): 1, ((9, 6), 18): 1, ((5, 1), 10): 1, ((6, 5), 12): 1, ((3, 8), 6): 1, ((6, 7), 12): 1, ((3, 5), 6): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 58s
------------------------------
Epoch 89/499 (max_len=3, data=2820)
Train acc: 95.74 (abduce 99.86)
Dep:  Counter({(1, -1, 1): 1728, (-1,): 1000, (2, 2, -1): 82, (-1, 0, 0): 6})
Hit samples:  2816  Ave length:  2.29
Symbols:  15 [(0, 496), (1, 67), (2, 493), (3, 296), (4, 460), (5, 491), (6, 39), (7, 465), (8, 466), (9, 460), (10, 518), (11, 487), (12, 786), (13, 40), (14, 884)]
Learn perception with 2814 samples, take 294 sec.
Learn syntax with 2814 samples, take 2 sec.
result accuracy by digit:
0 ( 0%) 90.00
1 ( 0%) 90.00
2 ( 0%) 100.00
3 ( 0%) 80.00
4 ( 0%) 100.00
5 ( 0%) 80.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 90.00
9 ( 0%) 80.00
val (Perception Acc=9.39, Syntax Acc=43.45, Result Acc=6.18)
Epoch time: 5m 2s
------------------------------
Epoch 90/499 (max_len=3, data=2820)
Train acc: 97.85 (abduce 99.86)
Dep:  Counter({(1, -1, 1): 1725, (-1,): 1000, (2, 2, -1): 84, (-1, 0, 0): 7})
Hit samples:  2816  Ave length:  2.29
Symbols:  15 [(0, 497), (1, 67), (2, 495), (3, 295), (4, 462), (5, 489), (6, 40), (7, 465), (8, 464), (9, 460), (10, 519), (11, 486), (12, 782), (13, 42), (14, 885)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  66,  Counter({((5, 4), 5): 4, ((4, 4), 4): 3, ((9, 4), 9): 3, ((9, 6), 9): 3, ((6, 0), 6): 2, ((6, 4), 6): 2, ((8, 4), 8): 2, ((7, 4), 7): 2, ((2, 2), 2): 2, ((6, 3), 6): 2, ((5, 2), 5): 2, ((8, 2), 8): 2, ((2, 4), 2): 2, ((6, 2), 6): 1, ((1, 8), 8): 1, ((1, 9), 9): 1, ((5, 3), 5): 1, ((4, 5), 4): 1, ((3, 3), 3): 1, ((6, 6), 6): 1, ((0, 4), 6): 1, ((7, 0), 7): 1, ((1, 6), 6): 1, ((9, 9), 9): 1, ((3, 1), 3): 1, ((1, 7), 7): 1, ((9, 1), 9): 1, ((6, 8), 6): 1, ((7, 1), 7): 1, ((7, 8), 7): 1, ((5, 1), 5): 1, ((9, 7), 9): 1, ((8, 8), 8): 1, ((1, 4), 4): 1, ((3, 4), 3): 1, ((9, 2), 9): 1, ((2, 3), 2): 1, ((3, 2), 3): 1, ((7, 7), 7): 1, ((6, 7), 6): 1, ((4, 6), 4): 1, ((9, 0), 9): 1, ((0, 7), 9): 1, ((0, 6), 8): 1, ((0, 0), 2): 1, ((4, 0), 4): 1, ((6, 1), 6): 1, ((3, 5), 3): 1})
Symbol-06 (int -> int -> int), Samples:  39,  Counter({((6, 4), 11): 3, ((1, 4), 5): 3, ((8, 5), 13): 2, ((3, 2), 7): 2, ((0, 4), 5): 2, ((0, 8), 5): 2, ((9, 7), 14): 2, ((0, 1), 5): 1, ((4, 2), 8): 1, ((5, 5), 10): 1, ((0, 3), 5): 1, ((9, 4), 14): 1, ((4, 7), 8): 1, ((6, 8), 11): 1, ((7, 9), 12): 1, ((0, 0), 5): 1, ((8, 6), 13): 1, ((2, 8), 6): 1, ((7, 6), 12): 1, ((3, 4), 7): 1, ((8, 4), 13): 1, ((6, 3), 11): 1, ((3, 7), 7): 1, ((5, 3), 10): 1, ((1, 3), 5): 1, ((3, 3), 7): 1, ((7, 1), 12): 1, ((7, 4), 12): 1, ((2, 1), 6): 1, ((1, 9), 5): 1})
Symbol-13 (int -> int -> int), Samples:  41,  Counter({((6, 4), 12): 3, ((6, 3), 12): 2, ((3, 4), 6): 2, ((7, 2), 14): 2, ((6, 2), 12): 2, ((4, 7), 8): 2, ((2, 2), 4): 2, ((2, 7), 4): 1, ((9, 8), 18): 1, ((2, 4), 4): 1, ((8, 8), 16): 1, ((1, 4), 2): 1, ((6, 6), 12): 1, ((3, 2), 6): 1, ((9, 5), 18): 1, ((1, 7), 2): 1, ((4, 6), 8): 1, ((4, 5), 8): 1, ((0, 8), 0): 1, ((7, 1), 14): 1, ((6, 1), 12): 1, ((7, 7), 14): 1, ((3, 7), 6): 1, ((1, 8), 2): 1, ((2, 0), 4): 1, ((1, 2), 2): 1, ((9, 6), 18): 1, ((3, 8), 6): 1, ((8, 9), 16): 1, ((5, 1), 10): 1, ((6, 5), 12): 1, ((6, 7), 12): 1, ((3, 5), 6): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 91/499 (max_len=3, data=2820)
Train acc: 97.43 (abduce 99.65)
Dep:  Counter({(1, -1, 1): 1728, (-1,): 1000, (2, 2, -1): 77, (-1, 0, 0): 5})
Hit samples:  2810  Ave length:  2.29
Symbols:  15 [(0, 492), (1, 68), (2, 496), (3, 296), (4, 456), (5, 489), (6, 42), (7, 463), (8, 465), (9, 463), (10, 514), (11, 486), (12, 781), (13, 38), (14, 881)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  65,  Counter({((5, 4), 5): 4, ((4, 4), 4): 3, ((6, 0), 6): 2, ((2, 4), 2): 2, ((9, 4), 9): 2, ((2, 2), 2): 2, ((5, 2), 5): 2, ((6, 3), 6): 2, ((6, 4), 6): 2, ((9, 6), 9): 2, ((8, 4), 8): 2, ((7, 4), 7): 2, ((8, 2), 8): 2, ((9, 0), 9): 2, ((1, 8), 8): 1, ((1, 9), 9): 1, ((0, 9), 11): 1, ((0, 6), 8): 1, ((6, 6), 6): 1, ((9, 9), 9): 1, ((3, 3), 3): 1, ((0, 4), 6): 1, ((5, 3), 5): 1, ((1, 4), 4): 1, ((6, 2), 6): 1, ((7, 0), 7): 1, ((9, 1), 9): 1, ((1, 6), 6): 1, ((9, 2), 9): 1, ((4, 6), 4): 1, ((8, 8), 8): 1, ((0, 7), 9): 1, ((6, 7), 6): 1, ((3, 1), 3): 1, ((1, 7), 7): 1, ((5, 1), 5): 1, ((3, 2), 3): 1, ((7, 7), 7): 1, ((7, 1), 7): 1, ((3, 4), 3): 1, ((7, 8), 7): 1, ((4, 5), 4): 1, ((2, 3), 2): 1, ((6, 8), 6): 1, ((3, 5), 3): 1, ((6, 1), 6): 1, ((2, 0), 2): 1, ((9, 7), 9): 1})
Symbol-06 (int -> int -> int), Samples:  39,  Counter({((6, 4), 11): 3, ((8, 5), 13): 2, ((0, 4), 5): 2, ((0, 8), 5): 2, ((3, 2), 7): 2, ((1, 4), 5): 2, ((9, 7), 14): 2, ((7, 6), 12): 1, ((5, 5), 10): 1, ((8, 6), 13): 1, ((0, 3), 5): 1, ((4, 2), 8): 1, ((6, 8), 11): 1, ((0, 1), 5): 1, ((3, 4), 7): 1, ((7, 9), 12): 1, ((9, 4), 14): 1, ((8, 4), 13): 1, ((3, 7), 7): 1, ((2, 8), 6): 1, ((0, 0), 5): 1, ((3, 3), 7): 1, ((6, 3), 11): 1, ((7, 1), 12): 1, ((4, 7), 8): 1, ((1, 3), 5): 1, ((5, 3), 10): 1, ((2, 1), 6): 1, ((2, 5), 6): 1, ((7, 4), 12): 1, ((1, 9), 5): 1})
Symbol-13 (int -> int -> int), Samples:  38,  Counter({((6, 2), 12): 2, ((7, 2), 14): 2, ((3, 4), 6): 2, ((6, 3), 12): 2, ((4, 7), 8): 2, ((6, 4), 12): 2, ((2, 2), 4): 2, ((2, 7), 4): 1, ((9, 8), 18): 1, ((2, 4), 4): 1, ((7, 7), 14): 1, ((4, 6), 8): 1, ((4, 5), 8): 1, ((8, 8), 16): 1, ((0, 8), 0): 1, ((3, 7), 6): 1, ((6, 6), 12): 1, ((7, 1), 14): 1, ((1, 7), 2): 1, ((1, 4), 2): 1, ((9, 5), 18): 1, ((6, 1), 12): 1, ((2, 0), 4): 1, ((1, 8), 2): 1, ((8, 9), 16): 1, ((9, 6), 18): 1, ((3, 5), 6): 1, ((6, 5), 12): 1, ((3, 8), 6): 1, ((6, 7), 12): 1, ((5, 1), 10): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 92/499 (max_len=3, data=2820)
Train acc: 97.98 (abduce 99.75)
Dep:  Counter({(1, -1, 1): 1731, (-1,): 1000, (2, 2, -1): 78, (-1, 0, 0): 4})
Hit samples:  2813  Ave length:  2.29
Symbols:  15 [(0, 494), (1, 67), (2, 494), (3, 296), (4, 462), (5, 490), (6, 38), (7, 465), (8, 464), (9, 461), (10, 513), (11, 487), (12, 786), (13, 35), (14, 887)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  66,  Counter({((5, 4), 5): 4, ((9, 6), 9): 3, ((9, 4), 9): 3, ((4, 4), 4): 3, ((2, 2), 2): 2, ((8, 4), 8): 2, ((6, 0), 6): 2, ((7, 4), 7): 2, ((6, 4), 6): 2, ((5, 2), 5): 2, ((6, 3), 6): 2, ((8, 2), 8): 2, ((2, 4), 2): 2, ((7, 1), 7): 1, ((4, 5), 4): 1, ((7, 0), 7): 1, ((0, 6), 8): 1, ((0, 4), 6): 1, ((9, 1), 9): 1, ((1, 4), 4): 1, ((8, 8), 8): 1, ((2, 3), 2): 1, ((9, 0), 9): 1, ((6, 7), 6): 1, ((3, 3), 3): 1, ((0, 0), 2): 1, ((1, 6), 6): 1, ((9, 9), 9): 1, ((5, 3), 5): 1, ((6, 8), 6): 1, ((1, 7), 7): 1, ((0, 9), 11): 1, ((9, 2), 9): 1, ((3, 2), 3): 1, ((4, 6), 4): 1, ((9, 7), 9): 1, ((5, 1), 5): 1, ((6, 2), 6): 1, ((3, 4), 3): 1, ((1, 8), 8): 1, ((7, 7), 7): 1, ((3, 1), 3): 1, ((7, 8), 7): 1, ((1, 9), 9): 1, ((6, 6), 6): 1, ((0, 7), 9): 1, ((3, 5), 3): 1, ((6, 1), 6): 1})
Symbol-06 (int -> int -> int), Samples:  38,  Counter({((1, 4), 5): 3, ((0, 8), 5): 2, ((3, 2), 7): 2, ((8, 5), 13): 2, ((0, 4), 5): 2, ((6, 4), 11): 2, ((9, 7), 14): 2, ((6, 8), 11): 1, ((8, 6), 13): 1, ((5, 5), 10): 1, ((6, 3), 11): 1, ((0, 0), 5): 1, ((7, 9), 12): 1, ((1, 3), 5): 1, ((7, 6), 12): 1, ((8, 4), 13): 1, ((4, 2), 8): 1, ((0, 3), 5): 1, ((4, 7), 8): 1, ((3, 3), 7): 1, ((0, 1), 5): 1, ((3, 7), 7): 1, ((3, 4), 7): 1, ((5, 3), 10): 1, ((9, 4), 14): 1, ((7, 1), 12): 1, ((1, 9), 5): 1, ((2, 8), 6): 1, ((2, 5), 6): 1, ((7, 4), 12): 1})
Symbol-13 (int -> int -> int), Samples:  35,  Counter({((6, 3), 12): 3, ((7, 2), 14): 2, ((6, 2), 12): 2, ((3, 4), 6): 2, ((2, 2), 4): 2, ((6, 4), 12): 2, ((4, 5), 8): 1, ((2, 7), 4): 1, ((1, 7), 2): 1, ((9, 8), 18): 1, ((6, 6), 12): 1, ((4, 6), 8): 1, ((1, 4), 2): 1, ((4, 7), 8): 1, ((2, 4), 4): 1, ((7, 1), 14): 1, ((1, 8), 2): 1, ((9, 5), 18): 1, ((2, 0), 4): 1, ((3, 2), 6): 1, ((8, 8), 16): 1, ((6, 1), 12): 1, ((9, 6), 18): 1, ((5, 1), 10): 1, ((3, 8), 6): 1, ((8, 9), 16): 1, ((6, 7), 12): 1, ((3, 5), 6): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 93/499 (max_len=3, data=2820)
Train acc: 97.92 (abduce 99.79)
Dep:  Counter({(1, -1, 1): 1731, (-1,): 1000, (2, 2, -1): 77, (-1, 0, 0): 6})
Hit samples:  2814  Ave length:  2.29
Symbols:  15 [(0, 494), (1, 69), (2, 496), (3, 296), (4, 457), (5, 492), (6, 38), (7, 465), (8, 463), (9, 461), (10, 518), (11, 486), (12, 787), (13, 38), (14, 882)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  66,  Counter({((5, 4), 5): 4, ((9, 6), 9): 3, ((9, 4), 9): 3, ((4, 4), 4): 3, ((6, 0), 6): 2, ((5, 2), 5): 2, ((6, 3), 6): 2, ((7, 4), 7): 2, ((8, 4), 8): 2, ((6, 4), 6): 2, ((2, 2), 2): 2, ((2, 4), 2): 2, ((8, 2), 8): 2, ((1, 7), 7): 1, ((8, 8), 8): 1, ((3, 1), 3): 1, ((1, 8), 8): 1, ((7, 0), 7): 1, ((3, 3), 3): 1, ((5, 1), 5): 1, ((6, 8), 6): 1, ((3, 4), 3): 1, ((0, 7), 9): 1, ((6, 2), 6): 1, ((6, 7), 6): 1, ((7, 1), 7): 1, ((9, 1), 9): 1, ((0, 0), 2): 1, ((5, 3), 5): 1, ((9, 7), 9): 1, ((1, 4), 4): 1, ((6, 6), 6): 1, ((7, 8), 7): 1, ((2, 3), 2): 1, ((0, 9), 11): 1, ((4, 6), 4): 1, ((1, 9), 9): 1, ((0, 6), 8): 1, ((0, 4), 6): 1, ((1, 6), 6): 1, ((9, 0), 9): 1, ((9, 9), 9): 1, ((7, 7), 7): 1, ((4, 5), 4): 1, ((9, 2), 9): 1, ((3, 2), 3): 1, ((6, 1), 6): 1, ((3, 5), 3): 1})
Symbol-06 (int -> int -> int), Samples:  38,  Counter({((6, 4), 11): 3, ((8, 5), 13): 2, ((0, 4), 5): 2, ((1, 4), 5): 2, ((0, 8), 5): 2, ((9, 7), 14): 2, ((5, 5), 10): 1, ((7, 1), 12): 1, ((6, 3), 11): 1, ((8, 6), 13): 1, ((6, 8), 11): 1, ((4, 2), 8): 1, ((2, 8), 6): 1, ((0, 1), 5): 1, ((9, 4), 14): 1, ((3, 4), 7): 1, ((3, 2), 7): 1, ((0, 3), 5): 1, ((7, 9), 12): 1, ((4, 7), 8): 1, ((3, 3), 7): 1, ((8, 4), 13): 1, ((5, 3), 10): 1, ((7, 6), 12): 1, ((1, 3), 5): 1, ((3, 7), 7): 1, ((0, 0), 5): 1, ((2, 1), 6): 1, ((7, 4), 12): 1, ((1, 9), 5): 1, ((2, 5), 6): 1})
Symbol-13 (int -> int -> int), Samples:  37,  Counter({((7, 2), 14): 2, ((6, 2), 12): 2, ((6, 3), 12): 2, ((3, 4), 6): 2, ((4, 7), 8): 2, ((9, 8), 18): 1, ((6, 6), 12): 1, ((2, 0), 4): 1, ((1, 4), 2): 1, ((7, 7), 14): 1, ((8, 8), 16): 1, ((7, 1), 14): 1, ((4, 5), 8): 1, ((1, 8), 2): 1, ((2, 4), 4): 1, ((6, 4), 12): 1, ((3, 7), 6): 1, ((6, 1), 12): 1, ((9, 5), 18): 1, ((1, 7), 2): 1, ((0, 8), 0): 1, ((9, 6), 18): 1, ((3, 2), 6): 1, ((8, 9), 16): 1, ((2, 7), 4): 1, ((5, 1), 10): 1, ((6, 5), 12): 1, ((6, 7), 12): 1, ((1, 2), 2): 1, ((3, 8), 6): 1, ((3, 5), 6): 1, ((4, 4), 8): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 55s
------------------------------
Epoch 94/499 (max_len=3, data=2820)
Train acc: 97.75 (abduce 99.86)
Dep:  Counter({(1, -1, 1): 1726, (-1,): 1000, (2, 2, -1): 85, (-1, 0, 0): 5})
Hit samples:  2816  Ave length:  2.29
Symbols:  15 [(0, 493), (1, 64), (2, 496), (3, 297), (4, 461), (5, 492), (6, 40), (7, 465), (8, 465), (9, 461), (10, 514), (11, 488), (12, 786), (13, 40), (14, 886)]
Learn perception with 2814 samples, take 298 sec.
Learn syntax with 2814 samples, take 2 sec.
result accuracy by digit:
0 ( 0%) 90.00
1 ( 0%) 90.00
2 ( 0%) 100.00
3 ( 0%) 90.00
4 ( 0%) 100.00
5 ( 0%) 80.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 80.00
9 ( 0%) 90.00
val (Perception Acc=9.60, Syntax Acc=43.40, Result Acc=6.18)
Epoch time: 5m 6s
------------------------------
Epoch 95/499 (max_len=3, data=2820)
Train acc: 97.95 (abduce 99.75)
Dep:  Counter({(1, -1, 1): 1724, (-1,): 1000, (2, 2, -1): 85, (-1, 0, 0): 4})
Hit samples:  2813  Ave length:  2.29
Symbols:  15 [(0, 495), (1, 66), (2, 495), (3, 297), (4, 459), (5, 490), (6, 40), (7, 466), (8, 463), (9, 463), (10, 514), (11, 484), (12, 784), (13, 37), (14, 886)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  64,  Counter({((5, 4), 5): 4, ((9, 4), 9): 3, ((4, 4), 4): 3, ((5, 2), 5): 2, ((6, 0), 6): 2, ((7, 4), 7): 2, ((2, 2), 2): 2, ((6, 3), 6): 2, ((8, 4), 8): 2, ((2, 4), 2): 2, ((9, 0), 9): 2, ((6, 4), 6): 2, ((8, 2), 8): 2, ((5, 3), 5): 1, ((1, 8), 8): 1, ((0, 4), 6): 1, ((4, 5), 4): 1, ((7, 7), 7): 1, ((7, 8), 7): 1, ((1, 7), 7): 1, ((9, 9), 9): 1, ((6, 6), 6): 1, ((0, 7), 9): 1, ((7, 0), 7): 1, ((9, 7), 9): 1, ((3, 1), 3): 1, ((7, 1), 7): 1, ((6, 8), 6): 1, ((8, 8), 8): 1, ((0, 9), 11): 1, ((1, 6), 6): 1, ((0, 6), 8): 1, ((6, 7), 6): 1, ((0, 0), 2): 1, ((3, 3), 3): 1, ((7, 2), 7): 1, ((5, 1), 5): 1, ((1, 4), 4): 1, ((4, 6), 4): 1, ((9, 6), 9): 1, ((3, 4), 3): 1, ((2, 3), 2): 1, ((9, 1), 9): 1, ((6, 2), 6): 1, ((9, 2), 9): 1, ((3, 2), 3): 1, ((3, 5), 3): 1})
Symbol-06 (int -> int -> int), Samples:  39,  Counter({((6, 4), 11): 3, ((1, 4), 5): 3, ((8, 5), 13): 2, ((0, 4), 5): 2, ((0, 8), 5): 2, ((3, 2), 7): 2, ((9, 7), 14): 2, ((1, 3), 5): 1, ((0, 1), 5): 1, ((6, 3), 11): 1, ((3, 7), 7): 1, ((9, 4), 14): 1, ((4, 2), 8): 1, ((6, 8), 11): 1, ((0, 3), 5): 1, ((7, 9), 12): 1, ((0, 0), 5): 1, ((4, 7), 8): 1, ((5, 5), 10): 1, ((7, 1), 12): 1, ((5, 3), 10): 1, ((7, 6), 12): 1, ((3, 4), 7): 1, ((8, 4), 13): 1, ((3, 3), 7): 1, ((8, 6), 13): 1, ((1, 9), 5): 1, ((7, 4), 12): 1, ((2, 5), 6): 1, ((2, 6), 6): 1})
Symbol-13 (int -> int -> int), Samples:  36,  Counter({((7, 2), 14): 2, ((3, 4), 6): 2, ((6, 2), 12): 2, ((6, 4), 12): 2, ((6, 3), 12): 2, ((2, 2), 4): 2, ((4, 6), 8): 1, ((8, 8), 16): 1, ((0, 8), 0): 1, ((1, 4), 2): 1, ((2, 7), 4): 1, ((4, 5), 8): 1, ((7, 7), 14): 1, ((3, 7), 6): 1, ((9, 8), 18): 1, ((1, 8), 2): 1, ((9, 5), 18): 1, ((3, 2), 6): 1, ((6, 6), 12): 1, ((6, 1), 12): 1, ((4, 7), 8): 1, ((7, 1), 14): 1, ((8, 9), 16): 1, ((2, 0), 4): 1, ((3, 8), 6): 1, ((6, 7), 12): 1, ((5, 1), 10): 1, ((9, 6), 18): 1, ((3, 5), 6): 1, ((6, 5), 12): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 57s
------------------------------
Epoch 96/499 (max_len=3, data=2820)
Train acc: 97.82 (abduce 99.86)
Dep:  Counter({(1, -1, 1): 1725, (-1,): 1000, (2, 2, -1): 84, (-1, 0, 0): 7})
Hit samples:  2816  Ave length:  2.29
Symbols:  15 [(0, 494), (1, 67), (2, 497), (3, 297), (4, 462), (5, 492), (6, 42), (7, 465), (8, 463), (9, 460), (10, 515), (11, 487), (12, 782), (13, 40), (14, 885)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  67,  Counter({((5, 4), 5): 4, ((4, 4), 4): 3, ((9, 4), 9): 3, ((5, 2), 5): 2, ((6, 0), 6): 2, ((8, 4), 8): 2, ((2, 4), 2): 2, ((2, 2), 2): 2, ((9, 6), 9): 2, ((6, 4), 6): 2, ((9, 0), 9): 2, ((7, 4), 7): 2, ((6, 3), 6): 2, ((8, 2), 8): 2, ((6, 8), 6): 1, ((1, 9), 9): 1, ((1, 7), 7): 1, ((0, 6), 8): 1, ((9, 2), 9): 1, ((7, 1), 7): 1, ((1, 8), 8): 1, ((7, 0), 7): 1, ((1, 6), 6): 1, ((8, 8), 8): 1, ((4, 6), 4): 1, ((6, 2), 6): 1, ((7, 8), 7): 1, ((7, 7), 7): 1, ((9, 7), 9): 1, ((0, 9), 11): 1, ((3, 4), 3): 1, ((5, 1), 5): 1, ((0, 7), 9): 1, ((9, 1), 9): 1, ((9, 9), 9): 1, ((0, 0), 2): 1, ((6, 6), 6): 1, ((3, 1), 3): 1, ((1, 4), 4): 1, ((3, 2), 3): 1, ((6, 7), 6): 1, ((3, 3), 3): 1, ((0, 4), 6): 1, ((4, 5), 4): 1, ((5, 3), 5): 1, ((6, 1), 6): 1, ((7, 2), 7): 1, ((3, 5), 3): 1, ((2, 3), 2): 1})
Symbol-06 (int -> int -> int), Samples:  40,  Counter({((1, 4), 5): 3, ((8, 5), 13): 2, ((0, 8), 5): 2, ((3, 2), 7): 2, ((0, 4), 5): 2, ((6, 4), 11): 2, ((9, 7), 14): 2, ((0, 1), 5): 1, ((0, 3), 5): 1, ((5, 3), 10): 1, ((9, 4), 14): 1, ((3, 7), 7): 1, ((1, 3), 5): 1, ((6, 8), 11): 1, ((7, 6), 12): 1, ((2, 8), 6): 1, ((5, 5), 10): 1, ((8, 6), 13): 1, ((4, 2), 8): 1, ((4, 7), 8): 1, ((6, 3), 11): 1, ((7, 1), 12): 1, ((7, 9), 12): 1, ((3, 4), 7): 1, ((0, 0), 5): 1, ((3, 3), 7): 1, ((8, 4), 13): 1, ((2, 5), 6): 1, ((2, 1), 6): 1, ((6, 6), 11): 1, ((1, 9), 5): 1, ((7, 4), 12): 1})
Symbol-13 (int -> int -> int), Samples:  39,  Counter({((7, 2), 14): 2, ((6, 2), 12): 2, ((3, 4), 6): 2, ((6, 3), 12): 2, ((4, 7), 8): 2, ((6, 4), 12): 2, ((4, 6), 8): 1, ((2, 7), 4): 1, ((6, 1), 12): 1, ((9, 8), 18): 1, ((1, 7), 2): 1, ((4, 5), 8): 1, ((8, 8), 16): 1, ((7, 1), 14): 1, ((1, 4), 2): 1, ((9, 5), 18): 1, ((1, 8), 2): 1, ((2, 4), 4): 1, ((3, 7), 6): 1, ((0, 8), 0): 1, ((7, 7), 14): 1, ((6, 6), 12): 1, ((2, 0), 4): 1, ((3, 8), 6): 1, ((2, 2), 4): 1, ((6, 7), 12): 1, ((3, 2), 6): 1, ((5, 1), 10): 1, ((8, 9), 16): 1, ((1, 2), 2): 1, ((6, 5), 12): 1, ((9, 6), 18): 1, ((3, 5), 6): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 57s
------------------------------
Epoch 97/499 (max_len=3, data=2820)
Train acc: 98.08 (abduce 99.72)
Dep:  Counter({(1, -1, 1): 1726, (-1,): 1000, (2, 2, -1): 82, (-1, 0, 0): 4})
Hit samples:  2812  Ave length:  2.29
Symbols:  15 [(0, 493), (1, 65), (2, 496), (3, 295), (4, 461), (5, 489), (6, 40), (7, 466), (8, 464), (9, 457), (10, 515), (11, 488), (12, 785), (13, 39), (14, 883)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  64,  Counter({((5, 4), 5): 4, ((9, 4), 9): 3, ((4, 4), 4): 3, ((6, 0), 6): 2, ((6, 3), 6): 2, ((9, 6), 9): 2, ((9, 0), 9): 2, ((8, 4), 8): 2, ((6, 4), 6): 2, ((8, 2), 8): 2, ((7, 4), 7): 2, ((5, 1), 5): 1, ((1, 9), 9): 1, ((7, 0), 7): 1, ((3, 1), 3): 1, ((1, 8), 8): 1, ((0, 4), 6): 1, ((6, 2), 6): 1, ((7, 1), 7): 1, ((0, 0), 2): 1, ((1, 6), 6): 1, ((6, 8), 6): 1, ((2, 4), 2): 1, ((1, 7), 7): 1, ((2, 3), 2): 1, ((4, 6), 4): 1, ((9, 9), 9): 1, ((9, 1), 9): 1, ((5, 2), 5): 1, ((0, 6), 8): 1, ((7, 7), 7): 1, ((8, 8), 8): 1, ((0, 7), 9): 1, ((6, 7), 6): 1, ((3, 4), 3): 1, ((0, 9), 11): 1, ((6, 6), 6): 1, ((3, 2), 3): 1, ((3, 3), 3): 1, ((5, 3), 5): 1, ((4, 5), 4): 1, ((9, 7), 9): 1, ((7, 2), 7): 1, ((7, 8), 7): 1, ((9, 2), 9): 1, ((1, 4), 4): 1, ((2, 2), 2): 1, ((2, 1), 2): 1, ((3, 5), 3): 1})
Symbol-06 (int -> int -> int), Samples:  38,  Counter({((8, 5), 13): 2, ((0, 8), 5): 2, ((0, 4), 5): 2, ((1, 4), 5): 2, ((6, 4), 11): 2, ((9, 7), 14): 2, ((3, 4), 7): 2, ((0, 0), 5): 1, ((7, 9), 12): 1, ((4, 2), 8): 1, ((2, 8), 6): 1, ((0, 1), 5): 1, ((0, 3), 5): 1, ((6, 3), 11): 1, ((4, 7), 8): 1, ((8, 4), 13): 1, ((6, 8), 11): 1, ((5, 3), 10): 1, ((5, 5), 10): 1, ((9, 4), 14): 1, ((1, 3), 5): 1, ((7, 1), 12): 1, ((3, 2), 7): 1, ((7, 6), 12): 1, ((3, 7), 7): 1, ((2, 5), 6): 1, ((1, 9), 5): 1, ((7, 4), 12): 1, ((8, 6), 13): 1, ((2, 1), 6): 1, ((6, 6), 11): 1})
Symbol-13 (int -> int -> int), Samples:  37,  Counter({((6, 4), 12): 2, ((6, 2), 12): 2, ((7, 2), 14): 2, ((6, 3), 12): 2, ((3, 4), 6): 2, ((4, 6), 8): 1, ((1, 4), 2): 1, ((6, 6), 12): 1, ((6, 1), 12): 1, ((9, 8), 18): 1, ((1, 8), 2): 1, ((3, 7), 6): 1, ((7, 1), 14): 1, ((2, 7), 4): 1, ((2, 4), 4): 1, ((0, 8), 0): 1, ((8, 8), 16): 1, ((7, 7), 14): 1, ((4, 7), 8): 1, ((9, 5), 18): 1, ((3, 2), 6): 1, ((4, 5), 8): 1, ((1, 7), 2): 1, ((3, 8), 6): 1, ((2, 0), 4): 1, ((9, 6), 18): 1, ((6, 7), 12): 1, ((2, 2), 4): 1, ((8, 9), 16): 1, ((5, 1), 10): 1, ((6, 5), 12): 1, ((3, 5), 6): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 56s
------------------------------
Epoch 98/499 (max_len=3, data=2820)
Train acc: 97.82 (abduce 99.82)
Dep:  Counter({(1, -1, 1): 1731, (-1,): 1000, (2, 2, -1): 79, (-1, 0, 0): 5})
Hit samples:  2815  Ave length:  2.29
Symbols:  15 [(0, 494), (1, 65), (2, 497), (3, 298), (4, 459), (5, 491), (6, 39), (7, 464), (8, 463), (9, 462), (10, 514), (11, 488), (12, 788), (13, 38), (14, 885)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  65,  Counter({((5, 4), 5): 4, ((9, 4), 9): 3, ((4, 4), 4): 3, ((6, 0), 6): 2, ((6, 4), 6): 2, ((5, 2), 5): 2, ((2, 4), 2): 2, ((9, 0), 9): 2, ((9, 6), 9): 2, ((6, 3), 6): 2, ((7, 4), 7): 2, ((2, 2), 2): 2, ((8, 2), 8): 2, ((1, 6), 6): 1, ((6, 2), 6): 1, ((4, 6), 4): 1, ((0, 7), 9): 1, ((9, 9), 9): 1, ((0, 6), 8): 1, ((6, 8), 6): 1, ((0, 4), 6): 1, ((7, 0), 7): 1, ((1, 9), 9): 1, ((7, 7), 7): 1, ((9, 7), 9): 1, ((3, 1), 3): 1, ((1, 4), 4): 1, ((7, 8), 7): 1, ((3, 3), 3): 1, ((5, 1), 5): 1, ((3, 4), 3): 1, ((5, 3), 5): 1, ((1, 8), 8): 1, ((6, 7), 6): 1, ((7, 1), 7): 1, ((8, 8), 8): 1, ((8, 4), 8): 1, ((6, 6), 6): 1, ((2, 3), 2): 1, ((9, 1), 9): 1, ((1, 7), 7): 1, ((4, 5), 4): 1, ((3, 2), 3): 1, ((9, 2), 9): 1, ((7, 2), 7): 1, ((0, 9), 11): 1, ((0, 0), 2): 1, ((3, 5), 3): 1})
Symbol-06 (int -> int -> int), Samples:  38,  Counter({((6, 4), 11): 3, ((3, 2), 7): 2, ((8, 5), 13): 2, ((0, 4), 5): 2, ((1, 4), 5): 2, ((0, 8), 5): 2, ((9, 7), 14): 2, ((0, 1), 5): 1, ((4, 2), 8): 1, ((7, 6), 12): 1, ((6, 8), 11): 1, ((7, 1), 12): 1, ((3, 4), 7): 1, ((8, 6), 13): 1, ((3, 7), 7): 1, ((4, 7), 8): 1, ((5, 3), 10): 1, ((9, 4), 14): 1, ((8, 4), 13): 1, ((2, 8), 6): 1, ((1, 3), 5): 1, ((6, 3), 11): 1, ((7, 9), 12): 1, ((5, 5), 10): 1, ((3, 3), 7): 1, ((0, 3), 5): 1, ((0, 0), 5): 1, ((2, 1), 6): 1, ((1, 9), 5): 1, ((7, 4), 12): 1})
Symbol-13 (int -> int -> int), Samples:  38,  Counter({((6, 3), 12): 2, ((3, 4), 6): 2, ((6, 2), 12): 2, ((4, 7), 8): 2, ((6, 4), 12): 2, ((2, 2), 4): 2, ((4, 6), 8): 1, ((0, 8), 0): 1, ((7, 2), 14): 1, ((8, 8), 16): 1, ((1, 4), 2): 1, ((1, 8), 2): 1, ((2, 7), 4): 1, ((1, 7), 2): 1, ((2, 4), 4): 1, ((9, 8), 18): 1, ((2, 0), 4): 1, ((9, 5), 18): 1, ((7, 7), 14): 1, ((4, 5), 8): 1, ((6, 1), 12): 1, ((3, 2), 6): 1, ((3, 8), 6): 1, ((3, 7), 6): 1, ((6, 6), 12): 1, ((6, 7), 12): 1, ((7, 1), 14): 1, ((5, 1), 10): 1, ((9, 6), 18): 1, ((6, 5), 12): 1, ((8, 9), 16): 1, ((3, 5), 6): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 1.00
Symbol-14: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) 1.00
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) 1.00
Symbol-01: fn (lambda (lambda (if0 (decr0 $1) (incr (incr (if0 $1 $0 (decr0 (decr0 $0))))) $1))) 1.00
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 (decr0 (decr0 (decr0 $1)))) (decr0 $1) $1)))))))) 1.00
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 6m 58s
------------------------------
Epoch 99/499 (max_len=3, data=2820)
Train acc: 98.24 (abduce 99.86)
Dep:  Counter({(1, -1, 1): 1730, (-1,): 1000, (2, 2, -1): 81, (-1, 0, 0): 5})
Hit samples:  2816  Ave length:  2.29
Symbols:  15 [(0, 496), (1, 66), (2, 494), (3, 298), (4, 460), (5, 492), (6, 39), (7, 465), (8, 467), (9, 462), (10, 513), (11, 485), (12, 786), (13, 38), (14, 887)]
Learn perception with 2815 samples, take 302 sec.
Learn syntax with 2815 samples, take 2 sec.
result accuracy by digit:
0 ( 0%) 90.00
1 ( 0%) 90.00
2 ( 0%) 100.00
3 ( 0%) 90.00
4 ( 0%) 90.00
5 ( 0%) 90.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 90.00
9 ( 0%) 90.00
val (Perception Acc=9.48, Syntax Acc=43.45, Result Acc=6.15)
Epoch time: 5m 10s
------------------------------
Epoch 100/499 (max_len=5, data=5115)
Train acc: 54.81 (abduce 75.87)
Dep:  Counter({(1, -1, 1): 1734, (-1,): 1000, (1, 3, 1, -1, 3): 794, (1, -1, 1, 1, 1): 130, (3, 3, 3, -1, 3): 102, (2, 2, -1): 76, (1, -1, 3, 1, 3): 38, (-1, 0, 0): 5, (2, 2, -1, 2, 2): 2})
Hit samples:  3881  Ave length:  3.03
Symbols:  15 [(0, 788), (1, 182), (2, 902), (3, 536), (4, 854), (5, 813), (6, 111), (7, 773), (8, 800), (9, 818), (10, 934), (11, 844), (12, 1524), (13, 114), (14, 1782)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int -> int -> int), Samples:  93,  Counter({((1, 4, 4, 3), 13): 13, ((5, 9, 4, 3), 21): 12, ((9, 0, 1, 2), 17): 8, ((3, 5, 9, 2), 17): 4, ((4, 4, 8, 7), 15): 4, ((7, 5, 5, 9), 315): 4, ((7, 8, 8, 5), 47): 3, ((3, 1, 4, 7), 84): 3, ((9, 8, 4, 5), 72): 2, ((9, 4, 8, 5), 22): 2, ((0, 0, 4, 2), 2): 2, ((6, 2, 2, 7), 19): 2, ((4, 2, 8, 7), 13): 2, ((5, 7, 8, 7), 54): 2, ((7, 6, 6, 8), 50): 2, ((6, 1, 1, 3), 4): 2, ((4, 8, 2, 9), 288): 2, ((8, 1, 1, 7), 15): 2, ((7, 2, 1, 2), 9): 2, ((8, 5, 7, 4), 20): 1, ((0, 0, 3, 9), 8): 1, ((4, 4, 0, 7), 7): 1, ((2, 4, 6, 4), 48): 1, ((3, 6, 8, 2), 15): 1, ((5, 4, 7, 7), 245): 1, ((6, 4, 4, 2), 26): 1, ((6, 4, 4, 1), 11): 1, ((9, 8, 7, 3), 75): 1, ((7, 4, 5, 7), 84): 1, ((3, 8, 4, 9), 26): 1, ((1, 4, 5, 1), 5): 1, ((4, 3, 2, 7), 13): 1, ((3, 3, 4, 0), 3): 1, ((3, 9, 7, 0), 3): 1, ((2, 2, 1, 2), 6): 1, ((3, 2, 3, 1), 7): 1, ((7, 8, 4, 6), 62): 1, ((1, 4, 4, 9), 14): 1, ((2, 1, 2, 2), 6): 1})
Symbol-06 (int -> int -> int -> int -> int), Samples:  61,  Counter({((9, 8, 9, 3), 75): 12, ((7, 1, 4, 4), 11): 5, ((0, 2, 2, 9), 18): 5, ((0, 3, 4, 0), 3): 5, ((8, 7, 5, 1), 15): 4, ((3, 4, 1, 1), 7): 4, ((6, 8, 9, 3), 13): 4, ((1, 9, 6, 8), 13): 3, ((8, 4, 8, 9), 360): 2, ((7, 1, 1, 4), 11): 2, ((8, 8, 1, 6), 6): 2, ((6, 7, 2, 8), 62): 2, ((7, 8, 1, 4), 11): 2, ((5, 2, 7, 9), 315): 1, ((2, 0, 4, 0), 2): 1, ((9, 1, 4, 9), 45): 1, ((1, 8, 4, 6), 52): 1, ((2, 4, 5, 8), 15): 1, ((0, 4, 7, 4), 11): 1, ((0, 4, 8, 3), 13): 1, ((3, 4, 5, 0), 3): 1, ((8, 4, 7, 0), 8): 1})
Symbol-13 (int -> int -> int -> int -> int), Samples:  68,  Counter({((8, 4, 8, 3), 14): 9, ((4, 4, 9, 3), 108): 7, ((4, 4, 9, 8), 76): 6, ((5, 4, 7, 3), 26): 6, ((3, 3, 1, 1), 7): 5, ((0, 4, 3, 9), 3): 5, ((4, 1, 9, 3), 7): 4, ((5, 0, 8, 7), 5): 3, ((8, 4, 3, 5), 23): 3, ((5, 5, 4, 7), 32): 2, ((7, 1, 7, 7), 14): 2, ((9, 7, 4, 7), 70): 1, ((5, 7, 4, 5), 25): 1, ((0, 0, 1, 1), 2): 1, ((8, 5, 4, 3), 16): 1, ((7, 2, 1, 1), 14): 1, ((9, 8, 7, 7), 70): 1, ((9, 1, 3, 1), 12): 1, ((3, 2, 5, 1), 15): 1, ((3, 7, 7, 6), 15): 1, ((4, 4, 9, 2), 15): 1, ((2, 2, 2, 2), 6): 1, ((0, 9, 7, 4), 0): 1, ((0, 1, 4, 1), 2): 1, ((7, 2, 2, 4), 196): 1, ((2, 5, 9, 8), 15): 1, ((7, 3, 7, 5), 105): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-01: None 0.00
Symbol-12: None 0.00
Symbol-14: None 0.00
Symbol-06: fn (lambda (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) $2 $0) $3))))) 0.45
Symbol-13: fn (lambda (lambda (lambda (lambda (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) (decr0 (decr0 $0)) $2) $3)))))) 0.30
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0)))))))))
Epoch time: 8m 4s
------------------------------
Epoch 101/499 (max_len=5, data=5115)
Train acc: 19.49 (abduce 59.04)
Dep:  Counter({(1, -1, 1): 1725, (-1,): 1000, (1, -1, 1, 1, 1): 113, (3, 3, 3, -1, 3): 98, (2, 2, -1): 76, (-1, 0, 0): 5, (2, 2, -1, 2, 2): 3})
Hit samples:  3020  Ave length:  2.48
Symbols:  15 [(0, 563), (1, 63), (2, 612), (3, 334), (4, 567), (5, 577), (6, 67), (7, 543), (8, 535), (9, 539), (10, 660), (11, 538), (12, 883), (13, 47), (14, 960)]
Semantics: 15/10/5 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  59,  Counter({((9, 4), 9): 3, ((4, 4), 4): 3, ((5, 4), 5): 3, ((9, 6), 9): 2, ((5, 2), 5): 2, ((9, 0), 9): 2, ((7, 4), 7): 2, ((2, 2), 2): 2, ((6, 0), 6): 2, ((6, 3), 6): 2, ((6, 8), 6): 1, ((6, 2), 6): 1, ((0, 9), 11): 1, ((1, 9), 9): 1, ((8, 4), 8): 1, ((9, 9), 9): 1, ((7, 0), 7): 1, ((5, 3), 5): 1, ((1, 8), 8): 1, ((0, 7), 9): 1, ((0, 0), 2): 1, ((3, 4), 3): 1, ((4, 6), 4): 1, ((9, 1), 9): 1, ((1, 6), 6): 1, ((8, 8), 8): 1, ((5, 1), 5): 1, ((4, 5), 4): 1, ((7, 8), 7): 1, ((2, 3), 2): 1, ((7, 1), 7): 1, ((2, 4), 2): 1, ((0, 4), 6): 1, ((7, 7), 7): 1, ((6, 4), 6): 1, ((3, 2), 3): 1, ((6, 6), 6): 1, ((0, 6), 8): 1, ((3, 1), 3): 1, ((9, 2), 9): 1, ((1, 7), 7): 1, ((9, 7), 9): 1, ((6, 7), 6): 1, ((1, 4), 4): 1, ((7, 2), 7): 1, ((6, 1), 6): 1})
Symbol-06 (int -> int -> int), Samples:  40,  Counter({((1, 4), 5): 2, ((0, 8), 5): 2, ((3, 2), 7): 2, ((0, 4), 5): 2, ((8, 5), 13): 2, ((6, 4), 11): 2, ((4, 7), 8): 1, ((0, 3), 5): 1, ((4, 2), 8): 1, ((7, 9), 12): 1, ((5, 5), 10): 1, ((2, 8), 6): 1, ((0, 0), 5): 1, ((9, 7), 14): 1, ((9, 4), 14): 1, ((5, 3), 10): 1, ((3, 4), 7): 1, ((7, 1), 12): 1, ((8, 4), 13): 1, ((1, 3), 5): 1, ((0, 1), 5): 1, ((6, 3), 11): 1, ((8, 6), 13): 1, ((7, 6), 12): 1, ((3, 3), 7): 1, ((6, 8), 11): 1, ((3, 7), 7): 1, ((6, 6), 11): 1, ((2, 5), 6): 1, ((4, 6), 24): 1, ((1, 9), 5): 1, ((8, 9), 72): 1, ((7, 4), 12): 1, ((4, 0), 4): 1})
Symbol-12 (int -> int -> int), Samples:  83,  Counter({((4, 2), 8): 2, ((1, 3), 3): 1, ((7, 8), 56): 1, ((3, 9), 27): 1, ((9, 8), 72): 1, ((5, 7), 35): 1, ((6, 8), 48): 1, ((7, 6), 42): 1, ((9, 7), 63): 1, ((6, 3), 18): 1, ((8, 6), 48): 1, ((6, 7), 42): 1, ((4, 8), 32): 1, ((6, 9), 54): 1, ((3, 7), 21): 1, ((8, 8), 64): 1, ((8, 5), 40): 1, ((8, 3), 24): 1, ((3, 3), 9): 1, ((7, 7), 49): 1, ((9, 6), 54): 1, ((9, 5), 45): 1, ((4, 1), 4): 1, ((2, 9), 18): 1, ((2, 8), 16): 1, ((4, 7), 28): 1, ((1, 9), 9): 1, ((9, 3), 27): 1, ((7, 4), 28): 1, ((5, 6), 30): 1, ((6, 4), 24): 1, ((7, 3), 21): 1, ((8, 4), 32): 1, ((9, 9), 81): 1, ((5, 3), 15): 1, ((7, 5), 35): 1, ((6, 5), 30): 1, ((5, 5), 25): 1, ((6, 6), 36): 1, ((8, 9), 72): 1, ((4, 9), 36): 1, ((3, 6), 18): 1, ((5, 9), 45): 1, ((3, 8), 24): 1, ((8, 7), 56): 1, ((3, 5), 15): 1, ((4, 5), 20): 1, ((2, 4), 8): 1, ((1, 4), 4): 1, ((1, 1), 1): 1, ((2, 7), 14): 1, ((9, 4), 36): 1, ((4, 6), 24): 1, ((5, 2), 10): 1, ((1, 5), 5): 1, ((7, 9), 63): 1, ((1, 7), 7): 1, ((8, 2), 16): 1, ((5, 4), 20): 1, ((2, 3), 6): 1, ((2, 5), 10): 1, ((1, 6), 6): 1, ((1, 8), 8): 1, ((2, 6), 12): 1, ((3, 1), 3): 1, ((4, 4), 16): 1, ((2, 1), 2): 1, ((9, 1), 9): 1, ((9, 2), 18): 1, ((6, 1), 6): 1, ((3, 2), 6): 1, ((5, 8), 40): 1, ((0, 0), 0): 1, ((7, 2), 14): 1, ((1, 2), 2): 1, ((3, 4), 12): 1, ((8, 1), 8): 1, ((6, 2), 12): 1, ((2, 2), 4): 1, ((4, 3), 12): 1, ((5, 1), 5): 1, ((7, 1), 7): 1})
Symbol-13 (int -> int -> int), Samples:  36,  Counter({((6, 2), 12): 2, ((3, 4), 6): 2, ((7, 2), 14): 2, ((6, 3), 12): 2, ((4, 7), 8): 2, ((6, 4), 12): 1, ((2, 4), 4): 1, ((1, 4), 2): 1, ((4, 6), 8): 1, ((1, 8), 2): 1, ((7, 1), 14): 1, ((2, 0), 4): 1, ((3, 7), 6): 1, ((8, 8), 16): 1, ((7, 7), 14): 1, ((1, 7), 2): 1, ((9, 8), 18): 1, ((6, 1), 12): 1, ((2, 7), 4): 1, ((6, 6), 12): 1, ((9, 5), 18): 1, ((0, 8), 0): 1, ((2, 2), 4): 1, ((7, 9), 63): 1, ((4, 5), 8): 1, ((8, 4), 12): 1, ((7, 8), 15): 1, ((6, 7), 12): 1, ((9, 4), 36): 1, ((6, 5), 12): 1, ((3, 8), 24): 1})
Symbol-14 (int -> int -> int), Samples:  96,  Counter({((4, 8), 12): 1, ((8, 2), 10): 1, ((0, 4), 4): 1, ((1, 6), 7): 1, ((7, 9), 16): 1, ((8, 3), 11): 1, ((9, 6), 15): 1, ((9, 9), 18): 1, ((4, 5), 9): 1, ((2, 5), 7): 1, ((8, 6), 14): 1, ((0, 7), 7): 1, ((6, 8), 14): 1, ((1, 8), 9): 1, ((5, 6), 11): 1, ((2, 8), 10): 1, ((5, 8), 13): 1, ((9, 4), 13): 1, ((9, 1), 10): 1, ((6, 3), 9): 1, ((9, 3), 12): 1, ((0, 3), 3): 1, ((4, 7), 11): 1, ((7, 1), 8): 1, ((8, 7), 15): 1, ((8, 1), 9): 1, ((7, 4), 11): 1, ((9, 7), 16): 1, ((2, 4), 6): 1, ((0, 6), 6): 1, ((6, 4), 10): 1, ((3, 7), 10): 1, ((3, 5), 8): 1, ((2, 6), 8): 1, ((6, 9), 15): 1, ((7, 3), 10): 1, ((3, 1), 4): 1, ((9, 8), 17): 1, ((7, 6), 13): 1, ((0, 9), 9): 1, ((6, 7), 13): 1, ((0, 1), 1): 1, ((0, 2), 2): 1, ((9, 2), 11): 1, ((2, 9), 11): 1, ((5, 1), 6): 1, ((9, 5), 14): 1, ((3, 6), 9): 1, ((8, 9), 17): 1, ((4, 6), 10): 1, ((5, 2), 7): 1, ((1, 9), 10): 1, ((2, 7), 9): 1, ((7, 2), 9): 1, ((1, 4), 5): 1, ((7, 8), 15): 1, ((5, 3), 8): 1, ((2, 1), 3): 1, ((4, 1), 5): 1, ((7, 7), 14): 1, ((4, 4), 8): 1, ((4, 3), 7): 1, ((6, 2), 8): 1, ((8, 8), 16): 1, ((5, 5), 10): 1, ((5, 7), 12): 1, ((0, 8), 8): 1, ((1, 2), 3): 1, ((3, 0), 3): 1, ((8, 4), 12): 1, ((6, 1), 7): 1, ((5, 4), 9): 1, ((1, 0), 1): 1, ((7, 5), 12): 1, ((4, 9), 13): 1, ((1, 1), 2): 1, ((6, 6), 12): 1, ((6, 5), 11): 1, ((3, 8), 11): 1, ((1, 5), 6): 1, ((4, 2), 6): 1, ((8, 5), 13): 1, ((2, 2), 4): 1, ((7, 0), 7): 1, ((2, 3), 5): 1, ((3, 9), 12): 1, ((1, 3), 4): 1, ((5, 0), 5): 1, ((1, 7), 8): 1, ((3, 4), 7): 1, ((3, 2), 5): 1, ((5, 9), 14): 1, ((2, 0), 2): 1, ((4, 0), 4): 1, ((8, 0), 8): 1, ((3, 3), 6): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-14: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 $1))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $1 $1))) 0.88
Symbol-12: fn (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) $0 $1))) 1.00
Symbol-01: fn (lambda (lambda (incr (if0 (decr0 $1) (incr (decr0 (decr0 $0))) (decr0 $1))))) 0.93
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (if0 (decr0 $1) 0 $1)))))))) 0.71
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) $0 $1)))
0.000000	int -> int -> int	#(lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 $1)))
Epoch time: 7m 2s
------------------------------
Epoch 102/499 (max_len=5, data=5115)
Train acc: 54.08 (abduce 75.39)
Dep:  Counter({(1, -1, 1): 1730, (-1,): 1000, (1, 3, 1, -1, 3): 764, (1, -1, 1, 1, 1): 126, (3, 3, 3, -1, 3): 112, (2, 2, -1): 80, (1, -1, 3, 1, 3): 33, (-1, 0, 0): 5, (3, 0, 0, -1, 3): 2, (-1, 3, 3, 0, 0): 1, (2, 2, -1, 2, 2): 1, (4, 3, 3, 4, -1): 1, (-1, 0, 3, 0, 3): 1})
Hit samples:  3856  Ave length:  3.02
Symbols:  15 [(0, 761), (1, 184), (2, 906), (3, 488), (4, 862), (5, 801), (6, 123), (7, 775), (8, 795), (9, 848), (10, 919), (11, 837), (12, 1468), (13, 132), (14, 1751)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int -> int -> int), Samples:  94,  Counter({((1, 4, 4, 3), 13): 13, ((5, 7, 5, 6), 35): 7, ((3, 4, 4, 9), 108): 6, ((9, 2, 1, 3), 17): 5, ((5, 1, 5, 4), 41): 4, ((5, 4, 1, 8), 37): 4, ((0, 8, 1, 5), 13): 3, ((8, 9, 5, 9), 26): 3, ((8, 8, 1, 4), 32): 3, ((3, 1, 0, 0), 3): 3, ((4, 8, 4, 1), 13): 3, ((0, 1, 2, 9), 18): 2, ((9, 1, 1, 9), 19): 2, ((9, 4, 8, 5), 22): 2, ((3, 7, 4, 8), 18): 2, ((9, 7, 7, 8), 68): 2, ((7, 7, 0, 7), 7): 2, ((6, 2, 2, 7), 19): 2, ((3, 4, 7, 9), 108): 2, ((7, 6, 1, 4), 168): 1, ((7, 5, 5, 9), 315): 1, ((2, 1, 8, 9), 12): 1, ((8, 9, 7, 1), 15): 1, ((0, 0, 4, 8), 8): 1, ((5, 0, 8, 7), 5): 1, ((3, 6, 8, 2), 15): 1, ((7, 1, 4, 4), 11): 1, ((4, 2, 8, 7), 13): 1, ((8, 7, 5, 4), 196): 1, ((7, 8, 2, 4), 70): 1, ((2, 2, 2, 2), 6): 1, ((9, 6, 4, 8), 44): 1, ((3, 6, 8, 9), 20): 1, ((3, 5, 9, 2), 17): 1, ((5, 2, 1, 1), 11): 1, ((2, 4, 4, 5), 8): 1, ((5, 1, 3, 7), 26): 1, ((9, 4, 3, 8), 44): 1, ((2, 9, 4, 4), 15): 1, ((0, 5, 4, 8), 42): 1, ((8, 3, 8, 0), 3): 1, ((6, 2, 4, 1), 9): 1, ((4, 6, 4, 9), 19): 1})
Symbol-06 (int -> int -> int -> int -> int), Samples:  68,  Counter({((0, 8, 4, 1), 13): 12, ((7, 4, 9, 8), 15): 11, ((3, 4, 7, 8), 18): 7, ((4, 9, 9, 2), 15): 4, ((7, 1, 4, 4), 11): 3, ((7, 1, 7, 7), 14): 3, ((2, 7, 1, 3), 4): 3, ((7, 3, 7, 5), 105): 2, ((9, 2, 2, 7), 126): 2, ((8, 1, 1, 7), 15): 2, ((5, 2, 7, 9), 315): 2, ((2, 4, 4, 4), 38): 2, ((5, 7, 2, 4), 39): 1, ((0, 2, 2, 9), 18): 1, ((9, 4, 6, 4), 13): 1, ((7, 6, 6, 8), 50): 1, ((1, 0, 4, 0), 2): 1, ((5, 7, 8, 7), 54): 1, ((0, 1, 3, 0), 3): 1, ((7, 0, 8, 2), 17): 1, ((2, 2, 4, 0), 6): 1, ((8, 7, 7, 1), 15): 1, ((2, 4, 7, 7), 16): 1, ((8, 8, 0, 7), 168): 1, ((7, 1, 4, 1), 12): 1, ((1, 1, 8, 5), 13): 1, ((3, 9, 0, 0), 3): 1})
Symbol-13 (int -> int -> int), Samples:  64,  Counter({((6, 2), 12): 3, ((3, 4), 6): 3, ((7, 2), 14): 3, ((6, 3), 12): 3, ((4, 7), 8): 3, ((6, 4), 12): 3, ((2, 2), 4): 2, ((0, 8), 0): 2, ((4, 6), 8): 2, ((9, 8), 18): 2, ((2, 7), 4): 2, ((3, 7), 6): 2, ((2, 4), 4): 2, ((6, 1), 12): 2, ((4, 5), 8): 2, ((2, 0), 4): 2, ((6, 6), 12): 2, ((3, 2), 6): 2, ((9, 5), 18): 2, ((1, 7), 2): 2, ((7, 1), 14): 2, ((1, 4), 2): 2, ((8, 8), 16): 2, ((7, 7), 14): 2, ((1, 8), 2): 2, ((8, 9), 16): 1, ((5, 1), 10): 1, ((6, 7), 12): 1, ((3, 8), 6): 1, ((9, 6), 18): 1, ((3, 5), 6): 1, ((6, 5), 12): 1, ((5, 3), 10): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-12: None 0.00
Symbol-13: None 0.00
Symbol-14: None 0.00
Symbol-01: fn (lambda (lambda (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 $1))) $3 (#(lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) $0 $1))) $0 $1)))))) 0.32
Symbol-06: fn (lambda (lambda (lambda (lambda (incr (incr (incr (incr (incr (#(lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 $1))) $2 (decr0 $3))))))))))) 0.32
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) $0 $1)))
0.000000	int -> int -> int	#(lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 $1)))
Epoch time: 8m 20s
------------------------------
Epoch 103/499 (max_len=5, data=5115)
Train acc: 19.51 (abduce 59.41)
Dep:  Counter({(1, -1, 1): 1726, (-1,): 1000, (1, -1, 1, 1, 1): 121, (3, 3, 3, -1, 3): 110, (2, 2, -1): 77, (-1, 0, 0): 4, (2, 2, -1, 2, 2): 1})
Hit samples:  3039  Ave length:  2.49
Symbols:  15 [(0, 550), (1, 103), (2, 616), (3, 363), (4, 570), (5, 587), (6, 48), (7, 538), (8, 556), (9, 539), (10, 665), (11, 558), (12, 873), (13, 39), (14, 976)]
Semantics: 15/10/5 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  62,  Counter({((5, 4), 5): 4, ((4, 4), 4): 3, ((9, 4), 9): 3, ((7, 4), 7): 2, ((5, 2), 5): 2, ((2, 2), 2): 2, ((9, 0), 9): 2, ((6, 0), 6): 2, ((2, 4), 2): 2, ((9, 6), 9): 2, ((6, 3), 6): 2, ((8, 2), 8): 1, ((1, 6), 6): 1, ((4, 6), 4): 1, ((6, 8), 6): 1, ((0, 9), 11): 1, ((0, 6), 8): 1, ((8, 4), 8): 1, ((9, 9), 9): 1, ((4, 5), 4): 1, ((1, 8), 8): 1, ((1, 9), 9): 1, ((0, 0), 2): 1, ((0, 7), 9): 1, ((7, 0), 7): 1, ((6, 2), 6): 1, ((1, 7), 7): 1, ((3, 2), 3): 1, ((6, 4), 6): 1, ((3, 3), 3): 1, ((5, 3), 5): 1, ((6, 6), 6): 1, ((9, 1), 9): 1, ((3, 4), 3): 1, ((7, 8), 7): 1, ((3, 1), 3): 1, ((7, 7), 7): 1, ((7, 1), 7): 1, ((8, 8), 8): 1, ((9, 7), 9): 1, ((1, 4), 4): 1, ((6, 7), 6): 1, ((0, 4), 6): 1, ((5, 1), 5): 1, ((2, 3), 2): 1, ((9, 2), 9): 1, ((7, 2), 7): 1})
Symbol-06 (int -> int -> int), Samples:  39,  Counter({((0, 4), 5): 2, ((8, 5), 13): 2, ((1, 4), 5): 2, ((3, 2), 7): 2, ((0, 8), 5): 2, ((6, 6), 11): 2, ((0, 0), 5): 1, ((4, 2), 8): 1, ((8, 6), 13): 1, ((0, 1), 5): 1, ((2, 8), 6): 1, ((3, 7), 7): 1, ((7, 9), 12): 1, ((7, 1), 12): 1, ((3, 3), 7): 1, ((6, 3), 11): 1, ((9, 7), 14): 1, ((4, 7), 8): 1, ((5, 3), 10): 1, ((1, 3), 5): 1, ((3, 4), 7): 1, ((6, 8), 11): 1, ((7, 6), 12): 1, ((0, 3), 5): 1, ((9, 4), 14): 1, ((8, 4), 13): 1, ((6, 4), 11): 1, ((2, 5), 6): 1, ((5, 1), 6): 1, ((1, 9), 5): 1, ((4, 6), 24): 1, ((7, 4), 12): 1, ((5, 0), 10): 1})
Symbol-12 (int -> int -> int), Samples:  83,  Counter({((4, 2), 8): 2, ((1, 3), 3): 1, ((8, 5), 40): 1, ((3, 7), 21): 1, ((5, 6), 30): 1, ((9, 8), 72): 1, ((7, 8), 56): 1, ((6, 8), 48): 1, ((8, 8), 64): 1, ((1, 9), 9): 1, ((9, 7), 63): 1, ((6, 3), 18): 1, ((8, 3), 24): 1, ((5, 7), 35): 1, ((8, 6), 48): 1, ((9, 3), 27): 1, ((3, 3), 9): 1, ((3, 9), 27): 1, ((2, 8), 16): 1, ((6, 9), 54): 1, ((4, 7), 28): 1, ((6, 7), 42): 1, ((4, 5), 20): 1, ((1, 1), 1): 1, ((5, 9), 45): 1, ((7, 7), 49): 1, ((4, 8), 32): 1, ((8, 4), 32): 1, ((7, 6), 42): 1, ((4, 1), 4): 1, ((2, 4), 8): 1, ((9, 6), 54): 1, ((2, 9), 18): 1, ((9, 4), 36): 1, ((8, 9), 72): 1, ((9, 9), 81): 1, ((5, 3), 15): 1, ((5, 4), 20): 1, ((3, 8), 24): 1, ((3, 5), 15): 1, ((7, 3), 21): 1, ((1, 5), 5): 1, ((9, 5), 45): 1, ((7, 5), 35): 1, ((7, 4), 28): 1, ((4, 6), 24): 1, ((3, 6), 18): 1, ((6, 6), 36): 1, ((7, 9), 63): 1, ((4, 4), 16): 1, ((4, 9), 36): 1, ((1, 4), 4): 1, ((8, 7), 56): 1, ((2, 7), 14): 1, ((8, 2), 16): 1, ((6, 5), 30): 1, ((1, 7), 7): 1, ((5, 5), 25): 1, ((3, 4), 12): 1, ((1, 6), 6): 1, ((3, 1), 3): 1, ((3, 2), 6): 1, ((2, 5), 10): 1, ((2, 1), 2): 1, ((9, 2), 18): 1, ((9, 1), 9): 1, ((1, 8), 8): 1, ((5, 2), 10): 1, ((2, 3), 6): 1, ((2, 6), 12): 1, ((6, 4), 24): 1, ((6, 1), 6): 1, ((6, 2), 12): 1, ((7, 2), 14): 1, ((5, 8), 40): 1, ((5, 1), 5): 1, ((1, 2), 2): 1, ((8, 1), 8): 1, ((4, 3), 12): 1, ((2, 2), 4): 1, ((0, 0), 0): 1, ((7, 1), 7): 1})
Symbol-13 (int -> int -> int), Samples:  36,  Counter({((7, 2), 14): 2, ((6, 2), 12): 2, ((6, 3), 12): 2, ((3, 4), 6): 2, ((2, 2), 4): 2, ((6, 6), 12): 1, ((6, 1), 12): 1, ((2, 7), 4): 1, ((1, 4), 2): 1, ((3, 7), 6): 1, ((9, 8), 18): 1, ((8, 8), 16): 1, ((4, 6), 8): 1, ((2, 4), 4): 1, ((3, 2), 6): 1, ((6, 4), 12): 1, ((1, 7), 2): 1, ((4, 7), 8): 1, ((0, 8), 0): 1, ((1, 8), 2): 1, ((7, 1), 14): 1, ((2, 0), 4): 1, ((7, 7), 14): 1, ((9, 5), 18): 1, ((4, 5), 8): 1, ((3, 8), 6): 1, ((8, 4), 12): 1, ((7, 8), 15): 1, ((5, 1), 10): 1, ((6, 5), 30): 1, ((8, 0), 8): 1})
Symbol-14 (int -> int -> int), Samples:  95,  Counter({((4, 8), 12): 1, ((0, 4), 4): 1, ((8, 2), 10): 1, ((1, 6), 7): 1, ((7, 9), 16): 1, ((9, 4), 13): 1, ((8, 7), 15): 1, ((6, 4), 10): 1, ((8, 1), 9): 1, ((6, 8), 14): 1, ((2, 8), 10): 1, ((9, 3), 12): 1, ((5, 8), 13): 1, ((8, 3), 11): 1, ((0, 3), 3): 1, ((9, 8), 17): 1, ((4, 7), 11): 1, ((8, 6), 14): 1, ((9, 9), 18): 1, ((2, 4), 6): 1, ((4, 5), 9): 1, ((5, 6), 11): 1, ((1, 8), 9): 1, ((0, 7), 7): 1, ((9, 1), 10): 1, ((2, 6), 8): 1, ((0, 9), 9): 1, ((2, 5), 7): 1, ((9, 7), 16): 1, ((9, 6), 15): 1, ((3, 7), 10): 1, ((0, 6), 6): 1, ((7, 1), 8): 1, ((6, 3), 9): 1, ((3, 5), 8): 1, ((8, 9), 17): 1, ((7, 3), 10): 1, ((4, 1), 5): 1, ((2, 9), 11): 1, ((3, 1), 4): 1, ((7, 6), 13): 1, ((2, 1), 3): 1, ((9, 5), 14): 1, ((9, 2), 11): 1, ((3, 6), 9): 1, ((5, 3), 8): 1, ((4, 6), 10): 1, ((0, 1), 1): 1, ((2, 7), 9): 1, ((5, 2), 7): 1, ((4, 4), 8): 1, ((1, 4), 5): 1, ((7, 2), 9): 1, ((6, 9), 15): 1, ((6, 7), 13): 1, ((1, 9), 10): 1, ((7, 4), 11): 1, ((5, 1), 6): 1, ((7, 8), 15): 1, ((7, 7), 14): 1, ((5, 7), 12): 1, ((4, 2), 6): 1, ((6, 2), 8): 1, ((6, 1), 7): 1, ((5, 4), 9): 1, ((1, 2), 3): 1, ((4, 9), 13): 1, ((5, 5), 10): 1, ((0, 8), 8): 1, ((1, 0), 1): 1, ((6, 6), 12): 1, ((3, 0), 3): 1, ((7, 5), 12): 1, ((8, 8), 16): 1, ((6, 5), 11): 1, ((1, 1), 2): 1, ((0, 2), 2): 1, ((3, 8), 11): 1, ((1, 5), 6): 1, ((1, 3), 4): 1, ((4, 3), 7): 1, ((8, 4), 12): 1, ((7, 0), 7): 1, ((2, 2), 4): 1, ((4, 0), 4): 1, ((2, 3), 5): 1, ((5, 9), 14): 1, ((3, 9), 12): 1, ((1, 7), 8): 1, ((5, 0), 5): 1, ((3, 2), 5): 1, ((3, 4), 7): 1, ((8, 5), 13): 1, ((2, 0), 2): 1, ((8, 0), 8): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-14: fn (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 $1))) $0 $1))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 $1))) $1 $1))) 0.91
Symbol-12: fn (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) $0 $1))) $0 $1))) 1.00
Symbol-01: fn (lambda (lambda (if0 $1 (incr (incr $0)) $1))) 0.92
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr $1))))))) 0.61
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) $0 $1))) $0 $1)))
0.000000	int -> int -> int	#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 $1))) $0 $1)))
Epoch time: 7m 5s
------------------------------
Epoch 104/499 (max_len=5, data=5115)
Train acc: 54.23 (abduce 75.78)
Dep:  Counter({(1, -1, 1): 1734, (-1,): 1000, (1, 3, 1, -1, 3): 800, (1, -1, 1, 1, 1): 117, (3, 3, 3, -1, 3): 94, (2, 2, -1): 74, (1, -1, 3, 1, 3): 48, (-1, 0, 0): 3, (3, 0, 0, -1, 3): 3, (2, 2, -1, 2, 2): 1, (1, -1, 4, 4, 1): 1, (4, 4, 4, 4, -1): 1})
Hit samples:  3876  Ave length:  3.03
Symbols:  15 [(0, 803), (1, 166), (2, 887), (3, 543), (4, 878), (5, 803), (6, 108), (7, 770), (8, 784), (9, 806), (10, 915), (11, 841), (12, 1570), (13, 118), (14, 1766)]
Learn perception with 3624 samples, take 319 sec.
Learn syntax with 3624 samples, take 2 sec.
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 100.00
3 ( 0%) 90.00
4 ( 0%) 90.00
5 ( 0%) 80.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 90.00
9 ( 0%) 100.00
val (Perception Acc=9.68, Syntax Acc=76.39, Result Acc=15.25)
Epoch time: 5m 34s
------------------------------
Epoch 105/499 (max_len=5, data=5115)
Train acc: 75.68 (abduce 95.52)
Dep:  Counter({(1, 3, 1, -1, 3): 1773, (1, -1, 1): 1732, (-1,): 1000, (1, -1, 3, 1, 3): 181, (1, -1, 1, 1, 1): 82, (2, 2, -1): 74, (3, 3, 3, -1, 3): 39, (-1, 0, 0): 3, (2, 2, 3, -1, 3): 1, (1, 4, 1, 4, -1): 1})
Hit samples:  4886  Ave length:  3.44
Symbols:  15 [(0, 1009), (1, 255), (2, 1299), (3, 755), (4, 1168), (5, 1099), (6, 157), (7, 1110), (8, 1100), (9, 1142), (10, 1169), (11, 1119), (12, 2392), (13, 198), (14, 2840)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  90,  Counter({((5, 4), 5): 5, ((4, 4), 4): 4, ((9, 6), 9): 4, ((9, 4), 9): 4, ((6, 7), 6): 3, ((2, 4), 2): 3, ((6, 0), 6): 3, ((5, 2), 5): 3, ((9, 0), 9): 3, ((7, 7), 7): 3, ((9, 8), 23): 3, ((8, 2), 8): 3, ((6, 4), 6): 3, ((2, 2), 2): 3, ((6, 3), 6): 2, ((3, 1), 3): 2, ((9, 1), 9): 2, ((8, 4), 8): 2, ((8, 3), 8): 2, ((7, 4), 7): 1, ((7, 8), 7): 1, ((5, 3), 5): 1, ((13, 9), 45): 1, ((6, 2), 6): 1, ((6, 8), 6): 1, ((0, 4), 6): 1, ((2, 3), 2): 1, ((4, 6), 4): 1, ((7, 1), 7): 1, ((0, 9), 11): 1, ((0, 0), 2): 1, ((9, 2), 9): 1, ((7, 0), 7): 1, ((9, 7), 9): 1, ((6, 6), 6): 1, ((3, 3), 3): 1, ((0, 6), 8): 1, ((4, 5), 4): 1, ((3, 4), 3): 1, ((3, 2), 3): 1, ((9, 9), 9): 1, ((8, 8), 8): 1, ((21, 1), 35): 1, ((13, 1), 13): 1, ((11, 7), 23): 1, ((0, 7), 9): 1, ((10, 9), 135): 1, ((7, 6), 15): 1, ((3, 5), 3): 1, ((6, 1), 6): 1, ((15, 4), 15): 1, ((15, 5), 47): 1})
Symbol-06 (int -> int -> int), Samples:  98,  Counter({((6, 4), 11): 8, ((0, 4), 5): 8, ((8, 5), 13): 5, ((0, 8), 5): 5, ((0, 3), 5): 5, ((9, 7), 14): 5, ((2, 2), 7): 4, ((3, 3), 8): 3, ((8, 6), 13): 3, ((6, 3), 11): 3, ((9, 9), 25): 3, ((0, 1), 5): 3, ((7, 6), 12): 3, ((5, 3), 10): 3, ((0, 0), 5): 3, ((9, 4), 14): 3, ((25, 7), 32): 3, ((0, 5), 5): 3, ((2, 7), 7): 3, ((7, 1), 12): 2, ((5, 0), 10): 2, ((17, 5), 9): 2, ((7, 9), 12): 2, ((1, 5), 6): 2, ((2, 3), 7): 2, ((2, 6), 7): 2, ((10, 4), 19): 1, ((63, 8), 68): 1, ((10, 1), 32): 1, ((8, 8), 15): 1, ((9, 8), 23): 1, ((2, 8), 7): 1, ((8, 2), 15): 1, ((3, 7), 8): 1})
Symbol-13 (int -> int -> int), Samples:  92,  Counter({((6, 2), 12): 6, ((7, 2), 14): 4, ((6, 3), 12): 4, ((3, 4), 6): 4, ((4, 7), 8): 4, ((6, 4), 12): 4, ((0, 8), 0): 2, ((13, 8), 62): 2, ((1, 4), 2): 2, ((10, 6), 35): 2, ((6, 6), 12): 2, ((4, 5), 8): 2, ((2, 7), 4): 2, ((1, 8), 2): 2, ((2, 4), 4): 2, ((8, 8), 16): 2, ((3, 7), 6): 2, ((9, 8), 18): 2, ((6, 1), 12): 2, ((7, 7), 14): 2, ((7, 1), 14): 2, ((1, 7), 2): 2, ((2, 0), 4): 2, ((4, 6), 8): 2, ((0, 6), 0): 2, ((11, 8), 74): 2, ((3, 2), 6): 2, ((9, 5), 18): 2, ((6, 7), 12): 2, ((3, 8), 6): 2, ((5, 5), 10): 2, ((5, 1), 10): 2, ((14, 8), 62): 2, ((9, 6), 30): 2, ((24, 1), 168): 2, ((6, 5), 12): 1, ((3, 5), 6): 1, ((8, 9), 16): 1, ((13, 6), 43): 1, ((4, 2), 7): 1, ((5, 6), 15): 1, ((3, 6), 13): 1, ((10, 4), 19): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 $1))) $0 $1))) $1 $1))) 0.79
Symbol-14: fn (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 $1))) $0 $1))) 1.00
Symbol-12: fn (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) $0 $1))) $0 $1))) 1.00
Symbol-01: fn (lambda (lambda (incr (incr (if0 $1 $0 (decr0 (decr0 $1))))))) 0.86
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr $1))))))) 0.84
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) $0 $1))) $0 $1)))
0.000000	int -> int -> int	#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 $1))) $0 $1)))
Epoch time: 7m 12s
------------------------------
Epoch 106/499 (max_len=5, data=5115)
Train acc: 75.99 (abduce 95.72)
Dep:  Counter({(1, 3, 1, -1, 3): 1774, (1, -1, 1): 1736, (-1,): 1000, (1, -1, 3, 1, 3): 178, (1, -1, 1, 1, 1): 89, (2, 2, -1): 69, (3, 3, 3, -1, 3): 42, (-1, 0, 0): 4, (3, 0, 0, -1, 3): 1, (1, 4, 1, 4, -1): 1, (-1, 3, 3, 0, 0): 1, (2, 2, 3, -1, 3): 1})
Hit samples:  4896  Ave length:  3.44
Symbols:  15 [(0, 1000), (1, 265), (2, 1307), (3, 767), (4, 1168), (5, 1092), (6, 170), (7, 1127), (8, 1097), (9, 1126), (10, 1188), (11, 1138), (12, 2378), (13, 180), (14, 2859)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  85,  Counter({((5, 4), 5): 5, ((9, 4), 9): 4, ((4, 4), 4): 4, ((6, 7), 6): 4, ((2, 4), 2): 3, ((9, 0), 9): 3, ((7, 7), 7): 3, ((6, 0), 6): 3, ((2, 2), 2): 3, ((5, 2), 5): 3, ((8, 2), 8): 3, ((9, 6), 9): 2, ((9, 1), 9): 2, ((7, 8), 7): 2, ((9, 8), 23): 2, ((8, 3), 8): 2, ((5, 3), 5): 1, ((1, 2), 2): 1, ((6, 2), 6): 1, ((4, 5), 4): 1, ((6, 6), 6): 1, ((6, 3), 6): 1, ((0, 6), 8): 1, ((6, 4), 6): 1, ((3, 1), 3): 1, ((0, 4), 6): 1, ((8, 8), 8): 1, ((0, 9), 11): 1, ((2, 3), 2): 1, ((3, 2), 3): 1, ((6, 8), 6): 1, ((9, 7), 9): 1, ((4, 6), 4): 1, ((7, 1), 7): 1, ((9, 9), 9): 1, ((0, 0), 2): 1, ((7, 0), 7): 1, ((9, 5), 9): 1, ((9, 2), 9): 1, ((0, 7), 9): 1, ((8, 4), 8): 1, ((5, 1), 5): 1, ((10, 6), 35): 1, ((13, 1), 13): 1, ((10, 9), 135): 1, ((11, 7), 23): 1, ((3, 3), 3): 1, ((3, 5), 3): 1, ((35, 8), 35): 1, ((12, 3), 26): 1, ((13, 8), 76): 1, ((10, 3), 14): 1, ((14, 6), 41): 1})
Symbol-06 (int -> int -> int), Samples: 100,  Counter({((0, 4), 5): 8, ((8, 5), 13): 6, ((0, 8), 5): 5, ((6, 4), 11): 5, ((9, 7), 14): 5, ((5, 3), 10): 4, ((2, 2), 7): 3, ((2, 6), 7): 3, ((6, 3), 11): 3, ((2, 3), 7): 3, ((2, 8), 6): 3, ((9, 4), 14): 3, ((5, 2), 10): 3, ((8, 6), 13): 3, ((8, 4), 13): 3, ((5, 5), 10): 3, ((0, 1), 5): 3, ((2, 7), 7): 3, ((0, 3), 5): 3, ((7, 6), 12): 3, ((7, 9), 12): 3, ((3, 3), 8): 3, ((0, 5), 5): 2, ((0, 0), 5): 2, ((1, 5), 6): 2, ((7, 1), 12): 2, ((6, 8), 11): 2, ((1, 1), 6): 2, ((10, 8), 45): 1, ((13, 6), 43): 1, ((9, 5), 17): 1, ((11, 3), 16): 1, ((17, 3), 22): 1, ((8, 2), 15): 1, ((0, 7), 5): 1})
Symbol-13 (int -> int -> int), Samples:  91,  Counter({((4, 7), 8): 6, ((3, 2), 6): 5, ((7, 2), 14): 5, ((6, 2), 12): 4, ((3, 4), 6): 4, ((6, 3), 12): 4, ((6, 4), 12): 4, ((0, 8), 0): 2, ((4, 6), 8): 2, ((2, 7), 4): 2, ((9, 8), 18): 2, ((1, 8), 2): 2, ((1, 4), 2): 2, ((8, 8), 16): 2, ((3, 7), 6): 2, ((4, 5), 8): 2, ((6, 6), 12): 2, ((2, 0), 4): 2, ((7, 1), 14): 2, ((7, 7), 14): 2, ((2, 4), 4): 2, ((9, 5), 18): 2, ((6, 7), 12): 2, ((13, 8), 62): 2, ((5, 1), 10): 2, ((5, 3), 10): 2, ((3, 8), 6): 2, ((8, 9), 16): 2, ((9, 6), 18): 2, ((36, 6), 30): 2, ((9, 2), 15): 2, ((6, 5), 12): 2, ((3, 5), 6): 2, ((21, 3), 168): 2, ((3, 6), 13): 1, ((8, 6), 16): 1, ((6, 1), 12): 1, ((14, 4), 41): 1, ((8, 4), 25): 1})
Symbol-03: 0 0 1.00
Symbol-04: 1 (incr 0) 1.00
Symbol-09: 2 (incr (incr 0)) 1.00
Symbol-08: 3 (incr (incr (incr 0))) 1.00
Symbol-10: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-00: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-02: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-05: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-11: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-13: fn (lambda (lambda (#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 $1))) $0 $1))) $1 $1))) 0.86
Symbol-14: fn (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 $1))) $0 $1))) 1.00
Symbol-12: fn (lambda (lambda (#(lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) $0 $1))) $0 $1))) 1.00
Symbol-01: fn (lambda (lambda (incr (if0 $1 (incr $0) (incr (decr0 (decr0 $1))))))) 0.87
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr $1))))))) 0.89
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $1 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) ($2 (decr0 $0) $1) $1)))))))) $0 $1))) $0 $1)))
0.000000	int -> int -> int	#(lambda (lambda (#(lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 ($2 (incr $1) (decr0 $0))))))))) $0 $1))) $0 $1)))
Epoch time: 7m 14s
------------------------------
Epoch 107/499 (max_len=5, data=5115)
Train acc: 75.91 (abduce 95.99)
Dep:  Counter({(1, 3, 1, -1, 3): 1804, (1, -1, 1): 1739, (-1,): 1000, (1, -1, 3, 1, 3): 170, (1, -1, 1, 1, 1): 77, (2, 2, -1): 68, (3, 3, 3, -1, 3): 45, (-1, 0, 0): 2, (2, 2, 3, -1, 3): 2, (-1, 0, 3, 0, 3): 1, (3, 0, 0, -1, 3): 1, (1, 4, 1, 4, -1): 1})
Hit samples:  4910  Ave length:  3.45
Symbols:  15 [(0, 1020), (1, 246), (2, 1298), (3, 774), (4, 1187), (5, 1099), (6, 176), (7, 1124), (8, 1115), (9, 1119), (10, 1184), (11, 1123), (12, 2392), (13, 186), (14, 2889)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-01 (int -> int -> int), Samples:  90,  Counter({((5, 4), 5): 6, ((4, 4), 4): 4, ((9, 4), 9): 4, ((6, 7), 6): 3, ((9, 0), 9): 3, ((6, 0), 6): 3, ((2, 2), 2): 3, ((9, 6), 9): 3, ((2, 4), 2): 3, ((5, 2), 5): 3, ((9, 8), 23): 3, ((6, 3), 6): 3, ((8, 2), 8): 2, ((7, 7), 7): 2, ((8, 3), 8): 2, ((3, 4), 3): 2, ((9, 1), 9): 2, ((4, 6), 4): 2, ((6, 4), 6): 1, ((7, 4), 7): 1, ((7, 0), 7): 1, ((6, 8), 6): 1, ((0, 9), 11): 1, ((6, 6), 6): 1, ((3, 1), 3): 1, ((8, 4), 8): 1, ((4, 5), 4): 1, ((9, 2), 9): 1, ((6, 2), 6): 1, ((1, 9), 2): 1, ((3, 3), 3): 1, ((8, 8), 8): 1, ((0, 0), 2): 1, ((0, 4), 6): 1, ((9, 7), 9): 1, ((5, 3), 5): 1, ((7, 1), 7): 1, ((9, 9), 9): 1, ((2, 3), 2): 1, ((7, 8), 7): 1, ((10, 6), 35): 1, ((6, 1), 6): 1, ((9, 5), 9): 1, ((21, 8), 112): 1, ((11, 7), 23): 1, ((5, 1), 5): 1, ((3, 2), 3): 1, ((0, 6), 8): 1, ((7, 6), 15): 1, ((13, 1), 13): 1, ((3, 5), 3): 1, ((5, 6), 15): 1, ((11, 8), 74): 1, ((12, 3), 26): 1, ((16, 2), 16): 1})
Symbol-06 (int -> int -> int), Samples:  89,  Counter({((0, 4), 5): 7, ((6, 4), 11): 7, ((0, 3), 5): 6, ((8, 5), 13): 6, ((0, 8), 5): 5, ((9, 7), 14): 4, ((2, 3), 7): 2, ((8, 6), 13): 2, ((5, 5), 10): 2, ((0, 1), 5): 2, ((8, 4), 13): 2, ((7, 6), 12): 2, ((1, 5), 6): 2, ((6, 3), 11): 2, ((5, 2), 10): 2, ((7, 9), 12): 2, ((7, 1), 12): 2, ((9, 9), 25): 2, ((5, 3), 10): 2, ((2, 2), 7): 2, ((0, 5), 5): 2, ((2, 7), 7): 2, ((13, 8), 44): 2, ((6, 8), 11): 2, ((9, 8), 37): 2, ((1, 1), 6): 2, ((9, 2), 33): 2, ((15, 3), 135): 1, ((3, 3), 8): 1, ((14, 4), 41): 1, ((7, 4), 12): 1, ((13, 0), 6): 1, ((9, 6), 65): 1, ((10, 4), 19): 1, ((4, 2), 7): 1, ((15, 0), 45): 1, ((63, 8), 68): 1, ((2, 6), 7): 1, ((8, 7), 14): 1})
Symbol-13 (int -> int -> int), Samples:  93,  Counter({((7, 2), 14): 5, ((6, 2), 12): 5, ((3, 4), 6): 5, ((6, 3), 12): 4, ((4, 7), 8): 4, ((6, 4), 12): 4, ((3, 2), 6): 3, ((13, 8), 62): 3, ((0, 8), 0): 2, ((6, 6), 12): 2, ((4, 6), 8): 2, ((6, 1), 12): 2, ((9, 8), 18): 2, ((2, 4), 4): 2, ((1, 7), 2): 2, ((2, 7), 4): 2, ((7, 7), 14): 2, ((1, 4), 2): 2, ((0, 6), 0): 2, ((4, 5), 8): 2, ((1, 8), 2): 2, ((9, 5), 18): 2, ((7, 1), 14): 2, ((9, 2), 15): 2, ((6, 7), 12): 2, ((3, 8), 6): 2, ((9, 6), 18): 2, ((6, 5), 12): 2, ((2, 0), 4): 2, ((5, 1), 10): 2, ((3, 5), 6): 2, ((5, 4), 10): 2, ((8, 9), 16): 2, ((10, 6), 35): 2, ((4, 2), 7): 2, ((3, 27), 135): 1, ((15, 5), 47): 1, ((10, 3), 14): 1, ((3, 6), 13): 1, ((13, 6), 43): 1, ((16, 3), 14): 1})
