train: 5727 val: 4046 test: 11316
CUDA is available?: True
using cuda?: True
------------------------------
Epoch 0/499 (max_len=1, data=1000)
Train acc: 0.00 (abduce 100.00)
Dep:  Counter({(-1,): 1000})
Hit samples:  1000  Ave length:  1.0
Symbols:  15 [(0, 70), (1, 61), (2, 82), (3, 63), (4, 73), (5, 58), (6, 61), (7, 65), (8, 74), (9, 61), (10, 71), (11, 61), (12, 56), (13, 71), (14, 73)]
Semantics: 15/0/11 (total/solved/learn).
Symbol-00 (int), Samples:  10,  Counter({((), 0): 10})
Symbol-01 (int), Samples:  10,  Counter({((), 6): 10})
Symbol-02 (int), Samples:  14,  Counter({((), 3): 14})
Symbol-04 (int), Samples:  12,  Counter({((), 4): 12})
Symbol-07 (int), Samples:  12,  Counter({((), 5): 12})
Symbol-08 (int), Samples:  13,  Counter({((), 2): 13})
Symbol-10 (int), Samples:  15,  Counter({((), 8): 15})
Symbol-11 (int), Samples:  10,  Counter({((), 0): 10})
Symbol-12 (int), Samples:  11,  Counter({((), 3): 11})
Symbol-13 (int), Samples:  11,  Counter({((), 5): 11})
Symbol-14 (int), Samples:  10,  Counter({((), 0): 10})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Symbol-00: 0 0 1.00
Symbol-08: 2 (incr (incr 0)) 1.00
Symbol-02: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-10: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-03: None 0.00
Symbol-05: None 0.00
Symbol-06: None 0.00
Symbol-09: None 0.00
Symbol-11: None 0.00
Symbol-12: None 0.00
Symbol-13: None 0.00
Symbol-14: None 0.00
Epoch time: 0m 18s
------------------------------
Epoch 1/499 (max_len=1, data=1000)
Train acc: 4.37 (abduce 100.00)
Dep:  Counter({(-1,): 1000})
Hit samples:  1000  Ave length:  1.0
Symbols:  15 [(0, 100), (1, 100), (2, 100), (3, 16), (4, 100), (5, 17), (6, 22), (7, 100), (8, 100), (9, 76), (10, 100), (11, 19), (12, 23), (13, 88), (14, 39)]
Semantics: 15/7/3 (total/solved/learn).
Symbol-09 (int), Samples:  30,  Counter({((), 9): 30})
Symbol-13 (int), Samples:  35,  Counter({((), 7): 35})
Symbol-14 (int), Samples:  14,  Counter({((), 1): 14})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Symbol-00: 0 0 1.00
Symbol-14: 1 (incr 0) 1.00
Symbol-08: 2 (incr (incr 0)) 1.00
Symbol-02: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-13: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-10: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-03: None 0.00
Symbol-05: None 0.00
Symbol-06: None 0.00
Symbol-11: None 0.00
Symbol-12: None 0.00
Epoch time: 0m 15s
------------------------------
Epoch 2/499 (max_len=1, data=1000)
Train acc: 5.88 (abduce 100.00)
Dep:  Counter({(-1,): 1000})
Hit samples:  1000  Ave length:  1.0
Symbols:  10 [(0, 100), (1, 100), (2, 100), (4, 100), (7, 100), (8, 100), (9, 100), (10, 100), (13, 100), (14, 100)]
Semantics: 15/10/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-14: 1 (incr 0) 1.00
Symbol-08: 2 (incr (incr 0)) 1.00
Symbol-02: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-13: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-10: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-03: None 0.00
Symbol-05: None 0.00
Symbol-06: None 0.00
Symbol-11: None 0.00
Symbol-12: None 0.00
Epoch time: 0m 0s
------------------------------
Epoch 3/499 (max_len=1, data=1000)
Train acc: 5.98 (abduce 100.00)
Dep:  Counter({(-1,): 1000})
Hit samples:  1000  Ave length:  1.0
Symbols:  10 [(0, 100), (1, 100), (2, 100), (4, 100), (7, 100), (8, 100), (9, 100), (10, 100), (13, 100), (14, 100)]
Semantics: 15/10/0 (total/solved/learn).
Symbol-00: 0 0 1.00
Symbol-14: 1 (incr 0) 1.00
Symbol-08: 2 (incr (incr 0)) 1.00
Symbol-02: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-13: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-10: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-03: None 0.00
Symbol-05: None 0.00
Symbol-06: None 0.00
Symbol-11: None 0.00
Symbol-12: None 0.00
Epoch time: 0m 0s
------------------------------
Epoch 4/499 (max_len=1, data=1000)
Train acc: 7.61 (abduce 100.00)
Dep:  Counter({(-1,): 1000})
Hit samples:  1000  Ave length:  1.0
Symbols:  10 [(0, 100), (1, 100), (2, 100), (4, 100), (7, 100), (8, 100), (9, 100), (10, 100), (13, 100), (14, 100)]
Learn syntax with 1000 samples for 500 iterations, take 2 sec.
Learn perception with 1000 samples for 500 iterations, take 113 sec.
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 90.00
3 ( 0%) 70.00
4 ( 0%) 90.00
5 ( 0%) 80.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 70.00
9 ( 0%) 90.00
val (Perception Acc=20.44, Syntax Acc=32.73, Result Acc=2.20)
Epoch time: 2m 0s
------------------------------
Epoch 5/499 (max_len=3, data=2820)
Train acc: 32.78 (abduce 65.25)
Dep:  Counter({(-1,): 1000, (1, -1, 1): 489, (2, 2, -1): 351})
Hit samples:  1840  Ave length:  1.91
Symbols:  15 [(0, 184), (1, 271), (2, 256), (3, 93), (4, 408), (5, 6), (6, 39), (7, 242), (8, 241), (9, 247), (10, 250), (11, 649), (12, 53), (13, 259), (14, 322)]
Semantics: 15/10/4 (total/solved/learn).
Symbol-03 (int -> int -> int), Samples:  56,  Counter({((5, 9), 54): 4, ((2, 4), 6): 3, ((8, 4), 9): 2, ((1, 4), 9): 2, ((8, 1), 9): 2, ((4, 6), 16): 2, ((4, 2), 12): 2, ((8, 9), 8): 2, ((6, 0), 6): 2, ((2, 2), 10): 2, ((6, 4), 4): 2, ((6, 1), 14): 2, ((3, 4), 3): 2, ((6, 3), 6): 2, ((4, 4), 10): 2, ((7, 1), 21): 2, ((7, 4), 11): 1, ((8, 3), 5): 1, ((9, 4), 9): 1, ((8, 2), 10): 1, ((4, 1), 16): 1, ((2, 5), 10): 1, ((2, 7), 7): 1, ((7, 5), 35): 1, ((0, 6), 6): 1, ((9, 3), 81): 1, ((1, 1), 1): 1, ((3, 8), 72): 1, ((3, 6), 9): 1, ((0, 4), 9): 1, ((3, 3), 9): 1, ((5, 0), 5): 1, ((6, 5), 30): 1, ((9, 6), 63): 1, ((5, 4), 9): 1, ((6, 9), 42): 1, ((3, 7), 21): 1})
Symbol-06 (int -> int -> int), Samples:  26,  Counter({((4, 1), 8): 3, ((9, 1), 81): 3, ((7, 3), 63): 2, ((9, 4), 17): 2, ((7, 2), 6): 2, ((2, 4), 7): 2, ((6, 1), 15): 2, ((7, 4), 9): 2, ((8, 4), 11): 1, ((0, 4), 1): 1, ((3, 1), 2): 1, ((1, 1), 2): 1, ((5, 7), 16): 1, ((9, 7), 27): 1, ((1, 6), 6): 1, ((9, 8), 18): 1})
Symbol-11 (int -> int -> int), Samples: 100,  Counter({((4, 6), 24): 3, ((4, 9), 36): 3, ((7, 8), 56): 3, ((9, 6), 54): 3, ((7, 9), 63): 2, ((3, 0), 3): 2, ((8, 1), 8): 2, ((1, 8), 8): 2, ((2, 4), 7): 2, ((8, 5), 40): 2, ((8, 8), 64): 2, ((7, 6), 13): 2, ((6, 7), 42): 2, ((2, 2), 4): 2, ((4, 1), 5): 2, ((9, 1), 9): 2, ((6, 6), 12): 1, ((6, 9), 15): 1, ((6, 8), 14): 1, ((8, 9), 72): 1, ((1, 4), 3): 1, ((8, 4), 12): 1, ((7, 1), 8): 1, ((9, 8), 72): 1, ((2, 8), 16): 1, ((9, 3), 12): 1, ((2, 9), 18): 1, ((5, 7), 12): 1, ((0, 1), 1): 1, ((6, 4), 11): 1, ((7, 2), 9): 1, ((7, 4), 28): 1, ((5, 5), 10): 1, ((2, 1), 2): 1, ((3, 9), 12): 1, ((7, 7), 9): 1, ((9, 9), 81): 1, ((6, 5), 11): 1, ((1, 7), 7): 1, ((4, 7), 10): 1, ((8, 3), 11): 1, ((3, 1), 3): 1, ((5, 1), 6): 1, ((0, 9), 9): 1, ((8, 6), 14): 1, ((9, 4), 14): 1, ((6, 3), 9): 1, ((2, 3), 6): 1, ((4, 5), 12): 1, ((9, 5), 0): 1, ((1, 3), 2): 1, ((8, 7), 56): 1, ((1, 1), 1): 1, ((6, 1), 7): 1, ((1, 0), 1): 1, ((3, 5), 8): 1, ((7, 5), 7): 1, ((5, 6), 11): 1, ((4, 3), 7): 1, ((5, 4), 45): 1, ((0, 8), 24): 1, ((0, 3), 3): 1, ((3, 6), 18): 1, ((1, 9), 9): 1, ((1, 6), 6): 1, ((1, 2), 3): 1, ((3, 4), 16): 1, ((9, 7), 14): 1, ((4, 2), 4): 1, ((2, 6), 12): 1, ((7, 3), 10): 1, ((4, 4), 6): 1, ((6, 0), 14): 1, ((4, 8), 12): 1, ((4, 0), 36): 1, ((2, 5), 10): 1, ((8, 0), 8): 1, ((3, 8), 21): 1, ((5, 3), 45): 1, ((3, 2), 6): 1})
Symbol-12 (int -> int -> int), Samples:  41,  Counter({((0, 5), 5): 4, ((3, 2), 6): 3, ((9, 2), 45): 3, ((6, 4), 42): 2, ((3, 5), 6): 2, ((9, 4), 13): 2, ((5, 1), 11): 2, ((8, 1), 9): 2, ((9, 1), 11): 2, ((8, 2), 64): 2, ((8, 8), 64): 2, ((6, 5), 30): 2, ((8, 4), 8): 1, ((4, 7), 28): 1, ((8, 3), 24): 1, ((6, 7), 48): 1, ((3, 4), 3): 1, ((1, 2), 3): 1, ((6, 0), 6): 1, ((5, 4), 10): 1, ((7, 6), 9): 1, ((9, 5), 14): 1, ((3, 7), 15): 1, ((9, 9), 18): 1, ((2, 9), 6): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Symbol-00: 0 0 1.00
Symbol-14: 1 (incr 0) 1.00
Symbol-08: 2 (incr (incr 0)) 1.00
Symbol-02: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-13: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-10: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-05: None 0.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.37
Symbol-12: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 (decr0 $1)) (incr (incr $0)))))))))) 0.29
Symbol-03: fn (lambda (lambda (if0 (decr0 (decr0 $1)) (incr (incr (incr (incr (incr (incr 0)))))) $1))) 0.24
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (incr (if0 (decr0 (decr0 $1)) (decr0 $1) (incr $0)))))))))) 0.25
Epoch time: 6m 47s
------------------------------
Epoch 6/499 (max_len=3, data=2820)
Train acc: 30.37 (abduce 63.12)
Dep:  Counter({(-1,): 1000, (1, -1, 1): 438, (2, 2, -1): 341, (-1, 0, 0): 1})
Hit samples:  1780  Ave length:  1.88
Symbols:  15 [(0, 184), (1, 257), (2, 228), (3, 140), (4, 419), (5, 10), (6, 45), (7, 242), (8, 239), (9, 230), (10, 225), (11, 527), (12, 58), (13, 240), (14, 296)]
Semantics: 15/10/5 (total/solved/learn).
Symbol-03 (int -> int -> int), Samples:  75,  Counter({((4, 1), 4): 5, ((9, 4), 18): 4, ((5, 2), 15): 3, ((8, 6), 48): 3, ((1, 4), 9): 3, ((7, 1), 63): 3, ((9, 1), 9): 3, ((7, 9), 63): 2, ((5, 1), 10): 2, ((1, 3), 3): 2, ((5, 5), 5): 2, ((4, 7), 49): 2, ((8, 1), 16): 2, ((5, 4), 13): 2, ((8, 0), 8): 2, ((3, 4), 5): 2, ((8, 4), 16): 2, ((4, 6), 16): 2, ((2, 3), 6): 2, ((6, 1), 6): 2, ((6, 7), 54): 2, ((4, 4), 16): 1, ((4, 0), 4): 1, ((2, 5), 6): 1, ((7, 4), 9): 1, ((6, 2), 42): 1, ((6, 3), 11): 1, ((8, 5), 64): 1, ((6, 4), 8): 1, ((2, 4), 6): 1, ((4, 9), 36): 1, ((3, 1), 11): 1, ((1, 7), 49): 1, ((5, 9), 18): 1, ((4, 8), 20): 1, ((7, 5), 7): 1, ((1, 6), 6): 1, ((4, 2), 11): 1, ((3, 0), 9): 1, ((7, 6), 7): 1, ((3, 5), 7): 1, ((4, 5), 4): 1, ((6, 5), 6): 1, ((3, 7), 45): 1})
Symbol-05 (int -> int -> int), Samples:   8,  Counter({((8, 5), 56): 2, ((4, 4), 32): 2, ((7, 5), 42): 1, ((1, 1), 1): 1, ((4, 7), 28): 1, ((7, 1), 11): 1})
Symbol-06 (int -> int -> int), Samples:  35,  Counter({((9, 7), 14): 4, ((3, 4), 12): 4, ((4, 1), 7): 3, ((3, 2), 18): 3, ((1, 8), 7): 3, ((7, 2), 28): 2, ((1, 4), 1): 2, ((6, 7), 14): 2, ((7, 4), 10): 2, ((3, 0), 7): 2, ((5, 1), 13): 1, ((8, 6), 48): 1, ((4, 4), 11): 1, ((9, 4), 11): 1, ((2, 7), 7): 1, ((5, 4), 11): 1, ((8, 1), 48): 1, ((1, 3), 6): 1})
Symbol-11 (int -> int -> int), Samples: 100,  Counter({((7, 2), 14): 2, ((8, 7), 56): 2, ((9, 6), 54): 2, ((1, 4), 4): 2, ((1, 9), 9): 2, ((1, 3), 3): 2, ((4, 3), 12): 2, ((2, 6), 8): 2, ((3, 4), 6): 2, ((2, 9), 18): 2, ((4, 4), 8): 2, ((6, 5), 30): 2, ((9, 1), 10): 2, ((2, 4), 6): 2, ((6, 3), 18): 2, ((6, 2), 8): 2, ((9, 8), 17): 2, ((2, 7), 14): 1, ((3, 5), 15): 1, ((5, 1), 6): 1, ((8, 9), 24): 1, ((0, 4), 1): 1, ((1, 7), 8): 1, ((6, 4), 4): 1, ((5, 6), 30): 1, ((9, 4), 45): 1, ((2, 5), 10): 1, ((4, 6), 10): 1, ((0, 8), 8): 1, ((7, 5), 9): 1, ((8, 6), 14): 1, ((9, 7), 63): 1, ((7, 9), 63): 1, ((7, 8), 56): 1, ((7, 6), 13): 1, ((3, 8), 24): 1, ((6, 1), 7): 1, ((8, 2), 10): 1, ((4, 0), 4): 1, ((2, 3), 5): 1, ((8, 8), 64): 1, ((1, 8), 9): 1, ((9, 2), 18): 1, ((9, 3), 12): 1, ((9, 9), 14): 1, ((0, 3), 0): 1, ((6, 8), 14): 1, ((1, 2), 3): 1, ((3, 1), 7): 1, ((7, 4), 8): 1, ((0, 1), 1): 1, ((5, 2), 10): 1, ((4, 5), 9): 1, ((8, 1), 2): 1, ((5, 4), 9): 1, ((0, 0), 5): 1, ((6, 0), 12): 1, ((3, 9), 27): 1, ((0, 9), 9): 1, ((2, 0), 2): 1, ((5, 9), 45): 1, ((4, 9), 36): 1, ((2, 1), 11): 1, ((7, 7), 16): 1, ((4, 2), 6): 1, ((8, 5), 32): 1, ((5, 7), 40): 1, ((6, 9), 15): 1, ((4, 1), 6): 1, ((3, 7), 49): 1, ((8, 4), 16): 1, ((6, 6), 12): 1, ((6, 7), 42): 1, ((1, 6), 7): 1, ((3, 6), 6): 1, ((3, 0), 3): 1, ((8, 3), 5): 1, ((1, 1), 2): 1, ((9, 0), 18): 1, ((5, 3), 15): 1, ((0, 6), 6): 1, ((5, 0), 3): 1, ((0, 2), 2): 1})
Symbol-12 (int -> int -> int), Samples:  35,  Counter({((2, 1), 3): 6, ((9, 4), 56): 3, ((1, 4), 6): 3, ((0, 7), 40): 2, ((6, 7), 28): 2, ((4, 4), 7): 2, ((3, 4), 8): 2, ((3, 1), 11): 2, ((1, 1), 9): 2, ((6, 4), 8): 1, ((7, 4), 12): 1, ((3, 8), 56): 1, ((6, 1), 24): 1, ((2, 7), 12): 1, ((1, 2), 8): 1, ((3, 6), 18): 1, ((5, 4), 10): 1, ((8, 2), 24): 1, ((5, 2), 15): 1, ((9, 1), 72): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Symbol-00: 0 0 1.00
Symbol-14: 1 (incr 0) 1.00
Symbol-08: 2 (incr (incr 0)) 1.00
Symbol-02: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-13: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-10: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $0 $1 (incr ($2 $1 (decr0 $0)))))))))) 0.37
Symbol-03: fn (lambda (lambda (if0 (decr0 (decr0 $1)) (incr (incr (incr (incr (incr (incr 0)))))) $1))) 0.32
Symbol-12: fn (lambda (lambda (incr (if0 (decr0 $0) $1 (incr (incr (incr (incr $1)))))))) 0.34
Symbol-05: fn (lambda (lambda (incr (if0 (decr0 $1) 0 (incr (incr (incr $1))))))) 0.20
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (incr (incr (if0 (decr0 (decr0 $1)) 0 $0)))))))))) 0.43
Epoch time: 6m 47s
------------------------------
Epoch 7/499 (max_len=3, data=2820)
Train acc: 32.23 (abduce 63.97)
Dep:  Counter({(-1,): 1000, (1, -1, 1): 492, (2, 2, -1): 311, (-1, 0, 0): 1})
Hit samples:  1804  Ave length:  1.89
Symbols:  15 [(0, 184), (1, 250), (2, 258), (3, 105), (4, 394), (5, 28), (6, 41), (7, 222), (8, 241), (9, 242), (10, 244), (11, 581), (12, 49), (13, 256), (14, 317)]
Semantics: 15/10/5 (total/solved/learn).
Symbol-03 (int -> int -> int), Samples:  63,  Counter({((6, 1), 6): 5, ((3, 7), 56): 5, ((9, 1), 9): 4, ((1, 2), 6): 3, ((4, 5), 20): 2, ((2, 5), 10): 2, ((3, 1), 45): 2, ((6, 4), 24): 2, ((3, 5), 6): 2, ((8, 5), 40): 2, ((4, 4), 4): 2, ((4, 1), 0): 2, ((5, 4), 6): 2, ((7, 9), 9): 2, ((7, 8), 9): 2, ((8, 2), 16): 2, ((9, 4), 9): 2, ((8, 1), 8): 1, ((1, 5), 3): 1, ((6, 5), 48): 1, ((8, 3), 24): 1, ((7, 5), 10): 1, ((2, 1), 11): 1, ((5, 8), 14): 1, ((5, 1), 35): 1, ((7, 4), 42): 1, ((1, 6), 6): 1, ((9, 7), 9): 1, ((3, 0), 24): 1, ((8, 9), 56): 1, ((2, 4), 20): 1, ((3, 8), 24): 1, ((1, 4), 8): 1, ((4, 9), 36): 1, ((0, 4), 3): 1, ((1, 0), 6): 1, ((8, 4), 14): 1})
Symbol-05 (int -> int -> int), Samples:  27,  Counter({((1, 1), 1): 6, ((0, 4), 1): 4, ((5, 7), 9): 2, ((2, 4), 10): 2, ((9, 4), 63): 2, ((3, 1), 7): 2, ((6, 4), 16): 2, ((4, 2), 8): 1, ((7, 1), 11): 1, ((5, 9), 9): 1, ((4, 1), 8): 1, ((3, 5), 7): 1, ((4, 7), 8): 1, ((3, 4), 7): 1})
Symbol-06 (int -> int -> int), Samples:  32,  Counter({((9, 7), 14): 4, ((4, 1), 8): 3, ((1, 3), 7): 3, ((1, 4), 7): 3, ((9, 4), 11): 3, ((0, 4), 9): 2, ((7, 6), 13): 2, ((5, 4), 13): 2, ((3, 2), 6): 2, ((8, 1), 8): 2, ((0, 1), 4): 2, ((2, 4), 7): 1, ((9, 1), 12): 1, ((3, 8), 15): 1, ((9, 2), 63): 1})
Symbol-11 (int -> int -> int), Samples:  98,  Counter({((7, 2), 14): 4, ((7, 3), 21): 3, ((3, 2), 6): 3, ((6, 9), 15): 3, ((8, 8), 64): 3, ((3, 9), 27): 2, ((4, 1), 5): 2, ((8, 9), 17): 2, ((2, 1), 3): 2, ((6, 2), 12): 2, ((4, 6), 24): 2, ((8, 6), 48): 2, ((3, 3), 9): 2, ((9, 2), 18): 1, ((5, 4), 9): 1, ((6, 7), 42): 1, ((4, 8), 32): 1, ((9, 3), 12): 1, ((7, 6), 13): 1, ((1, 3), 3): 1, ((3, 6), 18): 1, ((6, 3), 18): 1, ((8, 4), 9): 1, ((7, 0), 7): 1, ((4, 2), 6): 1, ((7, 4), 11): 1, ((2, 4), 6): 1, ((6, 1), 30): 1, ((5, 3), 15): 1, ((1, 2), 2): 1, ((6, 4), 24): 1, ((2, 6), 12): 1, ((7, 1), 14): 1, ((7, 7), 14): 1, ((4, 3), 12): 1, ((5, 1), 6): 1, ((3, 0), 3): 1, ((2, 0), 2): 1, ((6, 8), 48): 1, ((8, 3), 24): 1, ((3, 7), 27): 1, ((2, 2), 4): 1, ((0, 4), 4): 1, ((6, 6), 12): 1, ((7, 8), 56): 1, ((2, 7), 9): 1, ((6, 0), 18): 1, ((1, 7), 8): 1, ((9, 5), 27): 1, ((1, 1), 2): 1, ((9, 0), 8): 1, ((5, 2), 7): 1, ((9, 4), 13): 1, ((7, 9), 16): 1, ((8, 7), 15): 1, ((9, 1), 10): 1, ((0, 2), 2): 1, ((4, 5), 6): 1, ((5, 6), 30): 1, ((3, 4), 12): 1, ((1, 5), 5): 1, ((0, 3), 3): 1, ((2, 8), 10): 1, ((8, 5), 10): 1, ((3, 5), 8): 1, ((0, 1), 4): 1, ((7, 5), 35): 1, ((2, 3), 5): 1, ((1, 4), 3): 1, ((0, 6), 6): 1, ((9, 9), 81): 1, ((9, 8), 72): 1, ((0, 7), 7): 1, ((5, 5), 7): 1, ((1, 0), 1): 1, ((0, 8), 8): 1, ((3, 1), 5): 1, ((8, 2), 40): 1, ((3, 8), 24): 1})
Symbol-12 (int -> int -> int), Samples:  39,  Counter({((8, 4), 13): 3, ((3, 1), 21): 3, ((7, 5), 12): 3, ((1, 4), 6): 2, ((6, 3), 18): 2, ((2, 5), 14): 2, ((9, 4), 54): 2, ((6, 1), 15): 2, ((4, 3), 13): 2, ((5, 2), 10): 2, ((9, 1), 18): 2, ((6, 5), 8): 2, ((0, 4), 5): 2, ((4, 6), 6): 1, ((1, 1), 10): 1, ((7, 9), 63): 1, ((3, 5), 4): 1, ((1, 6), 6): 1, ((7, 4), 9): 1, ((2, 1), 3): 1, ((7, 6), 8): 1, ((5, 4), 7): 1, ((2, 8), 2): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Symbol-00: 0 0 1.00
Symbol-14: 1 (incr 0) 1.00
Symbol-08: 2 (incr (incr 0)) 1.00
Symbol-02: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-13: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-10: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) 0.40
Symbol-03: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 (decr0 (decr0 (decr0 (decr0 (decr0 $1))))) ($2 (incr $1) 0) $1))))))) 0.34
Symbol-12: fn (lambda (lambda (incr (if0 (decr0 $0) $1 (incr (incr (incr (incr $1)))))))) 0.39
Symbol-05: fn (lambda (lambda (incr (if0 (decr0 $1) 0 (incr (incr (incr $1))))))) 0.78
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (incr (incr (if0 (decr0 (decr0 $1)) 0 $0)))))))))) 0.70
Epoch time: 6m 48s
------------------------------
Epoch 8/499 (max_len=3, data=2820)
Train acc: 30.50 (abduce 64.47)
Dep:  Counter({(-1,): 1000, (1, -1, 1): 479, (2, 2, -1): 339})
Hit samples:  1818  Ave length:  1.9
Symbols:  15 [(0, 191), (1, 249), (2, 250), (3, 111), (4, 398), (5, 36), (6, 59), (7, 251), (8, 275), (9, 229), (10, 233), (11, 556), (12, 56), (13, 258), (14, 302)]
Semantics: 15/10/5 (total/solved/learn).
Symbol-03 (int -> int -> int), Samples:  73,  Counter({((1, 2), 2): 4, ((4, 5), 20): 3, ((4, 2), 12): 2, ((5, 1), 6): 2, ((5, 4), 20): 2, ((9, 8), 18): 2, ((2, 2), 2): 2, ((1, 8), 40): 2, ((9, 1), 11): 2, ((1, 6), 6): 2, ((9, 2), 81): 2, ((8, 1), 72): 2, ((9, 4), 36): 2, ((9, 5), 54): 2, ((3, 3), 6): 2, ((2, 9), 15): 2, ((6, 7), 54): 2, ((0, 8), 30): 2, ((3, 2), 6): 2, ((2, 4), 10): 2, ((0, 7), 9): 1, ((1, 9), 9): 1, ((3, 9), 27): 1, ((1, 4), 10): 1, ((5, 2), 5): 1, ((2, 5), 10): 1, ((6, 6), 6): 1, ((5, 7), 15): 1, ((6, 5), 6): 1, ((3, 4), 3): 1, ((6, 4), 42): 1, ((8, 5), 24): 1, ((6, 1), 42): 1, ((5, 8), 11): 1, ((6, 8), 32): 1, ((2, 8), 16): 1, ((9, 7), 81): 1, ((4, 1), 6): 1, ((7, 5), 7): 1, ((7, 4), 63): 1, ((3, 1), 6): 1, ((3, 5), 6): 1, ((8, 7), 11): 1, ((8, 4), 5): 1, ((7, 1), 7): 1, ((7, 2), 7): 1, ((0, 3), 6): 1, ((0, 4), 6): 1, ((8, 2), 24): 1, ((4, 3), 14): 1})
Symbol-05 (int -> int -> int), Samples:  35,  Counter({((9, 9), 81): 3, ((9, 7), 63): 3, ((2, 6), 6): 3, ((1, 4), 1): 3, ((7, 4), 9): 3, ((6, 0), 48): 3, ((3, 3), 9): 3, ((6, 4), 24): 2, ((5, 1), 9): 2, ((1, 2), 1): 2, ((1, 1), 1): 2, ((4, 2), 8): 1, ((5, 2), 14): 1, ((4, 8), 8): 1, ((3, 2), 7): 1, ((5, 6), 9): 1, ((2, 3), 6): 1})
Symbol-06 (int -> int -> int), Samples:  43,  Counter({((4, 4), 4): 4, ((5, 2), 5): 3, ((5, 4), 13): 3, ((1, 4), 7): 3, ((9, 1), 18): 2, ((7, 9), 16): 2, ((0, 4), 7): 2, ((6, 7), 14): 2, ((9, 7), 10): 2, ((9, 5), 0): 2, ((0, 7), 7): 2, ((7, 4), 11): 1, ((3, 1), 9): 1, ((0, 1), 7): 1, ((2, 1), 7): 1, ((5, 1), 8): 1, ((1, 1), 7): 1, ((1, 7), 7): 1, ((0, 2), 4): 1, ((5, 8), 12): 1, ((4, 2), 12): 1, ((2, 2), 16): 1, ((4, 0), 7): 1, ((7, 1), 5): 1, ((3, 4), 11): 1, ((4, 1), 7): 1, ((2, 4), 9): 1})
Symbol-11 (int -> int -> int), Samples: 100,  Counter({((2, 1), 2): 3, ((9, 5), 45): 3, ((6, 5), 30): 3, ((3, 9), 12): 2, ((9, 7), 63): 2, ((9, 8), 17): 2, ((7, 4), 28): 2, ((6, 2), 16): 2, ((3, 4), 12): 2, ((7, 8), 56): 2, ((3, 7), 21): 2, ((4, 7), 28): 2, ((5, 1), 6): 2, ((8, 4), 12): 2, ((5, 7), 35): 2, ((3, 1), 3): 2, ((2, 5), 10): 2, ((7, 9), 63): 2, ((7, 2), 9): 1, ((0, 4), 4): 1, ((5, 6), 30): 1, ((2, 2), 4): 1, ((5, 2), 7): 1, ((2, 4), 8): 1, ((7, 3), 10): 1, ((1, 4), 5): 1, ((6, 6), 12): 1, ((9, 4), 13): 1, ((5, 9), 14): 1, ((0, 7), 7): 1, ((6, 7), 13): 1, ((9, 2), 18): 1, ((6, 8), 48): 1, ((6, 9), 15): 1, ((3, 6), 9): 1, ((9, 9), 18): 1, ((0, 8), 0): 1, ((9, 3), 12): 1, ((5, 3), 15): 1, ((8, 0), 8): 1, ((7, 0), 42): 1, ((9, 6), 54): 1, ((1, 8), 8): 1, ((8, 8), 64): 1, ((8, 1), 32): 1, ((2, 7), 14): 1, ((1, 3), 3): 1, ((0, 9), 9): 1, ((5, 8), 40): 1, ((5, 4), 20): 1, ((0, 1), 1): 1, ((9, 0), 9): 1, ((8, 7), 56): 1, ((8, 2), 10): 1, ((7, 6), 42): 1, ((4, 8), 12): 1, ((9, 1), 10): 1, ((8, 9), 72): 1, ((7, 7), 49): 1, ((6, 0), 6): 1, ((2, 6), 12): 1, ((4, 9), 36): 1, ((5, 0), 5): 1, ((0, 2), 2): 1, ((1, 9), 10): 1, ((4, 4), 20): 1, ((1, 1), 2): 1, ((6, 4), 13): 1, ((4, 1), 5): 1, ((6, 1), 7): 1, ((4, 6), 10): 1, ((8, 5), 13): 1, ((8, 6), 32): 1, ((2, 3), 5): 1, ((4, 3), 12): 1, ((5, 5), 25): 1, ((2, 0), 18): 1, ((1, 7), 3): 1, ((0, 3), 0): 1})
Symbol-12 (int -> int -> int), Samples:  40,  Counter({((7, 8), 42): 4, ((2, 2), 12): 3, ((9, 4), 10): 3, ((0, 4), 5): 3, ((2, 1), 35): 3, ((8, 3), 24): 3, ((1, 5), 45): 2, ((8, 9), 72): 2, ((3, 4), 8): 2, ((5, 4), 10): 2, ((4, 4), 4): 2, ((4, 3), 12): 1, ((6, 3), 18): 1, ((3, 2), 27): 1, ((7, 4), 8): 1, ((4, 1), 12): 1, ((6, 1), 7): 1, ((5, 2), 10): 1, ((2, 4), 11): 1, ((1, 4), 9): 1, ((6, 4), 11): 1, ((9, 7), 14): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
Symbol-00: 0 0 1.00
Symbol-14: 1 (incr 0) 1.00
Symbol-08: 2 (incr (incr 0)) 1.00
Symbol-02: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-13: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-10: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) 0.44
Symbol-03: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (incr (if0 (decr0 (decr0 $1)) (decr0 $0) (incr (incr (incr (incr ($2 0 0))))))))))))) 0.28
Symbol-05: fn (lambda (lambda (incr (if0 (decr0 $1) 0 (incr (incr (incr $1))))))) 0.51
Symbol-12: fn (lambda (lambda (incr (incr (incr (incr (if0 (decr0 $0) (decr0 (decr0 (decr0 $1))) (incr $1)))))))) 0.27
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (incr (incr (if0 (decr0 (decr0 $1)) 0 $0)))))))))) 0.48
Epoch time: 6m 47s
------------------------------
Epoch 9/499 (max_len=3, data=2820)
Train acc: 30.79 (abduce 64.36)
Dep:  Counter({(-1,): 1000, (1, -1, 1): 454, (2, 2, -1): 360, (-1, 0, 0): 1})
Hit samples:  1815  Ave length:  1.9
Symbols:  15 [(0, 187), (1, 248), (2, 228), (3, 103), (4, 411), (5, 32), (6, 53), (7, 261), (8, 274), (9, 241), (10, 241), (11, 549), (12, 78), (13, 250), (14, 289)]
Learn syntax with 1328 samples for 500 iterations, take 2 sec.
Learn perception with 1328 samples for 500 iterations, take 65 sec.
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 90.00
2 ( 0%) 80.00
3 ( 0%) 80.00
4 ( 0%) 80.00
5 ( 0%) 80.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 90.00
9 ( 0%) 100.00
val (Perception Acc=30.06, Syntax Acc=45.26, Result Acc=3.83)
Epoch time: 1m 14s
------------------------------
Epoch 10/499 (max_len=3, data=2820)
Train acc: 45.74 (abduce 92.09)
Dep:  Counter({(1, -1, 1): 1160, (-1,): 1000, (2, 2, -1): 427, (-1, 0, 0): 10})
Hit samples:  2597  Ave length:  2.23
Symbols:  15 [(0, 280), (1, 448), (2, 361), (3, 281), (4, 625), (5, 110), (6, 190), (7, 381), (8, 408), (9, 428), (10, 429), (11, 854), (12, 162), (13, 386), (14, 448)]
Semantics: 15/11/4 (total/solved/learn).
Symbol-03 (int -> int -> int), Samples: 100,  Counter({((1, 4), 4): 4, ((3, 2), 6): 4, ((1, 8), 8): 3, ((8, 9), 72): 3, ((7, 8), 56): 3, ((1, 6), 6): 3, ((7, 6), 42): 3, ((6, 1), 6): 2, ((3, 4), 12): 2, ((1, 9), 9): 2, ((8, 4), 32): 2, ((7, 1), 7): 2, ((1, 2), 2): 2, ((6, 8), 48): 2, ((1, 7), 7): 2, ((9, 7), 63): 2, ((1, 3), 3): 2, ((4, 8), 32): 2, ((3, 7), 21): 2, ((2, 4), 4): 1, ((5, 8), 40): 1, ((5, 5), 25): 1, ((8, 6), 48): 1, ((5, 1), 5): 1, ((6, 5), 30): 1, ((9, 9), 81): 1, ((0, 6), 6): 1, ((2, 5), 10): 1, ((2, 7), 14): 1, ((8, 7), 56): 1, ((4, 7), 49): 1, ((9, 5), 45): 1, ((5, 9), 45): 1, ((2, 9), 18): 1, ((4, 9), 36): 1, ((6, 4), 24): 1, ((4, 1), 4): 1, ((6, 2), 6): 1, ((1, 1), 1): 1, ((0, 9), 9): 1, ((2, 2), 2): 1, ((9, 6), 54): 1, ((9, 1), 81): 1, ((6, 3), 24): 1, ((7, 7), 49): 1, ((1, 5), 5): 1, ((3, 5), 15): 1, ((6, 6), 36): 1, ((8, 2), 8): 1, ((9, 3), 45): 1, ((4, 4), 6): 1, ((8, 1), 6): 1, ((5, 6), 30): 1, ((0, 4), 4): 1, ((9, 8), 64): 1, ((6, 7), 42): 1, ((2, 8), 16): 1, ((8, 8), 40): 1, ((0, 8), 8): 1, ((5, 3), 54): 1, ((2, 1), 2): 1, ((9, 4), 6): 1, ((6, 0), 5): 1, ((5, 7), 35): 1, ((9, 2), 3): 1, ((7, 3), 21): 1, ((6, 9), 54): 1, ((3, 9), 10): 1, ((7, 9), 81): 1, ((8, 3), 6): 1, ((2, 0), 14): 1, ((5, 4), 6): 1})
Symbol-05 (int -> int -> int), Samples:  81,  Counter({((4, 1), 8): 5, ((4, 2), 8): 5, ((1, 1), 1): 5, ((1, 4), 1): 3, ((6, 3), 18): 3, ((5, 1), 9): 2, ((4, 9), 36): 2, ((6, 4), 24): 2, ((6, 7), 10): 2, ((2, 3), 6): 2, ((7, 6), 42): 2, ((0, 7), 1): 2, ((5, 6), 30): 2, ((6, 1), 10): 2, ((5, 0), 9): 2, ((4, 4), 16): 2, ((5, 4), 9): 2, ((4, 6), 8): 2, ((2, 4), 14): 2, ((2, 1), 6): 2, ((8, 5), 48): 1, ((9, 1), 9): 1, ((3, 5), 15): 1, ((5, 8), 40): 1, ((0, 1), 1): 1, ((2, 7), 28): 1, ((2, 5), 10): 1, ((8, 4), 12): 1, ((0, 9), 0): 1, ((1, 2), 24): 1, ((7, 9), 63): 1, ((3, 8), 56): 1, ((3, 9), 27): 1, ((6, 9), 54): 1, ((7, 8), 72): 1, ((6, 5), 30): 1, ((9, 4), 13): 1, ((8, 7), 56): 1, ((9, 8), 18): 1, ((3, 6), 18): 1, ((2, 6), 6): 1, ((9, 9), 13): 1, ((1, 3), 1): 1, ((9, 2), 18): 1, ((7, 2), 28): 1, ((9, 5), 13): 1, ((8, 6), 12): 1, ((9, 7), 63): 1, ((8, 1), 12): 1, ((4, 7), 8): 1})
Symbol-06 (int -> int -> int), Samples: 100,  Counter({((9, 4), 11): 6, ((4, 5), 12): 5, ((5, 7), 35): 4, ((1, 5), 7): 3, ((8, 4), 11): 3, ((7, 7), 14): 3, ((3, 4), 11): 3, ((3, 6), 18): 3, ((5, 9), 16): 3, ((7, 4), 28): 3, ((5, 5), 25): 2, ((5, 8), 15): 2, ((2, 6), 12): 2, ((9, 6), 54): 2, ((7, 1), 8): 2, ((6, 4), 11): 2, ((5, 3), 10): 2, ((2, 8), 11): 2, ((8, 8), 15): 2, ((4, 1), 4): 2, ((2, 1), 7): 2, ((6, 7), 42): 2, ((7, 3), 21): 2, ((1, 4), 7): 2, ((3, 2), 9): 2, ((2, 0), 7): 1, ((2, 4), 16): 1, ((6, 5), 30): 1, ((5, 4), 11): 1, ((8, 1), 8): 1, ((9, 2), 9): 1, ((3, 7), 14): 1, ((7, 8), 15): 1, ((9, 5), 54): 1, ((2, 5), 10): 1, ((4, 9), 36): 1, ((4, 7), 28): 1, ((0, 7), 7): 1, ((9, 3), 27): 1, ((2, 9), 18): 1, ((8, 6), 48): 1, ((9, 7), 49): 1, ((1, 7), 7): 1, ((0, 1), 7): 1, ((3, 1), 9): 1, ((6, 0), 0): 1, ((8, 9), 40): 1, ((0, 4), 7): 1, ((7, 0), 7): 1, ((5, 6), 12): 1, ((8, 5), 24): 1, ((6, 3), 18): 1, ((6, 6), 36): 1, ((4, 6), 24): 1, ((9, 9), 81): 1, ((7, 2), 14): 1, ((8, 7), 20): 1, ((4, 4), 16): 1, ((4, 3), 12): 1})
Symbol-12 (int -> int -> int), Samples: 100,  Counter({((9, 4), 14): 9, ((2, 4), 7): 5, ((5, 2), 10): 5, ((8, 4), 13): 4, ((7, 4), 12): 4, ((2, 1), 4): 4, ((4, 4), 9): 3, ((4, 6), 24): 3, ((3, 3), 8): 3, ((5, 4), 10): 2, ((2, 5), 10): 2, ((5, 3), 45): 2, ((9, 6), 54): 2, ((8, 8), 64): 2, ((0, 6), 5): 2, ((0, 4), 5): 2, ((6, 9), 11): 2, ((3, 1), 4): 2, ((1, 4), 6): 2, ((5, 8), 40): 2, ((1, 6), 6): 2, ((7, 9), 63): 2, ((3, 5), 15): 2, ((1, 1), 4): 2, ((6, 5), 30): 2, ((1, 2), 6): 2, ((9, 7), 45): 2, ((9, 9), 0): 1, ((4, 2), 9): 1, ((3, 9), 8): 1, ((8, 3), 40): 1, ((6, 1), 7): 1, ((8, 5), 13): 1, ((6, 0), 12): 1, ((8, 6), 16): 1, ((9, 1), 9): 1, ((7, 5), 35): 1, ((6, 3), 11): 1, ((4, 1), 4): 1, ((1, 9), 27): 1, ((1, 8), 6): 1, ((3, 4), 3): 1, ((7, 1), 7): 1, ((2, 7), 18): 1, ((3, 7), 21): 1, ((6, 7), 42): 1, ((6, 4), 12): 1, ((5, 1), 15): 1, ((1, 5), 6): 1, ((4, 3), 18): 1, ((4, 7), 28): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0)))))))))
Symbol-00: 0 0 1.00
Symbol-14: 1 (incr 0) 1.00
Symbol-08: 2 (incr (incr 0)) 1.00
Symbol-02: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-13: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-10: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-03: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1)))))))))) 0.81
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) 1.00
Symbol-05: fn (lambda (lambda (if0 (decr0 $1) (incr 0) (incr (incr (incr (incr $1))))))) 0.55
Symbol-12: fn (lambda (lambda (incr (incr (incr (incr (if0 (decr0 $0) (decr0 (decr0 (decr0 $1))) (incr $1)))))))) 0.62
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (incr (incr (if0 (decr0 (decr0 $1)) 0 $0)))))))))) 0.54
Epoch time: 6m 48s
------------------------------
Epoch 11/499 (max_len=3, data=2820)
Train acc: 50.33 (abduce 94.04)
Dep:  Counter({(1, -1, 1): 1183, (-1,): 1000, (2, 2, -1): 466, (-1, 0, 0): 3})
Hit samples:  2652  Ave length:  2.25
Symbols:  15 [(0, 278), (1, 444), (2, 394), (3, 520), (4, 635), (5, 106), (6, 192), (7, 417), (8, 402), (9, 422), (10, 436), (11, 663), (12, 171), (13, 406), (14, 470)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-05 (int -> int -> int), Samples:  75,  Counter({((4, 1), 8): 6, ((1, 4), 1): 5, ((2, 3), 6): 4, ((1, 1), 1): 3, ((7, 8), 11): 2, ((2, 2), 6): 2, ((4, 2), 8): 2, ((6, 7), 10): 2, ((2, 9), 6): 2, ((5, 9), 9): 2, ((4, 7), 8): 2, ((9, 9), 63): 2, ((7, 7), 11): 2, ((9, 2), 15): 2, ((4, 3), 8): 2, ((6, 1), 10): 2, ((8, 4), 8): 2, ((9, 8), 64): 2, ((2, 0), 14): 2, ((5, 7), 9): 1, ((5, 2), 45): 1, ((3, 8), 5): 1, ((1, 8), 16): 1, ((6, 8), 36): 1, ((3, 5), 7): 1, ((0, 7), 1): 1, ((8, 2), 40): 1, ((4, 8), 72): 1, ((3, 7), 7): 1, ((5, 3), 45): 1, ((7, 6), 7): 1, ((2, 4), 14): 1, ((7, 1), 4): 1, ((9, 1), 36): 1, ((6, 6), 6): 1, ((5, 1), 0): 1, ((8, 6), 12): 1, ((5, 8), 72): 1, ((8, 5), 32): 1, ((4, 6), 18): 1, ((4, 9), 8): 1, ((5, 5), 7): 1, ((6, 4), 5): 1, ((3, 3), 15): 1, ((7, 4), 14): 1, ((5, 4), 30): 1})
Symbol-06 (int -> int -> int), Samples:  90,  Counter({((5, 4), 11): 5, ((9, 4), 11): 4, ((5, 9), 16): 4, ((0, 4), 7): 3, ((7, 7), 14): 3, ((1, 1), 7): 3, ((6, 4), 11): 2, ((4, 5), 12): 2, ((7, 4), 11): 2, ((2, 4), 9): 2, ((5, 8), 15): 2, ((1, 7), 7): 2, ((8, 8), 15): 2, ((1, 3), 7): 2, ((2, 0), 7): 2, ((5, 3), 10): 2, ((1, 4), 7): 2, ((3, 2), 9): 2, ((7, 6), 13): 2, ((2, 5), 7): 2, ((3, 6), 30): 2, ((9, 6), 6): 2, ((4, 4), 3): 2, ((3, 0), 2): 2, ((9, 5), 6): 2, ((7, 0), 6): 2, ((7, 5), 12): 1, ((4, 2), 14): 1, ((1, 2), 7): 1, ((9, 2), 9): 1, ((7, 2), 9): 1, ((5, 1), 8): 1, ((3, 4), 5): 1, ((2, 6), 7): 1, ((3, 7), 14): 1, ((0, 9), 10): 1, ((6, 1), 9): 1, ((8, 5), 20): 1, ((6, 7), 28): 1, ((8, 3), 8): 1, ((8, 9), 16): 1, ((0, 6), 8): 1, ((0, 7), 0): 1, ((3, 5), 3): 1, ((7, 1), 6): 1, ((6, 6), 48): 1, ((9, 1), 72): 1, ((4, 1), 49): 1, ((4, 7), 14): 1, ((6, 2), 18): 1, ((2, 1), 7): 1, ((8, 2), 4): 1, ((8, 4), 16): 1, ((4, 6), 13): 1})
Symbol-12 (int -> int -> int), Samples: 100,  Counter({((1, 4), 6): 10, ((9, 4), 14): 7, ((2, 4), 7): 6, ((5, 2), 10): 6, ((8, 4), 13): 3, ((2, 1), 4): 3, ((7, 4), 12): 3, ((4, 4), 9): 3, ((6, 9), 11): 3, ((1, 1), 4): 2, ((0, 4), 5): 2, ((1, 6), 6): 2, ((3, 3), 8): 2, ((5, 7), 10): 2, ((0, 6), 5): 2, ((4, 3), 9): 2, ((3, 9), 8): 2, ((3, 1), 4): 2, ((9, 7), 14): 2, ((8, 6), 32): 2, ((3, 4), 21): 2, ((4, 2), 9): 2, ((6, 8), 30): 2, ((6, 7), 24): 2, ((9, 8), 45): 1, ((6, 2), 13): 1, ((8, 8), 48): 1, ((7, 5), 12): 1, ((6, 5), 11): 1, ((1, 8), 3): 1, ((4, 1), 1): 1, ((5, 4), 25): 1, ((2, 8), 2): 1, ((0, 5), 5): 1, ((8, 5), 24): 1, ((4, 9), 9): 1, ((4, 6), 54): 1, ((6, 0), 3): 1, ((2, 7), 18): 1, ((7, 7), 12): 1, ((6, 4), 12): 1, ((8, 1), 16): 1, ((9, 6), 9): 1, ((4, 5), 28): 1, ((6, 1), 3): 1, ((3, 8), 8): 1, ((5, 5), 10): 1, ((9, 1), 14): 1, ((7, 3), 12): 1, ((0, 0), 4): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0)))))))))
Symbol-00: 0 0 1.00
Symbol-14: 1 (incr 0) 1.00
Symbol-08: 2 (incr (incr 0)) 1.00
Symbol-02: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-13: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-10: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-03: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1)))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) 1.00
Symbol-05: fn (lambda (lambda (if0 (decr0 $1) (incr 0) (incr (incr (incr (incr $1))))))) 0.58
Symbol-12: fn (lambda (lambda (incr (incr (incr (incr (if0 (decr0 $0) (decr0 (decr0 (decr0 $1))) (incr $1)))))))) 0.75
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (incr (incr (if0 (decr0 (decr0 $1)) 0 $0)))))))))) 0.68
Epoch time: 6m 57s
------------------------------
Epoch 12/499 (max_len=3, data=2820)
Train acc: 51.37 (abduce 92.87)
Dep:  Counter({(1, -1, 1): 1164, (-1,): 1000, (2, 2, -1): 451, (-1, 0, 0): 4})
Hit samples:  2619  Ave length:  2.24
Symbols:  15 [(0, 269), (1, 435), (2, 365), (3, 400), (4, 639), (5, 122), (6, 244), (7, 390), (8, 399), (9, 422), (10, 444), (11, 639), (12, 214), (13, 396), (14, 479)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-05 (int -> int -> int), Samples:  75,  Counter({((4, 1), 8): 6, ((1, 1), 1): 3, ((4, 2), 8): 3, ((2, 9), 6): 2, ((6, 7), 10): 2, ((7, 7), 11): 2, ((4, 6), 8): 2, ((8, 1), 12): 2, ((2, 2), 6): 2, ((5, 0), 9): 2, ((0, 7), 0): 2, ((5, 7), 9): 2, ((3, 8), 56): 2, ((8, 9), 32): 2, ((4, 3), 8): 2, ((2, 8), 4): 2, ((2, 4), 2): 2, ((4, 7), 8): 2, ((7, 8), 16): 2, ((6, 1), 18): 2, ((2, 7), 16): 2, ((9, 5), 13): 1, ((6, 0), 10): 1, ((9, 6), 13): 1, ((1, 3), 1): 1, ((6, 2), 30): 1, ((1, 9), 5): 1, ((9, 1), 17): 1, ((4, 9), 45): 1, ((7, 5), 28): 1, ((8, 4), 40): 1, ((2, 1), 56): 1, ((0, 3), 9): 1, ((9, 9), 45): 1, ((8, 8), 48): 1, ((8, 0), 4): 1, ((3, 1), 7): 1, ((7, 4), 27): 1, ((0, 4), 0): 1, ((4, 5), 16): 1, ((1, 4), 8): 1, ((8, 7), 40): 1, ((2, 3), 6): 1, ((6, 4), 9): 1, ((1, 8), 12): 1, ((1, 6), 1): 1, ((4, 4), 4): 1, ((8, 6), 32): 1})
Symbol-06 (int -> int -> int), Samples:  99,  Counter({((9, 4), 11): 7, ((5, 4), 11): 6, ((4, 5), 12): 4, ((7, 4), 11): 3, ((5, 9), 16): 3, ((4, 7), 14): 3, ((3, 2), 9): 3, ((8, 9), 64): 3, ((6, 4), 18): 2, ((3, 4), 11): 2, ((1, 7), 7): 2, ((7, 1), 8): 2, ((5, 8), 15): 2, ((3, 7), 14): 2, ((5, 3), 10): 2, ((2, 0), 7): 2, ((0, 4), 7): 2, ((6, 5), 0): 2, ((6, 7), 48): 2, ((2, 4), 16): 2, ((1, 1), 7): 2, ((5, 1), 8): 2, ((1, 3), 7): 2, ((8, 4), 24): 2, ((2, 8), 11): 2, ((4, 1), 24): 2, ((1, 6), 16): 1, ((0, 3), 0): 1, ((3, 3), 18): 1, ((7, 9), 16): 1, ((9, 2), 9): 1, ((9, 1), 27): 1, ((2, 1), 7): 1, ((6, 6), 30): 1, ((4, 4), 6): 1, ((5, 2), 36): 1, ((4, 8), 36): 1, ((9, 6), 63): 1, ((7, 5), 20): 1, ((8, 7), 11): 1, ((1, 4), 72): 1, ((3, 5), 12): 1, ((8, 3), 18): 1, ((7, 2), 63): 1, ((6, 1), 8): 1, ((4, 2), 28): 1, ((3, 8), 10): 1, ((2, 3), 11): 1, ((9, 7), 14): 1, ((8, 8), 15): 1, ((0, 0), 2): 1, ((4, 9), 16): 1, ((7, 7), 21): 1, ((2, 9), 4): 1, ((8, 2), 8): 1, ((9, 8), 11): 1, ((3, 1), 9): 1})
Symbol-12 (int -> int -> int), Samples:  99,  Counter({((9, 4), 14): 9, ((1, 4), 6): 6, ((5, 2), 10): 5, ((4, 4), 9): 5, ((2, 1), 4): 4, ((8, 4), 13): 4, ((0, 6), 5): 4, ((3, 4), 8): 4, ((2, 4), 7): 3, ((1, 6), 6): 3, ((1, 2), 6): 3, ((5, 7), 10): 3, ((0, 4), 5): 2, ((5, 4), 10): 2, ((7, 4), 12): 2, ((1, 8), 6): 2, ((3, 1), 4): 2, ((5, 5), 15): 2, ((3, 3), 24): 2, ((6, 9), 11): 2, ((8, 1), 9): 2, ((4, 2), 9): 2, ((6, 6), 16): 2, ((8, 5), 13): 2, ((1, 1), 4): 1, ((6, 4), 12): 1, ((5, 1), 3): 1, ((2, 8), 40): 1, ((6, 1), 12): 1, ((5, 3), 45): 1, ((1, 9), 27): 1, ((7, 1), 4): 1, ((8, 0), 2): 1, ((0, 1), 0): 1, ((2, 6), 36): 1, ((7, 2), 10): 1, ((6, 8), 11): 1, ((5, 9), 6): 1, ((9, 9), 7): 1, ((9, 2), 36): 1, ((2, 5), 7): 1, ((9, 7), 14): 1, ((4, 6), 32): 1, ((7, 5), 14): 1, ((7, 3), 12): 1, ((0, 3), 5): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0)))))))))
Symbol-00: 0 0 1.00
Symbol-14: 1 (incr 0) 1.00
Symbol-08: 2 (incr (incr 0)) 1.00
Symbol-02: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-13: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-10: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-03: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1)))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) 1.00
Symbol-05: fn (lambda (lambda (if0 (decr0 $1) (incr 0) (incr (incr (incr (incr $1))))))) 0.55
Symbol-12: fn (lambda (lambda (incr (incr (incr (incr (if0 (decr0 $0) (decr0 (decr0 (decr0 $1))) (incr $1)))))))) 0.77
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (incr (incr (if0 (decr0 (decr0 $1)) 0 $0)))))))))) 0.60
Epoch time: 6m 57s
------------------------------
Epoch 13/499 (max_len=3, data=2820)
Train acc: 52.38 (abduce 93.55)
Dep:  Counter({(1, -1, 1): 1157, (-1,): 1000, (2, 2, -1): 476, (-1, 0, 0): 5})
Hit samples:  2638  Ave length:  2.24
Symbols:  15 [(0, 283), (1, 442), (2, 370), (3, 384), (4, 636), (5, 115), (6, 267), (7, 393), (8, 428), (9, 425), (10, 422), (11, 655), (12, 217), (13, 418), (14, 459)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-05 (int -> int -> int), Samples:  80,  Counter({((4, 1), 8): 5, ((1, 4), 1): 4, ((4, 2), 8): 3, ((1, 1), 1): 3, ((4, 3), 8): 2, ((7, 4), 11): 2, ((4, 7), 8): 2, ((2, 3), 6): 2, ((5, 1), 9): 2, ((2, 2), 6): 2, ((0, 7), 1): 2, ((3, 7), 7): 2, ((4, 6), 8): 2, ((7, 7), 11): 2, ((8, 7), 40): 2, ((9, 1), 4): 2, ((5, 9), 9): 2, ((6, 7), 10): 2, ((6, 4), 12): 2, ((1, 5), 3): 2, ((5, 4), 9): 2, ((2, 4), 14): 2, ((9, 6), 36): 2, ((5, 0), 9): 2, ((5, 6), 5): 2, ((5, 3), 45): 1, ((3, 3), 27): 1, ((0, 4), 1): 1, ((2, 1), 6): 1, ((8, 9), 32): 1, ((9, 5), 40): 1, ((6, 5), 42): 1, ((2, 7), 28): 1, ((0, 3), 0): 1, ((7, 3), 3): 1, ((5, 7), 5): 1, ((6, 1), 2): 1, ((8, 2), 45): 1, ((2, 8), 6): 1, ((8, 5), 12): 1, ((9, 7), 27): 1, ((4, 0), 9): 1, ((5, 5), 35): 1, ((8, 6), 32): 1, ((0, 8), 24): 1, ((9, 4), 9): 1, ((6, 8), 6): 1, ((4, 4), 4): 1})
Symbol-06 (int -> int -> int), Samples:  97,  Counter({((9, 4), 11): 8, ((4, 5), 12): 4, ((3, 4), 11): 4, ((1, 1), 7): 3, ((0, 4), 7): 3, ((7, 7), 14): 2, ((4, 4), 11): 2, ((1, 4), 3): 2, ((3, 2), 9): 2, ((6, 4), 11): 2, ((7, 6), 13): 2, ((7, 8), 15): 2, ((8, 8), 15): 2, ((3, 7), 14): 2, ((7, 1), 8): 2, ((1, 2), 7): 2, ((5, 6), 35): 2, ((5, 1), 8): 2, ((5, 9), 16): 2, ((9, 5), 6): 2, ((1, 5), 25): 2, ((4, 6), 28): 2, ((1, 3), 9): 1, ((5, 3), 10): 1, ((4, 2), 4): 1, ((1, 7), 7): 1, ((9, 9), 27): 1, ((9, 2), 9): 1, ((8, 9), 40): 1, ((4, 8), 15): 1, ((5, 4), 11): 1, ((2, 2), 16): 1, ((8, 3), 8): 1, ((6, 5), 6): 1, ((6, 1), 12): 1, ((8, 4), 10): 1, ((1, 9), 16): 1, ((9, 1), 17): 1, ((7, 4), 14): 1, ((6, 7), 14): 1, ((0, 7), 7): 1, ((6, 2), 6): 1, ((8, 1), 8): 1, ((4, 1), 7): 1, ((2, 8), 64): 1, ((3, 9), 10): 1, ((2, 4), 16): 1, ((7, 2), 6): 1, ((1, 8), 32): 1, ((0, 5), 25): 1, ((0, 1), 2): 1, ((6, 6), 18): 1, ((7, 3), 5): 1, ((7, 9), 49): 1, ((8, 5), 24): 1, ((4, 9), 16): 1, ((6, 8), 6): 1, ((0, 9), 0): 1, ((9, 6), 72): 1, ((5, 0), 7): 1, ((9, 0), 63): 1, ((3, 8), 27): 1, ((5, 7), 30): 1})
Symbol-12 (int -> int -> int), Samples:  96,  Counter({((1, 4), 6): 9, ((5, 2), 10): 6, ((7, 4), 12): 6, ((4, 4), 9): 5, ((9, 4), 14): 4, ((2, 1), 4): 4, ((0, 6), 5): 3, ((1, 6), 6): 3, ((2, 4), 7): 3, ((1, 2), 6): 2, ((5, 4), 10): 2, ((8, 4), 13): 2, ((9, 7), 14): 2, ((3, 1), 4): 2, ((5, 7), 10): 2, ((3, 9), 8): 2, ((0, 4), 5): 2, ((0, 8), 0): 2, ((1, 1), 4): 2, ((6, 9), 11): 2, ((9, 8), 64): 1, ((6, 5), 11): 1, ((2, 6), 11): 1, ((7, 8), 21): 1, ((7, 0), 35): 1, ((8, 5), 13): 1, ((6, 1), 30): 1, ((9, 5), 15): 1, ((7, 7), 21): 1, ((1, 8), 72): 1, ((3, 3), 8): 1, ((4, 6), 48): 1, ((3, 4), 6): 1, ((4, 2), 24): 1, ((0, 2), 5): 1, ((4, 3), 36): 1, ((7, 5), 14): 1, ((0, 3), 27): 1, ((2, 3), 24): 1, ((7, 1), 56): 1, ((6, 7), 54): 1, ((6, 8), 30): 1, ((4, 5), 4): 1, ((7, 6), 12): 1, ((1, 3), 6): 1, ((8, 8), 20): 1, ((5, 1), 25): 1, ((6, 6), 6): 1, ((8, 6), 9): 1, ((5, 8), 8): 1, ((3, 2), 12): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0)))))))))
Symbol-00: 0 0 1.00
Symbol-14: 1 (incr 0) 1.00
Symbol-08: 2 (incr (incr 0)) 1.00
Symbol-02: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-13: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-10: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-03: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1)))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) 1.00
Symbol-05: fn (lambda (lambda (if0 (decr0 $1) (incr 0) (incr (incr (incr (incr $1))))))) 0.61
Symbol-12: fn (lambda (lambda (incr (incr (incr (incr (if0 (decr0 $0) 0 (incr $1)))))))) 0.71
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (incr (incr (if0 (decr0 (decr0 $1)) 0 $0)))))))))) 0.58
Epoch time: 6m 58s
------------------------------
Epoch 14/499 (max_len=3, data=2820)
Train acc: 53.81 (abduce 92.70)
Dep:  Counter({(1, -1, 1): 1185, (-1,): 1000, (2, 2, -1): 422, (-1, 0, 0): 7})
Hit samples:  2614  Ave length:  2.23
Symbols:  15 [(0, 278), (1, 433), (2, 386), (3, 407), (4, 635), (5, 115), (6, 223), (7, 405), (8, 399), (9, 422), (10, 424), (11, 657), (12, 212), (13, 385), (14, 461)]
Learn syntax with 2233 samples for 500 iterations, take 2 sec.
Learn perception with 2233 samples for 500 iterations, take 36 sec.
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 90.00
3 ( 0%) 80.00
4 ( 0%) 90.00
5 ( 0%) 80.00
6 ( 0%) 100.00
7 ( 0%) 90.00
8 ( 0%) 90.00
9 ( 0%) 100.00
val (Perception Acc=29.38, Syntax Acc=44.84, Result Acc=5.71)
Epoch time: 0m 45s
------------------------------
Epoch 15/499 (max_len=3, data=2820)
Train acc: 66.93 (abduce 96.67)
Dep:  Counter({(1, -1, 1): 1497, (-1,): 1000, (2, 2, -1): 217, (-1, 0, 0): 12})
Hit samples:  2726  Ave length:  2.27
Symbols:  15 [(0, 298), (1, 482), (2, 433), (3, 668), (4, 522), (5, 71), (6, 95), (7, 445), (8, 443), (9, 455), (10, 461), (11, 792), (12, 100), (13, 435), (14, 478)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-05 (int -> int -> int), Samples:  61,  Counter({((2, 3), 6): 6, ((5, 1), 9): 4, ((1, 4), 1): 3, ((8, 9), 12): 2, ((7, 8), 11): 2, ((6, 7), 10): 2, ((7, 7), 11): 2, ((4, 2), 8): 2, ((6, 1), 10): 2, ((8, 2), 12): 2, ((3, 4), 10): 2, ((3, 1), 7): 2, ((4, 1), 8): 2, ((5, 0), 9): 2, ((2, 9), 6): 2, ((4, 6), 8): 2, ((3, 6), 30): 1, ((4, 7), 8): 1, ((9, 9), 32): 1, ((4, 8), 8): 1, ((1, 1), 1): 1, ((6, 9), 10): 1, ((9, 6), 13): 1, ((4, 3), 15): 1, ((5, 5), 8): 1, ((5, 6), 12): 1, ((2, 5), 6): 1, ((8, 1), 12): 1, ((8, 8), 5): 1, ((7, 0), 12): 1, ((0, 5), 1): 1, ((8, 4), 9): 1, ((6, 5), 9): 1, ((6, 3), 15): 1, ((9, 2), 63): 1, ((7, 6), 9): 1, ((6, 4), 54): 1, ((6, 0), 14): 1})
Symbol-06 (int -> int -> int), Samples:  62,  Counter({((9, 4), 11): 7, ((6, 1), 8): 4, ((7, 6), 13): 3, ((4, 5), 12): 3, ((7, 7), 14): 2, ((2, 1), 7): 2, ((8, 8), 15): 2, ((1, 6), 7): 2, ((7, 4), 11): 2, ((5, 4), 11): 2, ((1, 8), 7): 2, ((9, 6), 6): 2, ((5, 8), 15): 2, ((6, 7), 14): 2, ((5, 2), 35): 2, ((8, 9), 24): 1, ((7, 9), 16): 1, ((8, 4), 11): 1, ((4, 4), 11): 1, ((7, 5), 42): 1, ((0, 3), 0): 1, ((2, 3), 7): 1, ((3, 7), 14): 1, ((7, 0), 7): 1, ((5, 5), 12): 1, ((0, 9), 0): 1, ((4, 1), 8): 1, ((0, 4), 7): 1, ((5, 3), 10): 1, ((4, 8), 15): 1, ((2, 5), 24): 1, ((3, 0), 2): 1, ((3, 4), 28): 1, ((7, 2), 8): 1, ((1, 4), 15): 1, ((4, 6), 32): 1, ((7, 1), 1): 1, ((9, 7), 17): 1})
Symbol-12 (int -> int -> int), Samples:  65,  Counter({((9, 4), 14): 7, ((5, 2), 10): 5, ((4, 4), 9): 4, ((8, 4), 13): 3, ((7, 4), 12): 3, ((3, 1), 4): 3, ((0, 4), 5): 3, ((1, 6), 6): 3, ((2, 1), 4): 3, ((0, 8), 0): 2, ((1, 5), 6): 2, ((9, 5), 14): 2, ((0, 2), 5): 2, ((9, 9), 14): 2, ((4, 2), 9): 2, ((3, 3), 8): 2, ((0, 6), 5): 2, ((8, 6), 32): 1, ((5, 5), 10): 1, ((4, 3), 9): 1, ((7, 1), 21): 1, ((2, 4), 7): 1, ((7, 6), 14): 1, ((9, 2), 14): 1, ((5, 1), 10): 1, ((6, 1), 11): 1, ((4, 1), 4): 1, ((1, 8), 12): 1, ((2, 8), 11): 1, ((3, 6), 30): 1, ((6, 6), 16): 1, ((8, 2), 40): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0)))))))))
Symbol-00: 0 0 1.00
Symbol-14: 1 (incr 0) 1.00
Symbol-08: 2 (incr (incr 0)) 1.00
Symbol-02: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-13: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-10: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-03: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1)))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) 1.00
Symbol-05: fn (lambda (lambda (if0 (decr0 $1) (incr 0) (incr (incr (incr (incr $1))))))) 0.72
Symbol-12: fn (lambda (lambda (incr (incr (incr (incr (if0 (decr0 $0) (decr0 $0) (incr $1)))))))) 0.78
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (incr (incr (if0 (decr0 (decr0 $1)) 0 $0)))))))))) 0.73
Epoch time: 6m 56s
------------------------------
Epoch 16/499 (max_len=3, data=2820)
Train acc: 70.64 (abduce 96.84)
Dep:  Counter({(1, -1, 1): 1523, (-1,): 1000, (2, 2, -1): 195, (-1, 0, 0): 13})
Hit samples:  2731  Ave length:  2.27
Symbols:  15 [(0, 303), (1, 471), (2, 423), (3, 652), (4, 506), (5, 71), (6, 98), (7, 463), (8, 434), (9, 467), (10, 470), (11, 808), (12, 102), (13, 434), (14, 491)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-05 (int -> int -> int), Samples:  59,  Counter({((2, 3), 6): 4, ((5, 1), 9): 4, ((1, 4), 1): 3, ((7, 7), 11): 2, ((2, 5), 6): 2, ((8, 2), 12): 2, ((5, 0), 9): 2, ((8, 6), 12): 2, ((4, 2), 8): 2, ((7, 8), 11): 2, ((4, 3), 8): 2, ((6, 7), 10): 2, ((4, 7), 8): 2, ((5, 7), 9): 2, ((6, 9), 10): 2, ((4, 6), 32): 2, ((7, 1), 3): 2, ((8, 9), 12): 1, ((7, 9), 14): 1, ((3, 7), 7): 1, ((5, 5), 9): 1, ((9, 5), 13): 1, ((9, 9), 63): 1, ((5, 6), 9): 1, ((1, 9), 16): 1, ((2, 9), 2): 1, ((4, 4), 8): 1, ((3, 5), 7): 1, ((4, 1), 7): 1, ((0, 7), 1): 1, ((3, 4), 5): 1, ((5, 2), 25): 1, ((9, 4), 49): 1, ((3, 0), 5): 1, ((9, 2), 72): 1, ((2, 1), 6): 1, ((7, 0), 8): 1})
Symbol-06 (int -> int -> int), Samples:  61,  Counter({((6, 1), 8): 4, ((4, 5), 12): 3, ((4, 1), 8): 3, ((7, 7), 14): 2, ((8, 8), 15): 2, ((7, 8), 15): 2, ((7, 2), 9): 2, ((6, 4), 11): 2, ((5, 3), 10): 2, ((3, 7), 14): 2, ((9, 6), 6): 2, ((6, 7), 14): 2, ((2, 0), 7): 2, ((7, 6), 13): 2, ((8, 1), 8): 2, ((1, 8), 7): 2, ((2, 7), 7): 2, ((7, 4), 11): 2, ((1, 6), 7): 2, ((1, 9), 7): 2, ((5, 4), 11): 1, ((9, 4), 18): 1, ((4, 4), 11): 1, ((3, 8), 15): 1, ((6, 6), 16): 1, ((5, 1), 20): 1, ((0, 9), 45): 1, ((7, 3), 10): 1, ((5, 8), 14): 1, ((5, 7), 36): 1, ((3, 4), 9): 1, ((6, 2), 18): 1, ((5, 9), 40): 1, ((1, 4), 12): 1, ((9, 2), 36): 1, ((5, 0), 3): 1, ((9, 1), 36): 1})
Symbol-12 (int -> int -> int), Samples:  78,  Counter({((9, 4), 14): 6, ((2, 1), 4): 5, ((2, 4), 7): 5, ((8, 4), 13): 4, ((9, 5), 14): 3, ((1, 6), 6): 3, ((4, 1), 4): 3, ((5, 2), 10): 3, ((7, 6), 12): 3, ((4, 4), 9): 3, ((4, 2), 9): 2, ((0, 6), 5): 2, ((0, 4), 5): 2, ((7, 4), 12): 2, ((4, 3), 9): 2, ((3, 1), 4): 2, ((3, 3), 8): 2, ((5, 4), 10): 2, ((5, 7), 10): 2, ((0, 8), 0): 2, ((6, 9), 11): 2, ((1, 2), 6): 2, ((6, 6), 11): 2, ((1, 4), 6): 1, ((1, 7), 49): 1, ((1, 5), 6): 1, ((3, 2), 10): 1, ((0, 1), 3): 1, ((0, 3), 5): 1, ((6, 8), 11): 1, ((9, 1), 15): 1, ((8, 5), 24): 1, ((7, 3), 35): 1, ((1, 8), 48): 1, ((8, 2), 32): 1, ((6, 3), 11): 1, ((5, 6), 40): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0)))))))))
Symbol-00: 0 0 1.00
Symbol-14: 1 (incr 0) 1.00
Symbol-08: 2 (incr (incr 0)) 1.00
Symbol-02: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-13: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-10: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-03: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1)))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) 1.00
Symbol-05: fn (lambda (lambda (if0 (decr0 $1) (incr 0) (incr (incr (incr (incr $1))))))) 0.76
Symbol-12: fn (lambda (lambda (incr (incr (incr (incr (if0 (decr0 $0) (decr0 $0) (incr $1)))))))) 0.82
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (incr (incr (if0 (decr0 (decr0 $1)) 0 $0)))))))))) 0.75
Epoch time: 6m 58s
------------------------------
Epoch 17/499 (max_len=3, data=2820)
Train acc: 69.73 (abduce 96.31)
Dep:  Counter({(1, -1, 1): 1522, (-1,): 1000, (2, 2, -1): 186, (-1, 0, 0): 8})
Hit samples:  2716  Ave length:  2.26
Symbols:  15 [(0, 303), (1, 472), (2, 428), (3, 665), (4, 489), (5, 87), (6, 70), (7, 436), (8, 440), (9, 465), (10, 468), (11, 794), (12, 100), (13, 441), (14, 490)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-05 (int -> int -> int), Samples:  70,  Counter({((5, 1), 9): 4, ((4, 2), 8): 3, ((6, 1), 10): 3, ((2, 3), 6): 3, ((8, 6), 12): 3, ((2, 9), 6): 3, ((7, 7), 11): 3, ((2, 5), 6): 3, ((6, 5), 10): 2, ((5, 9), 9): 2, ((4, 1), 8): 2, ((9, 5), 13): 2, ((5, 4), 9): 2, ((6, 7), 10): 2, ((5, 0), 9): 2, ((1, 6), 1): 2, ((5, 8), 5): 2, ((4, 7), 8): 2, ((0, 1), 1): 2, ((8, 2), 12): 2, ((3, 4), 18): 1, ((3, 1), 7): 1, ((7, 8), 11): 1, ((1, 5), 1): 1, ((8, 3), 12): 1, ((4, 9), 14): 1, ((8, 9), 12): 1, ((1, 8), 32): 1, ((4, 3), 8): 1, ((5, 5), 20): 1, ((0, 4), 1): 1, ((9, 2), 13): 1, ((1, 4), 1): 1, ((6, 2), 6): 1, ((9, 1), 81): 1, ((9, 7), 36): 1, ((9, 3), 56): 1, ((4, 8), 8): 1, ((3, 0), 5): 1, ((9, 4), 45): 1, ((3, 9), 56): 1})
Symbol-06 (int -> int -> int), Samples:  52,  Counter({((4, 5), 12): 3, ((5, 1), 8): 3, ((4, 4), 11): 3, ((6, 1), 8): 3, ((0, 4), 7): 2, ((8, 4), 11): 2, ((3, 7), 14): 2, ((6, 4), 11): 2, ((8, 9), 24): 2, ((7, 7), 14): 2, ((0, 9), 7): 2, ((7, 1), 8): 2, ((8, 8), 15): 2, ((1, 2), 7): 2, ((1, 8), 7): 2, ((5, 4), 11): 1, ((7, 8), 15): 1, ((1, 1), 7): 1, ((7, 9), 16): 1, ((2, 0), 7): 1, ((6, 7), 14): 1, ((2, 7), 11): 1, ((4, 1), 8): 1, ((5, 8), 15): 1, ((9, 6), 6): 1, ((2, 8), 15): 1, ((9, 2), 9): 1, ((7, 5), 6): 1, ((3, 2), 9): 1, ((9, 1), 11): 1, ((3, 9), 10): 1, ((4, 2), 5): 1, ((8, 2), 21): 1})
Symbol-12 (int -> int -> int), Samples:  68,  Counter({((9, 4), 14): 7, ((2, 1), 4): 4, ((8, 4), 13): 4, ((4, 4), 9): 3, ((7, 6), 12): 3, ((3, 1), 4): 2, ((5, 4), 10): 2, ((5, 2), 10): 2, ((4, 2), 9): 2, ((4, 3), 9): 2, ((0, 6), 5): 2, ((1, 4), 6): 2, ((5, 5), 10): 2, ((1, 6), 6): 2, ((7, 4), 12): 2, ((9, 5), 14): 2, ((5, 7), 10): 2, ((4, 8), 48): 2, ((5, 1), 4): 1, ((3, 3), 8): 1, ((6, 6), 11): 1, ((2, 4), 7): 1, ((6, 1), 4): 1, ((9, 9), 14): 1, ((2, 3), 7): 1, ((6, 5), 11): 1, ((0, 8), 0): 1, ((0, 4), 5): 1, ((1, 8), 17): 1, ((2, 6), 7): 1, ((7, 8), 12): 1, ((6, 3), 11): 1, ((0, 3), 0): 1, ((1, 9), 14): 1, ((2, 5), 4): 1, ((0, 7), 18): 1, ((8, 8), 0): 1, ((9, 1), 45): 1, ((7, 7), 12): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0)))))))))
Symbol-00: 0 0 1.00
Symbol-14: 1 (incr 0) 1.00
Symbol-08: 2 (incr (incr 0)) 1.00
Symbol-02: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-13: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-10: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-03: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1)))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) 1.00
Symbol-05: fn (lambda (lambda (incr (if0 (decr0 $1) 0 (incr (incr (incr (incr (decr0 $1))))))))) 0.80
Symbol-12: fn (lambda (lambda (incr (incr (incr (incr (if0 (decr0 $0) (decr0 $0) (incr $1)))))))) 0.85
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (incr (incr (if0 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1)))))))))) $1 $1)) 0 $0)))))))))) 0.83
Epoch time: 6m 56s
------------------------------
Epoch 18/499 (max_len=3, data=2820)
Train acc: 71.32 (abduce 96.42)
Dep:  Counter({(1, -1, 1): 1509, (-1,): 1000, (2, 2, -1): 199, (-1, 0, 0): 11})
Hit samples:  2719  Ave length:  2.26
Symbols:  15 [(0, 307), (1, 478), (2, 432), (3, 639), (4, 498), (5, 75), (6, 104), (7, 454), (8, 423), (9, 465), (10, 448), (11, 809), (12, 92), (13, 441), (14, 492)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-05 (int -> int -> int), Samples:  58,  Counter({((2, 3), 6): 4, ((8, 6), 12): 4, ((8, 9), 12): 3, ((4, 6), 8): 3, ((5, 9), 9): 3, ((1, 1), 1): 2, ((5, 0), 9): 2, ((8, 2), 12): 2, ((4, 1), 8): 2, ((9, 5), 13): 2, ((4, 3), 8): 2, ((5, 4), 9): 2, ((3, 1), 7): 2, ((2, 5), 6): 2, ((9, 8), 64): 2, ((3, 9), 7): 2, ((2, 1), 6): 1, ((6, 4), 10): 1, ((4, 8), 8): 1, ((6, 9), 10): 1, ((6, 5), 9): 1, ((5, 1), 9): 1, ((9, 6), 13): 1, ((2, 4), 6): 1, ((6, 7), 24): 1, ((1, 6), 42): 1, ((3, 3), 27): 1, ((0, 4), 1): 1, ((9, 1), 45): 1, ((7, 8), 6): 1, ((7, 5), 28): 1, ((5, 8), 72): 1, ((0, 7), 0): 1, ((1, 5), 10): 1, ((3, 4), 13): 1})
Symbol-06 (int -> int -> int), Samples:  72,  Counter({((1, 7), 7): 5, ((6, 1), 8): 5, ((4, 5), 12): 5, ((5, 1), 8): 4, ((4, 4), 11): 3, ((0, 4), 7): 3, ((4, 7), 14): 2, ((8, 8), 15): 2, ((7, 6), 13): 2, ((5, 8), 15): 2, ((8, 9), 24): 2, ((1, 2), 7): 2, ((1, 1), 7): 2, ((5, 9), 16): 2, ((7, 2), 9): 2, ((9, 2), 9): 2, ((5, 4), 11): 2, ((9, 6), 6): 2, ((7, 9), 42): 2, ((5, 3), 10): 2, ((1, 6), 7): 2, ((3, 7), 14): 1, ((8, 0), 7): 1, ((4, 1), 8): 1, ((7, 8), 15): 1, ((4, 3), 32): 1, ((6, 7), 14): 1, ((7, 7), 14): 1, ((9, 4), 11): 1, ((4, 0), 6): 1, ((7, 5), 12): 1, ((9, 9), 45): 1, ((3, 5), 27): 1, ((3, 9), 18): 1, ((9, 0), 21): 1, ((3, 4), 9): 1, ((2, 4), 4): 1, ((4, 6), 16): 1})
Symbol-12 (int -> int -> int), Samples:  67,  Counter({((4, 4), 9): 5, ((9, 4), 14): 4, ((0, 4), 5): 4, ((5, 2), 10): 4, ((2, 1), 4): 3, ((7, 6), 12): 3, ((3, 1), 4): 3, ((2, 4), 7): 3, ((0, 6), 5): 2, ((5, 4), 10): 2, ((1, 4), 6): 2, ((1, 6), 6): 2, ((9, 5), 14): 2, ((6, 9), 11): 2, ((5, 6), 10): 2, ((4, 3), 9): 2, ((0, 2), 5): 2, ((9, 2), 14): 2, ((5, 7), 10): 2, ((5, 1), 4): 2, ((6, 6), 11): 1, ((9, 9), 14): 1, ((7, 8), 12): 1, ((8, 4), 13): 1, ((9, 1), 0): 1, ((8, 7), 13): 1, ((8, 5), 13): 1, ((9, 7), 18): 1, ((3, 4), 9): 1, ((2, 7), 7): 1, ((4, 1), 4): 1, ((6, 2), 24): 1, ((9, 3), 9): 1, ((5, 8), 7): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0)))))))))
Symbol-00: 0 0 1.00
Symbol-14: 1 (incr 0) 1.00
Symbol-08: 2 (incr (incr 0)) 1.00
Symbol-02: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-13: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-10: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-03: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1)))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) 1.00
Symbol-05: fn (lambda (lambda (incr (if0 (decr0 $1) 0 (incr (incr (incr (incr (decr0 $1))))))))) 0.75
Symbol-12: fn (lambda (lambda (incr (incr (incr (incr (if0 (decr0 $0) 0 (incr $1)))))))) 0.89
Symbol-06: fn (lambda (lambda (incr (incr (incr (incr (incr (incr (incr (if0 (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1)))))))))) $1 $1)) 0 $0)))))))))) 0.78
Epoch time: 6m 57s
------------------------------
Epoch 19/499 (max_len=3, data=2820)
Train acc: 70.64 (abduce 96.91)
Dep:  Counter({(1, -1, 1): 1508, (-1,): 1000, (2, 2, -1): 214, (-1, 0, 0): 11})
Hit samples:  2733  Ave length:  2.27
Symbols:  15 [(0, 308), (1, 465), (2, 423), (3, 646), (4, 513), (5, 69), (6, 116), (7, 463), (8, 429), (9, 475), (10, 471), (11, 796), (12, 106), (13, 434), (14, 485)]
Learn syntax with 2592 samples for 500 iterations, take 2 sec.
Learn perception with 2592 samples for 500 iterations, take 32 sec.
result accuracy by digit:
0 ( 0%) 100.00
1 ( 0%) 100.00
2 ( 0%) 90.00
3 ( 0%) 80.00
4 ( 0%) 80.00
5 ( 0%) 80.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 100.00
9 ( 0%) 100.00
val (Perception Acc=29.41, Syntax Acc=43.59, Result Acc=5.86)
Epoch time: 0m 41s
------------------------------
Epoch 20/499 (max_len=5, data=5115)
Train acc: 44.16 (abduce 72.61)
Dep:  Counter({(1, -1, 1): 1623, (-1,): 1000, (1, 3, 1, -1, 3): 462, (1, -1, 1, 1, 1): 213, (3, 3, 3, -1, 3): 189, (2, 2, -1): 126, (1, -1, 3, 1, 3): 57, (-1, 0, 0): 19, (2, 2, -1, 2, 2): 19, (1, -1, 4, 4, 1): 3, (4, 4, 4, 4, -1): 1, (-1, 0, 3, 0, 3): 1, (4, 3, 3, 4, -1): 1})
Hit samples:  3714  Ave length:  2.97
Symbols:  15 [(0, 533), (1, 741), (2, 764), (3, 1192), (4, 963), (5, 202), (6, 268), (7, 773), (8, 750), (9, 796), (10, 783), (11, 1389), (12, 187), (13, 810), (14, 883)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-05 (int -> int -> int -> int -> int), Samples:  93,  Counter({((5, 4, 7, 9), 245): 3, ((8, 9, 3, 9), 23): 2, ((3, 3, 4, 1), 7): 2, ((6, 4, 0, 1), 9): 2, ((6, 5, 5, 1), 30): 2, ((2, 7, 1, 3), 4): 2, ((3, 5, 9, 2), 17): 2, ((5, 8, 6, 9), 49): 2, ((7, 1, 4, 4), 11): 2, ((0, 2, 6, 9), 18): 2, ((4, 4, 6, 0), 4): 2, ((0, 1, 4, 1), 2): 2, ((8, 5, 1, 3), 16): 1, ((8, 4, 6, 1), 14): 1, ((6, 2, 2, 1), 9): 1, ((0, 0, 4, 2), 2): 1, ((4, 5, 2, 3), 13): 1, ((0, 2, 4, 6), 6): 1, ((1, 4, 3, 5), 16): 1, ((3, 7, 1, 8), 18): 1, ((6, 6, 4, 2), 26): 1, ((7, 2, 1, 5), 70): 1, ((5, 1, 8, 2), 50): 1, ((0, 4, 2, 9), 18): 1, ((6, 1, 8, 1), 9): 1, ((5, 7, 0, 9), 245): 1, ((8, 4, 4, 1), 12): 1, ((1, 4, 3, 1), 4): 1, ((1, 2, 8, 6), 13): 1, ((9, 1, 2, 0), 9): 1, ((7, 5, 0, 9), 315): 1, ((5, 5, 4, 6), 45): 1, ((1, 4, 4, 8), 13): 1, ((9, 4, 7, 6), 68): 1, ((7, 4, 5, 7), 42): 1, ((3, 4, 0, 3), 6): 1, ((8, 9, 5, 9), 168): 1, ((6, 4, 5, 1), 30): 1, ((5, 7, 2, 1), 35): 1, ((3, 6, 4, 7), 84): 1, ((2, 2, 1, 7), 28): 1, ((5, 3, 1, 1), 15): 1, ((8, 7, 6, 0), 6): 1, ((9, 3, 8, 1), 12): 1, ((0, 7, 2, 7), 70): 1, ((0, 2, 5, 6), 6): 1, ((5, 2, 9, 1), 11): 1, ((5, 7, 1, 4), 39): 1, ((9, 7, 4, 9), 45): 1, ((5, 7, 4, 8), 315): 1, ((1, 5, 4, 7), 13): 1, ((0, 1, 9, 3), 76): 1, ((0, 4, 1, 6), 6): 1, ((2, 8, 7, 2), 16): 1, ((6, 4, 4, 1), 11): 1, ((2, 7, 8, 8), 112): 1, ((6, 2, 4, 7), 19): 1, ((0, 3, 1, 2), 5): 1, ((2, 9, 5, 7), 15): 1, ((9, 6, 7, 7), 58): 1, ((5, 7, 1, 3), 26): 1, ((3, 5, 4, 1), 15): 1, ((0, 4, 4, 5), 5): 1, ((8, 7, 4, 0), 6): 1, ((5, 8, 5, 1), 26): 1, ((7, 5, 4, 5), 39): 1, ((0, 8, 9, 6), 0): 1, ((9, 4, 2, 4), 20): 1, ((3, 8, 7, 6), 144): 1, ((5, 6, 5, 2), 50): 1, ((0, 1, 2, 9), 18): 1, ((9, 1, 4, 9), 19): 1, ((4, 4, 4, 9), 108): 1, ((8, 4, 2, 1), 21): 1, ((6, 3, 4, 1), 24): 1, ((2, 1, 1, 5), 8): 1, ((7, 4, 4, 1), 12): 1, ((4, 9, 1, 9), 288): 1, ((1, 3, 4, 2), 7): 1, ((7, 3, 4, 5), 105): 1})
Symbol-06 (int -> int -> int -> int -> int), Samples:  85,  Counter({((4, 4, 8, 9), 17): 2, ((2, 4, 5, 8), 15): 2, ((5, 5, 6, 6), 35): 2, ((3, 0, 6, 2), 11): 2, ((8, 3, 1, 5), 16): 2, ((7, 4, 4, 1), 12): 2, ((9, 0, 1, 5), 9): 2, ((8, 4, 1, 7), 15): 2, ((5, 6, 6, 4), 13): 2, ((3, 5, 7, 0), 8): 2, ((0, 3, 4, 2), 5): 1, ((4, 1, 9, 3), 7): 1, ((2, 7, 8, 4), 9): 1, ((9, 9, 4, 9), 45): 1, ((7, 7, 5, 9), 315): 1, ((1, 1, 1, 8), 10): 1, ((4, 6, 4, 7), 23): 1, ((2, 5, 4, 8), 42): 1, ((0, 4, 8, 9), 9): 1, ((2, 4, 4, 9), 38): 1, ((3, 1, 0, 0), 3): 1, ((7, 3, 1, 7), 5): 1, ((7, 2, 1, 5), 17): 1, ((9, 4, 7, 7), 58): 1, ((0, 1, 1, 2), 3): 1, ((3, 4, 8, 9), 20): 1, ((2, 4, 3, 0), 12): 1, ((2, 4, 9, 8), 74): 1, ((2, 8, 1, 5), 8): 1, ((6, 1, 1, 1), 7): 1, ((6, 7, 4, 8), 62): 1, ((3, 8, 8, 1), 144): 1, ((3, 4, 6, 4), 14): 1, ((3, 2, 7, 3), 11): 1, ((4, 4, 3, 2), 24): 1, ((2, 4, 8, 3), 13): 1, ((1, 1, 8, 8), 65): 1, ((2, 9, 4, 6), 16): 1, ((3, 2, 4, 5), 11): 1, ((3, 7, 9, 8), 168): 1, ((8, 4, 5, 7), 20): 1, ((7, 9, 9, 9), 25): 1, ((3, 5, 4, 0), 8): 1, ((4, 4, 7, 2), 24): 1, ((1, 2, 7, 8), 10): 1, ((3, 1, 9, 6), 27): 1, ((4, 9, 3, 7), 13): 1, ((1, 9, 4, 6), 16): 1, ((7, 4, 6, 8), 50): 1, ((2, 5, 2, 8), 42): 1, ((9, 7, 2, 3), 108): 1, ((7, 1, 4, 7), 14): 1, ((0, 4, 6, 8), 8): 1, ((7, 4, 0, 7), 7): 1, ((2, 1, 2, 5), 23): 1, ((3, 8, 4, 6), 30): 1, ((9, 2, 2, 0), 72): 1, ((3, 1, 4, 4), 84): 1, ((9, 6, 4, 8), 62): 1, ((3, 1, 3, 8), 17): 1, ((0, 4, 3, 0), 3): 1, ((0, 6, 0, 8), 8): 1, ((8, 1, 0, 7), 15): 1, ((9, 4, 4, 0), 36): 1, ((7, 4, 7, 0), 12): 1, ((0, 4, 1, 3), 4): 1, ((8, 3, 0, 7), 23): 1, ((0, 4, 7, 9), 28): 1, ((8, 0, 4, 0), 2): 1, ((4, 6, 1, 8), 19): 1, ((5, 7, 3, 7), 26): 1, ((1, 1, 1, 2), 8): 1, ((4, 4, 1, 1), 7): 1, ((5, 1, 3, 7), 26): 1, ((6, 2, 4, 6), 13): 1})
Symbol-12 (int -> int -> int -> int -> int), Samples:  96,  Counter({((4, 3, 4, 7), 15): 3, ((5, 5, 1, 9), 360): 3, ((9, 4, 5, 9), 45): 3, ((8, 5, 1, 7), 20): 2, ((1, 1, 4, 6), 12): 2, ((3, 0, 4, 0), 3): 2, ((0, 8, 4, 5), 13): 2, ((5, 4, 1, 7), 33): 2, ((2, 1, 4, 9), 12): 2, ((4, 1, 1, 3), 7): 2, ((5, 3, 4, 2), 10): 2, ((8, 4, 6, 1), 14): 2, ((1, 4, 4, 6), 13): 2, ((2, 1, 2, 5), 8): 2, ((8, 1, 4, 3), 17): 2, ((9, 4, 7, 7), 70): 2, ((6, 4, 1, 8), 10): 2, ((3, 3, 4, 1), 7): 2, ((8, 4, 7, 1), 15): 2, ((8, 3, 4, 0), 72): 2, ((8, 4, 5, 8), 15): 2, ((7, 1, 6, 8), 50): 2, ((2, 1, 9, 4), 15): 1, ((3, 4, 8, 6), 144): 1, ((3, 3, 4, 6), 33): 1, ((4, 8, 8, 9), 288): 1, ((2, 7, 8, 8), 112): 1, ((7, 4, 4, 1), 13): 1, ((4, 7, 1, 3), 108): 1, ((8, 4, 8, 2), 22): 1, ((9, 4, 4, 2), 17): 1, ((7, 6, 1, 4), 168): 1, ((9, 2, 4, 7), 70): 1, ((0, 8, 4, 3), 13): 1, ((1, 2, 0, 8), 10): 1, ((6, 1, 1, 1), 7): 1, ((1, 1, 4, 9), 14): 1, ((7, 4, 6, 6), 43): 1, ((8, 6, 6, 3), 17): 1, ((8, 1, 2, 3), 14): 1, ((9, 4, 0, 5), 9): 1, ((1, 8, 8, 1), 9): 1, ((8, 3, 0, 0), 8): 1, ((6, 4, 2, 0), 24): 1, ((5, 7, 5, 6), 35): 1, ((3, 6, 2, 5), 33): 1, ((3, 4, 7, 0), 12): 1, ((5, 6, 4, 3), 90): 1, ((4, 4, 6, 0), 4): 1, ((7, 1, 2, 8), 50): 1, ((3, 7, 2, 5), 105): 1, ((9, 2, 4, 5), 23): 1, ((3, 7, 6, 5), 14): 1, ((4, 5, 1, 7), 42): 1, ((6, 1, 5, 3), 16): 1, ((8, 5, 4, 9), 16): 1, ((3, 1, 3, 8), 17): 1, ((2, 4, 2, 2), 6): 1, ((8, 7, 4, 1), 15): 1, ((5, 3, 0, 9), 15): 1, ((9, 5, 2, 6), 15): 1, ((0, 7, 6, 9), 54): 1, ((7, 1, 1, 3), 10): 1, ((2, 4, 6, 4), 48): 1, ((7, 1, 4, 4), 11): 1, ((1, 3, 8, 5), 16): 1, ((3, 4, 9, 6), 33): 1, ((5, 4, 4, 5), 25): 1, ((2, 6, 4, 4), 48): 1, ((7, 6, 0, 1), 168): 1, ((8, 7, 4, 2), 15): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0)))))))))
Symbol-00: 0 0 1.00
Symbol-14: 1 (incr 0) 1.00
Symbol-08: 2 (incr (incr 0)) 1.00
Symbol-02: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-13: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-10: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-05: None 0.00
Symbol-03: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1)))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) 1.00
Symbol-06: fn (lambda (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $3 $1)))))) 0.17
Symbol-12: fn (lambda (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $3 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1)))))))))) $1 $0)))))) 0.23
Epoch time: 7m 31s
------------------------------
Epoch 21/499 (max_len=5, data=5115)
Train acc: 42.95 (abduce 72.55)
Dep:  Counter({(1, -1, 1): 1599, (-1,): 1000, (1, 3, 1, -1, 3): 440, (1, -1, 1, 1, 1): 239, (3, 3, 3, -1, 3): 198, (2, 2, -1): 146, (1, -1, 3, 1, 3): 58, (-1, 0, 0): 15, (2, 2, -1, 2, 2): 11, (1, -1, 4, 4, 1): 2, (-1, 3, 3, 0, 0): 1, (4, 3, 3, 4, -1): 1, (4, 4, 4, 4, -1): 1})
Hit samples:  3711  Ave length:  2.97
Symbols:  15 [(0, 532), (1, 749), (2, 736), (3, 1185), (4, 981), (5, 173), (6, 242), (7, 759), (8, 779), (9, 791), (10, 789), (11, 1389), (12, 224), (13, 834), (14, 872)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-05 (int -> int -> int -> int -> int), Samples: 100,  Counter({((6, 5, 5, 1), 30): 3, ((7, 6, 2, 6), 43): 3, ((8, 4, 6, 7), 15): 3, ((8, 4, 4, 9), 13): 2, ((0, 7, 6, 5), 13): 2, ((2, 5, 8, 8), 42): 2, ((7, 5, 6, 7), 42): 2, ((4, 8, 6, 9), 49): 2, ((8, 4, 3, 9), 23): 2, ((2, 7, 4, 3), 38): 2, ((9, 8, 4, 3), 75): 2, ((5, 2, 1, 1), 11): 2, ((5, 2, 4, 5), 7): 2, ((1, 4, 1, 3), 13): 2, ((6, 4, 4, 9), 17): 2, ((6, 4, 4, 0), 24): 2, ((3, 2, 4, 9), 21): 1, ((4, 6, 1, 9), 19): 1, ((5, 4, 7, 9), 135): 1, ((3, 5, 4, 2), 17): 1, ((0, 1, 4, 8), 6): 1, ((9, 3, 5, 1), 12): 1, ((5, 8, 6, 1), 41): 1, ((4, 2, 1, 6), 14): 1, ((7, 6, 4, 4), 168): 1, ((4, 7, 1, 3), 108): 1, ((2, 2, 1, 9), 18): 1, ((6, 4, 9, 8), 76): 1, ((8, 6, 4, 3), 17): 1, ((9, 4, 8, 8), 65): 1, ((2, 2, 4, 7), 28): 1, ((6, 7, 4, 3), 26): 1, ((4, 8, 2, 9), 288): 1, ((0, 7, 2, 6), 6): 1, ((7, 4, 7, 1), 28): 1, ((7, 6, 1, 9), 19): 1, ((4, 3, 2, 3), 13): 1, ((9, 4, 7, 6), 68): 1, ((5, 8, 4, 3), 9): 1, ((8, 2, 2, 3), 16): 1, ((6, 2, 4, 1), 9): 1, ((5, 4, 2, 1), 11): 1, ((9, 6, 8, 5), 24): 1, ((0, 7, 4, 6), 6): 1, ((4, 5, 7, 7), 13): 1, ((2, 7, 4, 7), 16): 1, ((3, 5, 4, 0), 8): 1, ((8, 6, 8, 4), 24): 1, ((3, 2, 6, 6), 13): 1, ((6, 5, 4, 4), 17): 1, ((3, 4, 8, 1), 7): 1, ((4, 9, 4, 9), 15): 1, ((4, 5, 4, 7), 13): 1, ((3, 3, 4, 9), 21): 1, ((4, 2, 8, 8), 23): 1, ((3, 8, 8, 6), 144): 1, ((3, 4, 0, 3), 3): 1, ((9, 7, 4, 7), 70): 1, ((6, 1, 3, 8), 38): 1, ((5, 6, 2, 9), 39): 1, ((6, 4, 7, 6), 12): 1, ((0, 4, 6, 6), 28): 1, ((1, 6, 4, 5), 13): 1, ((0, 2, 4, 5), 5): 1, ((2, 1, 6, 1), 13): 1, ((0, 7, 6, 3), 6): 1, ((5, 6, 4, 8), 90): 1, ((9, 4, 6, 8), 62): 1, ((5, 8, 4, 5), 13): 1, ((1, 7, 4, 2), 16): 1, ((3, 9, 5, 1), 15): 1, ((7, 8, 5, 5), 47): 1, ((9, 4, 7, 7), 126): 1, ((0, 1, 0, 4), 24): 1, ((3, 2, 4, 5), 11): 1, ((8, 5, 1, 8), 360): 1, ((4, 4, 0, 0), 2): 1, ((7, 3, 1, 5), 105): 1, ((5, 0, 4, 9), 39): 1, ((8, 9, 5, 3), 120): 1, ((0, 1, 4, 1), 2): 1})
Symbol-06 (int -> int -> int -> int -> int), Samples:  90,  Counter({((1, 4, 4, 8), 13): 2, ((0, 6, 3, 4), 24): 2, ((0, 1, 1, 3), 4): 2, ((9, 0, 1, 5), 9): 2, ((8, 8, 3, 7), 168): 2, ((8, 4, 6, 3), 17): 2, ((8, 5, 1, 7), 20): 2, ((7, 8, 4, 2), 17): 2, ((6, 9, 4, 1), 9): 2, ((3, 7, 0, 1), 35): 1, ((3, 3, 7, 1), 7): 1, ((3, 1, 6, 5), 14): 1, ((5, 2, 4, 1), 11): 1, ((0, 8, 4, 9), 9): 1, ((3, 4, 5, 7), 5): 1, ((6, 7, 2, 8), 62): 1, ((3, 4, 8, 9), 20): 1, ((2, 4, 8, 3), 13): 1, ((0, 4, 3, 0), 3): 1, ((4, 1, 2, 7), 13): 1, ((5, 2, 5, 7), 32): 1, ((8, 9, 9, 9), 26): 1, ((2, 1, 5, 8), 15): 1, ((8, 2, 1, 5), 17): 1, ((9, 4, 6, 5), 17): 1, ((8, 4, 5, 7), 20): 1, ((1, 3, 6, 1), 4): 1, ((0, 1, 4, 1), 2): 1, ((2, 4, 7, 3), 21): 1, ((0, 8, 0, 4), 13): 1, ((9, 1, 4, 7), 19): 1, ((4, 4, 4, 8), 20): 1, ((3, 9, 4, 7), 13): 1, ((7, 5, 0, 7), 42): 1, ((5, 7, 8, 3), 26): 1, ((5, 4, 3, 2), 10): 1, ((7, 1, 8, 2), 17): 1, ((4, 3, 4, 2), 7): 1, ((1, 2, 4, 6), 12): 1, ((0, 1, 3, 0), 3): 1, ((1, 4, 4, 0), 36): 1, ((2, 2, 9, 2), 6): 1, ((9, 0, 0, 5), 9): 1, ((7, 4, 7, 1), 12): 1, ((7, 8, 7, 9), 58): 1, ((3, 5, 2, 7), 28): 1, ((7, 4, 6, 8), 50): 1, ((3, 1, 0, 0), 3): 1, ((7, 8, 6, 4), 168): 1, ((1, 9, 4, 6), 16): 1, ((9, 9, 8, 5), 22): 1, ((7, 4, 4, 1), 12): 1, ((9, 8, 4, 5), 13): 1, ((1, 4, 1, 8), 10): 1, ((6, 4, 4, 0), 24): 1, ((9, 4, 7, 7), 70): 1, ((2, 1, 1, 8), 7): 1, ((2, 3, 8, 2), 12): 1, ((9, 2, 8, 7), 126): 1, ((9, 4, 2, 7), 126): 1, ((6, 1, 8, 1), 7): 1, ((9, 4, 1, 7), 58): 1, ((0, 1, 0, 2), 2): 1, ((0, 1, 1, 1), 7): 1, ((5, 6, 6, 4), 13): 1, ((1, 1, 8, 6), 12): 1, ((8, 1, 3, 7), 168): 1, ((7, 7, 0, 9), 0): 1, ((9, 4, 2, 8), 44): 1, ((6, 4, 4, 5), 59): 1, ((4, 3, 7, 5), 12): 1, ((2, 4, 5, 8), 15): 1, ((2, 1, 4, 0), 3): 1, ((3, 6, 6, 5), 14): 1, ((9, 1, 6, 8), 62): 1, ((4, 4, 9, 2), 24): 1, ((8, 4, 5, 2), 15): 1, ((6, 4, 5, 6), 38): 1, ((2, 4, 0, 0), 2): 1, ((0, 4, 0, 3), 4): 1, ((2, 4, 4, 8), 45): 1})
Symbol-12 (int -> int -> int -> int -> int), Samples:  94,  Counter({((6, 7, 4, 0), 6): 3, ((4, 9, 4, 2), 15): 3, ((9, 2, 4, 5), 23): 2, ((6, 9, 4, 5), 59): 2, ((6, 7, 4, 8), 62): 2, ((3, 6, 4, 7), 84): 2, ((6, 4, 4, 9), 11): 2, ((8, 8, 8, 1), 25): 2, ((8, 4, 7, 1), 15): 2, ((6, 5, 1, 9), 360): 2, ((7, 4, 8, 6), 43): 2, ((7, 8, 4, 5), 61): 2, ((6, 8, 1, 0), 6): 1, ((9, 4, 4, 8), 44): 1, ((0, 4, 0, 8), 8): 1, ((9, 4, 7, 7), 70): 1, ((4, 6, 4, 0), 4): 1, ((8, 3, 6, 3), 16): 1, ((7, 4, 9, 1), 16): 1, ((9, 1, 1, 0), 9): 1, ((6, 7, 4, 3), 45): 1, ((8, 7, 4, 0), 8): 1, ((5, 4, 8, 1), 41): 1, ((5, 8, 8, 6), 30): 1, ((4, 4, 9, 3), 108): 1, ((8, 1, 1, 7), 15): 1, ((0, 0, 4, 2), 2): 1, ((1, 1, 9, 9), 76): 1, ((7, 2, 5, 7), 42): 1, ((5, 8, 4, 1), 41): 1, ((9, 9, 1, 0), 9): 1, ((5, 4, 3, 1), 15): 1, ((1, 4, 4, 7), 29): 1, ((2, 8, 9, 3), 13): 1, ((2, 8, 7, 2), 16): 1, ((0, 1, 2, 9), 18): 1, ((3, 2, 4, 5), 11): 1, ((7, 1, 1, 4), 11): 1, ((5, 3, 5, 2), 15): 1, ((2, 6, 4, 4), 48): 1, ((2, 2, 4, 2), 6): 1, ((5, 9, 6, 8), 37): 1, ((1, 8, 3, 9), 14): 1, ((1, 3, 5, 5), 16): 1, ((3, 4, 4, 1), 7): 1, ((6, 8, 1, 9), 288): 1, ((2, 1, 2, 5), 8): 1, ((2, 4, 1, 7), 15): 1, ((7, 4, 6, 1), 13): 1, ((3, 8, 4, 6), 33): 1, ((1, 4, 4, 3), 13): 1, ((9, 6, 4, 8), 62): 1, ((7, 4, 6, 7), 13): 1, ((1, 4, 4, 8), 10): 1, ((7, 6, 9, 1), 39): 1, ((7, 2, 3, 9), 25): 1, ((2, 1, 6, 4), 15): 1, ((0, 4, 4, 8), 8): 1, ((2, 2, 8, 2), 6): 1, ((9, 4, 8, 4), 73): 1, ((6, 5, 4, 3), 16): 1, ((7, 6, 1, 7), 14): 1, ((4, 2, 1, 3), 7): 1, ((1, 1, 8, 6), 13): 1, ((2, 8, 1, 1), 3): 1, ((5, 6, 7, 6), 39): 1, ((7, 4, 1, 5), 17): 1, ((1, 0, 6, 4), 0): 1, ((5, 5, 7, 1), 26): 1, ((7, 6, 1, 1), 168): 1, ((7, 8, 2, 1), 14): 1, ((7, 8, 1, 4), 11): 1, ((2, 2, 5, 2), 17): 1, ((5, 6, 4, 3), 90): 1, ((4, 4, 5, 6), 35): 1, ((1, 6, 8, 2), 9): 1, ((5, 0, 6, 1), 0): 1, ((5, 7, 8, 3), 168): 1, ((0, 4, 7, 4), 28): 1, ((7, 4, 0, 5), 7): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0)))))))))
Symbol-00: 0 0 1.00
Symbol-14: 1 (incr 0) 1.00
Symbol-08: 2 (incr (incr 0)) 1.00
Symbol-02: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-13: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-10: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-03: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1)))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) 1.00
Symbol-06: fn (lambda (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $3 $1)))))) 0.33
Symbol-12: fn (lambda (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $3 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1)))))))))) $1 $0)))))) 0.33
Symbol-05: fn (lambda (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1)))))))))) $2 $3) $0))))) 0.17
Epoch time: 7m 24s
------------------------------
Epoch 22/499 (max_len=5, data=5115)
Train acc: 42.47 (abduce 71.69)
Dep:  Counter({(1, -1, 1): 1614, (-1,): 1000, (1, 3, 1, -1, 3): 425, (1, -1, 1, 1, 1): 255, (3, 3, 3, -1, 3): 151, (2, 2, -1): 129, (1, -1, 3, 1, 3): 51, (2, 2, -1, 2, 2): 22, (-1, 0, 0): 13, (1, -1, 4, 4, 1): 2, (-1, 0, 3, 0, 3): 2, (4, 2, 4, 2, -1): 1, (3, 0, 0, -1, 3): 1, (4, 3, 3, 4, -1): 1})
Hit samples:  3667  Ave length:  2.95
Symbols:  15 [(0, 523), (1, 762), (2, 724), (3, 1178), (4, 955), (5, 205), (6, 203), (7, 761), (8, 756), (9, 799), (10, 764), (11, 1375), (12, 189), (13, 809), (14, 820)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-05 (int -> int -> int -> int -> int), Samples:  96,  Counter({((3, 0, 4, 0), 3): 2, ((6, 9, 6, 5), 12): 2, ((2, 8, 9, 9), 23): 2, ((8, 2, 6, 9), 14): 2, ((2, 2, 1, 2), 6): 2, ((6, 7, 6, 3), 6): 2, ((3, 5, 4, 2), 17): 2, ((9, 4, 8, 8), 44): 2, ((4, 5, 1, 7), 42): 2, ((4, 8, 3, 2), 24): 1, ((0, 4, 0, 8), 8): 1, ((1, 4, 2, 3), 13): 1, ((5, 6, 8, 2), 50): 1, ((7, 1, 1, 7), 14): 1, ((5, 2, 4, 1), 11): 1, ((2, 4, 9, 3), 21): 1, ((8, 4, 2, 9), 21): 1, ((3, 2, 7, 5), 11): 1, ((2, 9, 4, 3), 21): 1, ((0, 9, 4, 5), 5): 1, ((5, 8, 5, 1), 26): 1, ((5, 3, 2, 6), 26): 1, ((2, 4, 2, 9), 17): 1, ((5, 3, 1, 2), 10): 1, ((7, 6, 1, 3), 9): 1, ((3, 8, 4, 6), 30): 1, ((3, 0, 4, 9), 108): 1, ((5, 9, 4, 4), 39): 1, ((9, 2, 8, 7), 126): 1, ((9, 9, 4, 9), 25): 1, ((0, 0, 4, 1), 2): 1, ((5, 9, 9, 3), 76): 1, ((6, 3, 4, 2), 26): 1, ((1, 9, 8, 3), 81): 1, ((9, 6, 9, 9), 24): 1, ((5, 5, 4, 6), 35): 1, ((3, 1, 4, 0), 3): 1, ((8, 1, 1, 3), 27): 1, ((3, 7, 1, 8), 18): 1, ((5, 7, 2, 1), 35): 1, ((8, 4, 1, 4), 32): 1, ((0, 4, 8, 9), 288): 1, ((7, 2, 6, 8), 50): 1, ((9, 1, 2, 7), 15): 1, ((5, 3, 1, 1), 15): 1, ((2, 6, 4, 7), 15): 1, ((8, 5, 4, 3), 16): 1, ((6, 6, 2, 6), 6): 1, ((8, 4, 4, 9), 13): 1, ((8, 7, 4, 1), 15): 1, ((5, 1, 7, 1), 35): 1, ((5, 6, 2, 8), 90): 1, ((2, 3, 1, 9), 18): 1, ((0, 3, 4, 0), 3): 1, ((9, 6, 6, 4), 13): 1, ((4, 5, 4, 5), 39): 1, ((8, 1, 5, 7), 15): 1, ((4, 2, 1, 6), 14): 1, ((6, 4, 0, 0), 24): 1, ((6, 4, 1, 4), 7): 1, ((6, 9, 4, 5), 59): 1, ((7, 6, 7, 1), 13): 1, ((9, 2, 4, 7), 70): 1, ((2, 1, 4, 0), 3): 1, ((7, 1, 0, 8), 15): 1, ((4, 1, 9, 3), 7): 1, ((9, 4, 4, 0), 36): 1, ((6, 6, 1, 0), 4): 1, ((6, 2, 4, 7), 19): 1, ((5, 2, 1, 2), 50): 1, ((4, 5, 7, 9), 315): 1, ((0, 6, 7, 6), 6): 1, ((3, 8, 4, 9), 20): 1, ((7, 1, 8, 8), 15): 1, ((7, 8, 8, 5), 61): 1, ((0, 1, 9, 8), 8): 1, ((3, 4, 4, 1), 9): 1, ((7, 3, 1, 6), 105): 1, ((1, 3, 8, 2), 7): 1, ((9, 4, 7, 6), 68): 1, ((3, 2, 4, 5), 11): 1, ((6, 1, 6, 1), 7): 1, ((5, 8, 4, 9), 9): 1, ((9, 7, 6, 7), 58): 1, ((2, 2, 5, 2), 6): 1, ((9, 6, 9, 6), 45): 1, ((7, 5, 2, 7), 42): 1})
Symbol-06 (int -> int -> int -> int -> int), Samples:  92,  Counter({((5, 3, 4, 2), 10): 4, ((2, 2, 4, 6), 15): 2, ((8, 4, 6, 3), 17): 2, ((6, 4, 2, 8), 62): 2, ((9, 1, 4, 9), 19): 2, ((8, 5, 4, 8), 38): 2, ((3, 7, 4, 8), 18): 2, ((6, 6, 4, 7), 17): 2, ((3, 2, 8, 9), 21): 2, ((0, 4, 0, 8), 8): 2, ((2, 4, 7, 7), 16): 2, ((2, 1, 4, 9), 12): 2, ((9, 3, 4, 1), 12): 1, ((8, 4, 6, 6), 43): 1, ((5, 4, 5, 7), 32): 1, ((3, 6, 3, 1), 7): 1, ((5, 6, 2, 1), 11): 1, ((6, 8, 4, 1), 9): 1, ((2, 4, 8, 3), 13): 1, ((3, 7, 0, 1), 35): 1, ((8, 7, 6, 1), 15): 1, ((3, 2, 3, 5), 11): 1, ((7, 9, 1, 1), 16): 1, ((1, 2, 4, 6), 13): 1, ((4, 2, 8, 7), 13): 1, ((5, 4, 7, 9), 135): 1, ((8, 9, 1, 9), 26): 1, ((4, 3, 4, 7), 15): 1, ((2, 7, 4, 9), 12): 1, ((1, 3, 5, 2), 7): 1, ((1, 2, 8, 6), 13): 1, ((2, 2, 8, 7), 28): 1, ((9, 4, 2, 0), 17): 1, ((7, 3, 4, 1), 19): 1, ((3, 4, 8, 9), 20): 1, ((6, 6, 4, 2), 26): 1, ((3, 0, 5, 7), 5): 1, ((7, 8, 4, 2), 17): 1, ((9, 1, 4, 7), 70): 1, ((8, 9, 4, 9), 26): 1, ((3, 6, 1, 5), 14): 1, ((3, 5, 8, 6), 30): 1, ((9, 4, 1, 9), 19): 1, ((8, 9, 7, 5), 23): 1, ((0, 4, 0, 9), 13): 1, ((3, 2, 4, 9), 21): 1, ((2, 5, 4, 7), 15): 1, ((1, 4, 1, 9), 19): 1, ((0, 4, 3, 4), 28): 1, ((2, 7, 4, 1), 9): 1, ((3, 1, 0, 3), 6): 1, ((6, 4, 4, 1), 11): 1, ((8, 4, 5, 7), 20): 1, ((2, 4, 9, 4), 15): 1, ((4, 6, 1, 9), 19): 1, ((0, 1, 4, 7), 3): 1, ((0, 3, 2, 0), 3): 1, ((1, 4, 4, 8), 13): 1, ((9, 8, 4, 6), 62): 1, ((3, 1, 4, 8), 18): 1, ((8, 4, 3, 5), 16): 1, ((2, 4, 1, 9), 12): 1, ((1, 1, 4, 6), 11): 1, ((2, 0, 7, 7), 16): 1, ((8, 8, 4, 3), 17): 1, ((0, 4, 4, 9), 13): 1, ((9, 1, 4, 5), 19): 1, ((8, 1, 4, 1), 28): 1, ((3, 9, 7, 8), 17): 1, ((4, 2, 4, 7), 13): 1, ((2, 1, 8, 3), 13): 1, ((1, 9, 4, 8), 13): 1, ((7, 4, 2, 4), 13): 1, ((9, 1, 6, 8), 62): 1, ((6, 1, 4, 6), 6): 1, ((8, 5, 4, 3), 16): 1, ((3, 4, 8, 1), 7): 1, ((7, 9, 8, 2), 17): 1})
Symbol-12 (int -> int -> int -> int -> int), Samples:  96,  Counter({((4, 9, 1, 2), 15): 4, ((3, 6, 4, 7), 84): 3, ((1, 2, 0, 6), 12): 2, ((7, 4, 9, 1), 16): 2, ((0, 7, 1, 6), 28): 2, ((4, 1, 1, 3), 7): 2, ((4, 8, 4, 9), 288): 2, ((7, 8, 4, 2), 17): 2, ((7, 2, 4, 9), 58): 2, ((4, 6, 4, 7), 23): 2, ((8, 5, 1, 7), 20): 2, ((2, 6, 4, 5), 14): 2, ((9, 4, 8, 6), 144): 2, ((8, 4, 6, 1), 14): 2, ((1, 9, 4, 6), 12): 2, ((5, 3, 7, 7), 26): 2, ((3, 3, 4, 1), 7): 2, ((3, 4, 4, 1), 7): 2, ((8, 4, 3, 5), 23): 1, ((7, 6, 1, 4), 168): 1, ((8, 6, 6, 3), 16): 1, ((0, 0, 1, 8), 8): 1, ((2, 5, 9, 8), 74): 1, ((0, 4, 6, 4), 24): 1, ((0, 1, 4, 0), 0): 1, ((4, 9, 8, 8), 76): 1, ((9, 4, 4, 2), 17): 1, ((5, 4, 5, 8), 45): 1, ((3, 4, 6, 8), 37): 1, ((4, 8, 8, 9), 288): 1, ((7, 4, 4, 0), 7): 1, ((7, 1, 6, 1), 13): 1, ((6, 8, 4, 8), 38): 1, ((1, 4, 3, 5), 16): 1, ((9, 9, 4, 9), 45): 1, ((4, 6, 1, 3), 7): 1, ((2, 4, 4, 9), 38): 1, ((4, 9, 7, 5), 15): 1, ((2, 3, 4, 8), 15): 1, ((8, 4, 2, 3), 14): 1, ((0, 6, 3, 4), 24): 1, ((0, 6, 4, 7), 5): 1, ((5, 5, 5, 8), 45): 1, ((5, 0, 2, 7), 5): 1, ((8, 0, 2, 5), 23): 1, ((2, 8, 9, 3), 13): 1, ((9, 6, 6, 6), 45): 1, ((0, 4, 6, 1), 54): 1, ((4, 9, 7, 9), 15): 1, ((5, 8, 2, 1), 15): 1, ((4, 3, 4, 5), 12): 1, ((9, 4, 4, 5), 68): 1, ((4, 9, 9, 8), 76): 1, ((9, 4, 7, 7), 70): 1, ((7, 7, 6, 6), 43): 1, ((7, 2, 4, 0), 7): 1, ((5, 1, 7, 6), 30): 1, ((3, 6, 4, 1), 15): 1, ((3, 5, 0, 8), 45): 1, ((1, 1, 3, 7), 7): 1, ((8, 4, 4, 0), 2): 1, ((3, 6, 4, 4), 14): 1, ((5, 4, 4, 5), 25): 1, ((7, 2, 9, 1), 16): 1, ((2, 4, 7, 1), 9): 1, ((8, 3, 8, 0), 8): 1, ((5, 4, 8, 3), 20): 1, ((7, 6, 9, 3), 21): 1, ((8, 9, 0, 9), 648): 1, ((8, 7, 2, 0), 8): 1, ((5, 4, 5, 6), 35): 1, ((7, 8, 1, 2), 9): 1, ((3, 4, 4, 0), 3): 1, ((9, 4, 1, 0), 9): 1, ((8, 3, 4, 5), 16): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0)))))))))
Symbol-00: 0 0 1.00
Symbol-14: 1 (incr 0) 1.00
Symbol-08: 2 (incr (incr 0)) 1.00
Symbol-02: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-13: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-10: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-03: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1)))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) 1.00
Symbol-06: fn (lambda (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $1 $3)))))) 0.29
Symbol-12: fn (lambda (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $3 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1)))))))))) $1 $0)))))) 0.44
Symbol-05: fn (lambda (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1)))))))))) $2 $3) $0))))) 0.35
Epoch time: 7m 27s
------------------------------
Epoch 23/499 (max_len=5, data=5115)
Train acc: 42.52 (abduce 71.59)
Dep:  Counter({(1, -1, 1): 1621, (-1,): 1000, (1, 3, 1, -1, 3): 415, (1, -1, 1, 1, 1): 255, (3, 3, 3, -1, 3): 159, (2, 2, -1): 121, (1, -1, 3, 1, 3): 57, (2, 2, -1, 2, 2): 16, (-1, 0, 0): 12, (1, -1, 4, 4, 1): 3, (3, 0, 0, -1, 3): 2, (4, 4, 4, 4, -1): 1})
Hit samples:  3662  Ave length:  2.95
Symbols:  15 [(0, 527), (1, 731), (2, 737), (3, 1184), (4, 962), (5, 209), (6, 206), (7, 779), (8, 737), (9, 788), (10, 743), (11, 1365), (12, 175), (13, 823), (14, 836)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-05 (int -> int -> int -> int -> int), Samples:  90,  Counter({((4, 8, 4, 1), 13): 3, ((7, 2, 2, 6), 43): 3, ((9, 8, 4, 5), 22): 2, ((3, 4, 7, 5), 105): 2, ((9, 2, 4, 5), 23): 2, ((2, 5, 8, 8), 42): 2, ((0, 0, 4, 2), 2): 2, ((4, 8, 6, 9), 288): 2, ((0, 4, 0, 8), 8): 2, ((5, 1, 0, 7), 5): 2, ((3, 4, 7, 7), 245): 2, ((3, 1, 4, 8), 18): 1, ((2, 4, 4, 4), 12): 1, ((1, 4, 9, 8), 13): 1, ((3, 7, 1, 5), 105): 1, ((8, 4, 9, 9), 648): 1, ((3, 9, 4, 6), 33): 1, ((8, 1, 4, 7), 15): 1, ((8, 7, 1, 3), 4): 1, ((3, 1, 4, 0), 36): 1, ((5, 6, 4, 9), 39): 1, ((3, 8, 1, 6), 144): 1, ((9, 8, 6, 3), 75): 1, ((3, 4, 7, 8), 168): 1, ((1, 9, 4, 6), 16): 1, ((9, 6, 7, 9), 24): 1, ((6, 5, 5, 1), 30): 1, ((8, 4, 5, 3), 120): 1, ((8, 7, 8, 8), 112): 1, ((7, 6, 4, 1), 13): 1, ((3, 4, 2, 9), 21): 1, ((8, 3, 2, 5), 23): 1, ((6, 4, 4, 0), 24): 1, ((2, 7, 4, 9), 23): 1, ((4, 4, 7, 4), 20): 1, ((9, 9, 1, 7), 58): 1, ((4, 5, 1, 7), 42): 1, ((2, 9, 3, 3), 74): 1, ((0, 1, 6, 8), 8): 1, ((7, 8, 4, 6), 62): 1, ((3, 7, 1, 8), 18): 1, ((5, 7, 8, 3), 26): 1, ((1, 1, 8, 6), 12): 1, ((4, 8, 1, 9), 288): 1, ((9, 6, 4, 8), 62): 1, ((4, 4, 4, 7), 29): 1, ((6, 6, 2, 8), 90): 1, ((7, 3, 1, 5), 105): 1, ((4, 3, 2, 3), 13): 1, ((2, 4, 3, 0), 12): 1, ((5, 6, 8, 2), 50): 1, ((8, 3, 1, 4), 11): 1, ((8, 5, 4, 9), 16): 1, ((7, 5, 2, 1), 35): 1, ((1, 5, 4, 7), 13): 1, ((6, 2, 4, 7), 19): 1, ((3, 6, 4, 0), 72): 1, ((2, 0, 4, 0), 2): 1, ((0, 1, 3, 6), 6): 1, ((3, 7, 4, 9), 21): 1, ((9, 5, 4, 4), 39): 1, ((7, 8, 4, 5), 19): 1, ((3, 4, 4, 5), 17): 1, ((5, 5, 4, 1), 26): 1, ((2, 2, 4, 2), 6): 1, ((5, 2, 4, 1), 11): 1, ((7, 7, 5, 5), 105): 1, ((9, 7, 4, 5), 68): 1, ((4, 1, 4, 0), 36): 1, ((0, 4, 6, 9), 288): 1, ((0, 1, 3, 8), 8): 1, ((8, 3, 4, 1), 25): 1, ((5, 4, 4, 8), 45): 1, ((3, 8, 0, 3), 3): 1, ((9, 8, 9, 4), 288): 1, ((7, 2, 1, 9), 25): 1, ((9, 6, 4, 7), 24): 1})
Symbol-06 (int -> int -> int -> int -> int), Samples:  93,  Counter({((9, 0, 1, 5), 9): 2, ((0, 3, 4, 0), 3): 2, ((6, 9, 2, 2), 26): 2, ((3, 5, 4, 0), 8): 2, ((3, 7, 8, 5), 105): 2, ((0, 1, 1, 3), 4): 2, ((5, 4, 4, 0), 12): 2, ((1, 4, 4, 8), 13): 2, ((8, 4, 6, 3), 17): 2, ((2, 0, 9, 5), 2): 2, ((7, 0, 4, 1), 12): 2, ((3, 4, 4, 2), 12): 2, ((4, 1, 2, 7), 13): 1, ((4, 3, 4, 7), 15): 1, ((4, 9, 4, 8), 15): 1, ((3, 0, 6, 2), 11): 1, ((7, 4, 1, 1), 7): 1, ((9, 1, 2, 5), 23): 1, ((2, 8, 9, 9), 23): 1, ((0, 7, 4, 0), 8): 1, ((7, 5, 4, 9), 315): 1, ((8, 9, 1, 5), 16): 1, ((0, 4, 8, 1), 13): 1, ((7, 5, 6, 9), 315): 1, ((5, 6, 6, 4), 13): 1, ((0, 5, 1, 1), 2): 1, ((7, 0, 4, 7), 7): 1, ((9, 4, 1, 9), 19): 1, ((9, 1, 6, 8), 62): 1, ((0, 1, 0, 8), 8): 1, ((4, 3, 4, 5), 12): 1, ((5, 5, 0, 6), 35): 1, ((6, 4, 4, 1), 11): 1, ((0, 3, 1, 2), 5): 1, ((6, 4, 7, 3), 45): 1, ((5, 7, 4, 3), 26): 1, ((4, 4, 6, 9), 19): 1, ((8, 3, 4, 5), 16): 1, ((4, 1, 9, 2), 15): 1, ((8, 4, 5, 7), 20): 1, ((5, 4, 3, 8), 45): 1, ((2, 7, 2, 3), 38): 1, ((2, 1, 4, 1), 12): 1, ((8, 9, 9, 9), 26): 1, ((7, 8, 8, 2), 17): 1, ((0, 9, 9, 8), 76): 1, ((0, 6, 3, 0), 3): 1, ((9, 4, 6, 8), 62): 1, ((4, 6, 4, 7), 23): 1, ((1, 8, 2, 8), 65): 1, ((6, 4, 3, 8), 62): 1, ((5, 0, 1, 1), 15): 1, ((2, 3, 2, 3), 13): 1, ((8, 1, 6, 3), 17): 1, ((4, 8, 4, 3), 13): 1, ((7, 4, 3, 4), 13): 1, ((9, 1, 4, 3), 27): 1, ((7, 2, 8, 8), 23): 1, ((6, 8, 4, 1), 9): 1, ((0, 1, 1, 2), 3): 1, ((5, 2, 1, 3), 18): 1, ((9, 0, 0, 5), 9): 1, ((0, 7, 4, 4), 11): 1, ((6, 8, 2, 7), 19): 1, ((9, 6, 9, 9), 24): 1, ((4, 0, 0, 9), 17): 1, ((7, 9, 8, 2), 17): 1, ((8, 1, 9, 1), 12): 1, ((8, 4, 3, 5), 16): 1, ((5, 4, 9, 2), 10): 1, ((5, 2, 7, 7), 245): 1, ((4, 4, 9, 2), 24): 1, ((2, 4, 3, 7), 26): 1, ((3, 9, 7, 3), 26): 1, ((5, 5, 4, 6), 50): 1, ((6, 5, 4, 1), 24): 1, ((3, 4, 6, 5), 14): 1, ((1, 8, 4, 2), 11): 1, ((7, 1, 2, 1), 14): 1, ((0, 4, 2, 4), 54): 1, ((5, 6, 2, 8), 39): 1})
Symbol-12 (int -> int -> int -> int -> int), Samples:  95,  Counter({((6, 7, 4, 0), 6): 4, ((5, 3, 4, 1), 15): 4, ((4, 1, 1, 3), 7): 3, ((3, 4, 3, 8), 17): 3, ((4, 8, 8, 9), 288): 3, ((7, 1, 1, 7), 14): 3, ((8, 4, 5, 1), 15): 2, ((0, 8, 4, 5), 13): 2, ((8, 8, 3, 7), 168): 2, ((2, 4, 9, 8), 74): 2, ((0, 1, 4, 1), 2): 2, ((2, 9, 4, 4), 15): 2, ((5, 7, 6, 8), 37): 2, ((8, 4, 3, 5), 23): 2, ((7, 4, 1, 4), 11): 2, ((1, 4, 4, 3), 13): 2, ((4, 5, 4, 3), 16): 2, ((8, 7, 4, 0), 8): 2, ((1, 7, 4, 6), 12): 1, ((4, 5, 2, 2), 24): 1, ((3, 4, 4, 8), 10): 1, ((5, 1, 7, 4), 28): 1, ((0, 4, 0, 8), 8): 1, ((5, 5, 4, 6), 35): 1, ((3, 6, 4, 7), 84): 1, ((4, 1, 6, 0), 4): 1, ((5, 4, 7, 3), 26): 1, ((5, 7, 0, 7), 245): 1, ((5, 7, 8, 7), 54): 1, ((3, 4, 2, 9), 21): 1, ((1, 0, 8, 1), 5): 1, ((7, 9, 2, 9), 25): 1, ((5, 4, 5, 1), 35): 1, ((8, 7, 3, 0), 8): 1, ((8, 6, 5, 6), 15): 1, ((4, 9, 1, 3), 108): 1, ((9, 9, 4, 9), 45): 1, ((2, 4, 2, 0), 2): 1, ((9, 4, 6, 6), 43): 1, ((4, 9, 9, 8), 76): 1, ((9, 7, 1, 0), 9): 1, ((5, 7, 1, 7), 54): 1, ((8, 3, 1, 0), 8): 1, ((0, 9, 4, 3), 13): 1, ((1, 8, 8, 1), 9): 1, ((5, 2, 4, 7), 28): 1, ((7, 9, 9, 1), 16): 1, ((7, 5, 0, 9), 315): 1, ((7, 2, 2, 9), 25): 1, ((9, 8, 4, 2), 17): 1, ((0, 0, 1, 8), 8): 1, ((7, 4, 1, 3), 10): 1, ((8, 7, 5, 0), 8): 1, ((3, 8, 5, 2), 17): 1, ((0, 1, 3, 7), 2): 1, ((1, 3, 2, 5), 16): 1, ((3, 7, 7, 1), 35): 1, ((7, 3, 3, 5), 12): 1, ((7, 4, 0, 4), 28): 1, ((4, 3, 9, 3), 13): 1, ((8, 1, 7, 9), 26): 1, ((7, 6, 4, 1), 28): 1, ((7, 4, 6, 1), 13): 1, ((3, 1, 9, 2), 21): 1, ((4, 3, 6, 2), 24): 1, ((6, 7, 6, 3), 12): 1, ((0, 4, 1, 8), 8): 1, ((3, 5, 7, 2), 17): 1, ((1, 6, 3, 4), 13): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0)))))))))
Symbol-00: 0 0 1.00
Symbol-14: 1 (incr 0) 1.00
Symbol-08: 2 (incr (incr 0)) 1.00
Symbol-02: 3 (incr (incr (incr 0))) 1.00
Symbol-04: 4 (incr (incr (incr (incr 0)))) 1.00
Symbol-07: 5 (incr (incr (incr (incr (incr 0))))) 1.00
Symbol-01: 6 (incr (incr (incr (incr (incr (incr 0)))))) 1.00
Symbol-13: 7 (incr (incr (incr (incr (incr (incr (incr 0))))))) 1.00
Symbol-10: 8 (incr (incr (incr (incr (incr (incr (incr (incr 0)))))))) 1.00
Symbol-09: 9 (incr (incr (incr (incr (incr (incr (incr (incr (incr 0))))))))) 1.00
Symbol-03: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1)))))))))) 1.00
Symbol-11: fn (lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) 1.00
Symbol-05: fn (lambda (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1)))))))))) $2 $3) $0))))) 0.32
Symbol-06: fn (lambda (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $1 $3) (incr (decr0 $0))))))) 0.30
Symbol-12: fn (lambda (lambda (lambda (lambda (decr0 (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $3 (incr (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1)))))))))) $1 $0)))))))) 0.46
Epoch time: 7m 26s
------------------------------
Epoch 24/499 (max_len=5, data=5115)
Train acc: 42.64 (abduce 72.00)
Dep:  Counter({(1, -1, 1): 1621, (-1,): 1000, (1, 3, 1, -1, 3): 422, (1, -1, 1, 1, 1): 233, (3, 3, 3, -1, 3): 173, (2, 2, -1): 138, (1, -1, 3, 1, 3): 61, (2, 2, -1, 2, 2): 17, (-1, 0, 0): 7, (1, -1, 4, 4, 1): 3, (-1, 0, 0, 0, 0): 3, (4, 4, 4, 4, -1): 2, (4, 3, 3, 4, -1): 1, (3, 0, 0, -1, 3): 1, (2, 2, 3, -1, 3): 1})
Hit samples:  3683  Ave length:  2.95
Symbols:  15 [(0, 521), (1, 725), (2, 729), (3, 1182), (4, 943), (5, 208), (6, 203), (7, 748), (8, 762), (9, 802), (10, 784), (11, 1380), (12, 199), (13, 823), (14, 874)]
Learn syntax with 3239 samples for 500 iterations, take 2 sec.
Learn perception with 3239 samples for 500 iterations, take 26 sec.
result accuracy by digit:
0 ( 0%) 90.00
1 ( 0%) 100.00
2 ( 0%) 90.00
3 ( 0%) 90.00
4 ( 0%) 90.00
5 ( 0%) 90.00
6 ( 0%) 100.00
7 ( 0%) 100.00
8 ( 0%) 90.00
9 ( 0%) 100.00
val (Perception Acc=29.58, Syntax Acc=73.18, Result Acc=14.61)
Epoch time: 0m 42s
------------------------------
Epoch 25/499 (max_len=5, data=5115)
Train acc: 56.57 (abduce 90.07)
Dep:  Counter({(1, -1, 1): 1678, (1, 3, 1, -1, 3): 1336, (-1,): 1000, (1, -1, 1, 1, 1): 215, (3, 3, 3, -1, 3): 196, (1, -1, 3, 1, 3): 108, (2, 2, -1): 57, (2, 2, -1, 2, 2): 9, (1, -1, 4, 4, 1): 3, (-1, 0, 0): 2, (4, 3, 3, 4, -1): 2, (4, 4, 4, 4, -1): 1})
Hit samples:  4607  Ave length:  3.38
Symbols:  15 [(0, 708), (1, 964), (2, 1042), (3, 1928), (4, 1197), (5, 323), (6, 149), (7, 1078), (8, 1053), (9, 1055), (10, 1019), (11, 2373), (12, 283), (13, 1191), (14, 1198)]
Semantics: 15/12/3 (total/solved/learn).
Symbol-05 (int -> int -> int), Samples: 100,  Counter({((3, 5), 7): 5, ((9, 8), 65): 4, ((15, 0), 8): 4, ((13, 2), 17): 4, ((16, 7), 58): 3, ((11, 5), 23): 3, ((13, 8), 62): 3, ((10, 8), 45): 3, ((5, 9), 21): 2, ((9, 7), 15): 2, ((4, 2), 7): 2, ((6, 7), 10): 2, ((12, 7), 54): 2, ((8, 8), 15): 2, ((12, 6), 52): 2, ((8, 2), 15): 2, ((7, 7), 11): 2, ((11, 0), 8): 2, ((10, 9), 315): 2, ((3, 7), 14): 2, ((12, 3), 26): 2, ((9, 9), 25): 2, ((8, 7), 26): 2, ((13, 0), 6): 1, ((4, 6), 8): 1, ((9, 5), 17): 1, ((7, 3), 26): 1, ((9, 6), 23): 1, ((12, 2), 21): 1, ((12, 4), 41): 1, ((10, 1), 35): 1, ((1, 1), 4): 1, ((3, 6), 13): 1, ((7, 8), 42): 1, ((18, 7), 61): 1, ((14, 4), 41): 1, ((13, 6), 43): 1, ((10, 7), 54): 1, ((6, 9), 38): 1, ((2, 7), 6): 1, ((5, 5), 9): 1, ((11, 8), 8): 1, ((16, 5), 17): 1, ((9, 2), 3): 1, ((5, 1), 7): 1, ((3, 9), 7): 1, ((4, 0), 3): 1, ((24, 0), 45): 1, ((9, 36), 288): 1, ((10, 4), 19): 1, ((14, 9), 58): 1, ((2, 8), 15): 1, ((5, 3), 13): 1, ((11, 9), 23): 1, ((6, 8), 65): 1, ((10, 0), 4): 1, ((3, 2), 7): 1, ((12, 0), 4): 1, ((18, 8), 62): 1, ((5, 2), 9): 1, ((7, 40), 61): 1, ((10, 6), 35): 1, ((8, 6), 15): 1, ((7, 9), 39): 1})
Symbol-06 (int -> int -> int -> int -> int), Samples:  98,  Counter({((2, 1, 5, 8), 15): 4, ((1, 4, 2, 3), 13): 4, ((1, 1, 1, 8), 10): 3, ((3, 5, 4, 0), 8): 3, ((5, 2, 4, 9), 18): 3, ((1, 4, 4, 8), 13): 3, ((8, 4, 6, 3), 17): 2, ((8, 4, 9, 9), 26): 2, ((0, 1, 1, 3), 4): 2, ((8, 7, 9, 9), 26): 2, ((6, 4, 4, 1), 11): 2, ((7, 1, 8, 6), 62): 2, ((3, 7, 6, 4), 13): 2, ((5, 6, 6, 4), 13): 2, ((8, 2, 1, 5), 17): 2, ((7, 8, 4, 7), 17): 2, ((2, 8, 1, 5), 8): 2, ((2, 7, 6, 7), 15): 2, ((1, 2, 8, 6), 13): 1, ((0, 4, 7, 4), 11): 1, ((3, 4, 9, 6), 33): 1, ((5, 5, 6, 6), 35): 1, ((5, 7, 4, 3), 26): 1, ((3, 4, 7, 6), 27): 1, ((1, 4, 9, 6), 16): 1, ((3, 4, 3, 8), 17): 1, ((3, 8, 6, 6), 15): 1, ((2, 4, 6, 7), 15): 1, ((3, 1, 7, 0), 21): 1, ((4, 1, 2, 7), 13): 1, ((1, 9, 4, 6), 16): 1, ((9, 1, 6, 8), 62): 1, ((1, 4, 4, 9), 14): 1, ((1, 4, 4, 6), 11): 1, ((3, 4, 3, 1), 7): 1, ((2, 4, 7, 7), 16): 1, ((1, 7, 0, 4), 13): 1, ((1, 6, 1, 9), 14): 1, ((2, 4, 1, 0), 3): 1, ((1, 3, 4, 2), 7): 1, ((6, 2, 1, 7), 5): 1, ((7, 9, 4, 8), 76): 1, ((9, 1, 4, 8), 44): 1, ((2, 8, 9, 3), 13): 1, ((9, 5, 2, 1), 73): 1, ((0, 4, 1, 3), 4): 1, ((4, 4, 3, 5), 12): 1, ((3, 9, 5, 0), 8): 1, ((7, 9, 7, 1), 16): 1, ((0, 7, 5, 0), 6): 1, ((6, 1, 4, 6), 11): 1, ((3, 1, 4, 5), 17): 1, ((2, 1, 1, 5), 8): 1, ((1, 3, 2, 1), 4): 1, ((9, 9, 8, 5), 22): 1, ((6, 4, 5, 8), 38): 1, ((3, 7, 1, 8), 18): 1, ((6, 3, 1, 2), 10): 1, ((3, 4, 7, 8), 168): 1, ((7, 1, 2, 4), 13): 1, ((2, 2, 6, 8), 6): 1, ((4, 3, 4, 5), 12): 1, ((8, 6, 4, 5), 14): 1, ((1, 9, 6, 3), 13): 1, ((8, 6, 5, 8), 15): 1, ((4, 4, 4, 6), 11): 1, ((3, 9, 0, 3), 6): 1, ((7, 4, 4, 0), 12): 1, ((4, 3, 4, 7), 15): 1, ((4, 4, 7, 9), 17): 1, ((2, 9, 2, 9), 12): 1, ((1, 8, 8, 5), 65): 1})
Symbol-12 (int -> int -> int -> int -> int), Samples:  87,  Counter({((2, 0, 4, 0), 2): 2, ((8, 7, 4, 0), 8): 2, ((6, 4, 1, 1), 7): 2, ((4, 6, 4, 0), 4): 2, ((7, 4, 2, 5), 17): 2, ((0, 4, 7, 4), 28): 2, ((5, 9, 7, 3), 26): 2, ((3, 3, 4, 1), 7): 2, ((9, 4, 7, 7), 58): 2, ((4, 7, 2, 8), 62): 2, ((3, 5, 2, 6), 15): 2, ((5, 9, 4, 8), 37): 1, ((3, 1, 9, 2), 21): 1, ((1, 7, 7, 2), 15): 1, ((4, 8, 9, 8), 76): 1, ((6, 9, 7, 8), 62): 1, ((2, 4, 6, 4), 48): 1, ((3, 4, 0, 0), 3): 1, ((3, 1, 4, 7), 84): 1, ((1, 5, 4, 1), 5): 1, ((9, 7, 1, 0), 9): 1, ((8, 8, 3, 1), 25): 1, ((8, 3, 2, 3), 14): 1, ((1, 4, 8, 8), 65): 1, ((9, 4, 6, 6), 45): 1, ((5, 4, 7, 7), 54): 1, ((3, 4, 9, 2), 21): 1, ((9, 7, 1, 7), 58): 1, ((1, 9, 4, 2), 13): 1, ((8, 1, 6, 1), 14): 1, ((2, 7, 4, 9), 38): 1, ((6, 1, 8, 3), 4): 1, ((3, 6, 8, 6), 30): 1, ((2, 1, 7, 1), 9): 1, ((8, 1, 3, 7), 168): 1, ((9, 1, 0, 0), 9): 1, ((9, 1, 2, 5), 23): 1, ((5, 4, 5, 1), 26): 1, ((1, 4, 8, 1), 9): 1, ((9, 1, 4, 9), 19): 1, ((1, 4, 3, 3), 16): 1, ((4, 2, 7, 7), 13): 1, ((9, 2, 8, 7), 126): 1, ((9, 2, 8, 6), 6): 1, ((3, 7, 4, 8), 18): 1, ((5, 4, 2, 1), 11): 1, ((2, 5, 8, 8), 42): 1, ((4, 4, 3, 3), 13): 1, ((1, 1, 3, 1), 4): 1, ((1, 4, 3, 5), 16): 1, ((9, 4, 1, 0), 9): 1, ((2, 2, 7, 0), 21): 1, ((8, 6, 6, 1), 14): 1, ((3, 5, 6, 1), 15): 1, ((3, 8, 0, 0), 3): 1, ((7, 7, 4, 1), 7): 1, ((2, 1, 4, 5), 8): 1, ((2, 4, 7, 1), 9): 1, ((4, 4, 9, 8), 76): 1, ((9, 4, 0, 7), 70): 1, ((6, 4, 2, 0), 6): 1, ((7, 2, 1, 4), 11): 1, ((2, 1, 0, 5), 7): 1, ((8, 5, 4, 3), 16): 1, ((3, 1, 4, 1), 7): 1, ((7, 4, 7, 4), 12): 1, ((7, 6, 0, 7), 7): 1, ((7, 6, 1, 1), 168): 1, ((0, 1, 0, 3), 4): 1, ((4, 4, 7, 5), 12): 1, ((1, 4, 4, 3), 13): 1, ((3, 6, 6, 5), 33): 1, ((2, 1, 3, 8), 42): 1, ((7, 5, 6, 9), 315): 1, ((4, 8, 0, 1), 13): 1, ((9, 4, 9, 5), 59): 1})
0.000000	t0	$_
0.000000	int	0
0.000000	int -> int	incr
0.000000	int -> int	decr0
0.000000	t0 -> t0 -> t0 -> t0	if0
0.000000	t0 -> t1 -> ((t0 -> t1 -> t2) -> t0 -> t1 -> t2) -> t2	fix2
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0))))))))) $0 (if0 $0 0 ($2 $0 (decr0 $1))))))))))
0.000000	int -> int -> int	#(lambda (lambda (fix2 $1 $0 (lambda (lambda (lambda (if0 $1 $0 ($2 (decr0 $1) (incr $0)))))))))
